{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Email.ts","webpack:///./src/app/api.service.mail.ts","webpack:///./src/app/api.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/bulk-upload/bulk-upload.component.css","webpack:///./src/app/bulk-upload/bulk-upload.component.html","webpack:///./src/app/bulk-upload/bulk-upload.component.ts","webpack:///./src/app/college-registration-grid/college-registration-grid.component.css","webpack:///./src/app/college-registration-grid/college-registration-grid.component.html","webpack:///./src/app/college-registration-grid/college-registration-grid.component.ts","webpack:///./src/app/college-registration/college-registration.component.css","webpack:///./src/app/college-registration/college-registration.component.html","webpack:///./src/app/college-registration/college-registration.component.ts","webpack:///./src/app/events/add-event.component.css","webpack:///./src/app/events/add-event.component.html","webpack:///./src/app/events/add-event.component.ts","webpack:///./src/app/events/event-list.component.html","webpack:///./src/app/events/event-list.component.ts","webpack:///./src/app/events/renderer/button-renderer.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/form-modal/form-modal.component.css","webpack:///./src/app/form-modal/form-modal.component.html","webpack:///./src/app/form-modal/form-modal.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/inventory-data/inventory-data.component.css","webpack:///./src/app/inventory-data/inventory-data.component.html","webpack:///./src/app/inventory-data/inventory-data.component.ts","webpack:///./src/app/inventory-data/inventory-list.component.css","webpack:///./src/app/inventory-data/inventory-list.component.html","webpack:///./src/app/inventory-data/inventory-list.component.ts","webpack:///./src/app/inventory-data/inventorydata.service.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/model/model.user.ts","webpack:///./src/app/partner-ngo-grid/partner-ngo-grid.component.css","webpack:///./src/app/partner-ngo-grid/partner-ngo-grid.component.html","webpack:///./src/app/partner-ngo-grid/partner-ngo-grid.component.ts","webpack:///./src/app/partner-ngo/partner-ngo.component.css","webpack:///./src/app/partner-ngo/partner-ngo.component.html","webpack:///./src/app/partner-ngo/partner-ngo.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/registered-events/registered-events.component.css","webpack:///./src/app/registered-events/registered-events.component.html","webpack:///./src/app/registered-events/registered-events.component.ts","webpack:///./src/app/reset/reset.component.css","webpack:///./src/app/reset/reset.component.html","webpack:///./src/app/reset/reset.component.ts","webpack:///./src/app/selectablevolunteer/selectablevolunteer.component.css","webpack:///./src/app/selectablevolunteer/selectablevolunteer.component.html","webpack:///./src/app/selectablevolunteer/selectablevolunteer.component.ts","webpack:///./src/app/send-mail/send-mail.component.css","webpack:///./src/app/send-mail/send-mail.component.html","webpack:///./src/app/send-mail/send-mail.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/upload.service.ts","webpack:///./src/app/urlPermission/url.permission.ts","webpack:///./src/app/volunteer-grid/volunteer-grid.component.css","webpack:///./src/app/volunteer-grid/volunteer-grid.component.html","webpack:///./src/app/volunteer-grid/volunteer-grid.component.ts","webpack:///./src/app/volunteer/volunteer.component.css","webpack:///./src/app/volunteer/volunteer.component.html","webpack:///./src/app/volunteer/volunteer.component.ts","webpack:///./src/app/welcome/welcome.component.css","webpack:///./src/app/welcome/welcome.component.html","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/app/xhrInterceptor.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import{Eventdata} from \"./events/add-event.component\"\r\nexport class Email\r\n{\r\n  to:string;\r\n  cc:string;\r\n  bcc:string;\r\n  subject:string;\r\n  text:string;\r\n  eventId: number;\r\n\r\n  constructor(values:Object={})\r\n  {\r\n    Object.assign(this,values);\r\n  }\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\nimport { Router, ActivatedRoute, Params, Data } from '@angular/router';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiServiceMail {\r\n\r\n  private basicURL:string=\"/sendEmail\"\r\n  private stagingEmailURL:string=\"/staging/email/save\"\r\n  private basicURLVolunteer:string=\"/api\"\r\n  private urlList=new Map<string, string>();\r\n\r\n  constructor(private http:HttpClient,public router:Router) {\r\n    this.initialiseUrlList();\r\n  }\r\n\r\n  initialiseUrlList():void{\r\n    this.urlList.set('send', '/send');\r\n    this.urlList.set('getEmail','/volunteer/email');\r\n  }\r\n  postData(data){\r\n    console.log('postingggg', data);\r\n    this.http.post(this.basicURL+this.urlList.get(\"send\"),data).subscribe(response=>{\r\n      console.log('postResponse: ',response);\r\n      alert(\"Sucessfully Sent Email\");\r\n      alert(\"Response is\"+ response);\r\n      this.router.navigate(['/events']);\r\n    });\r\n  }\r\n  getData(){\r\n    let uri : string =this.basicURLVolunteer+this.urlList.get(\"getEmail\");\r\n    return this.http.get(uri);\r\n  }\r\n\r\n  saveToStagingEmail(data){\r\n\r\n   this.http.post(this.stagingEmailURL,data).subscribe(response=>{\r\n        console.log('saveToStagingEmail:: response: ',response);\r\n        alert(\"Email Submission triggered\");\r\n        this.router.navigate(['/events']);\r\n      });\r\n  }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  private basicURL:string=\"/api\"\r\n\r\n  private urlList=new Map<string, string>();\r\n\r\n  constructor(private http:HttpClient) {\r\n    this.initialiseUrlList();\r\n  }\r\n\r\n  initialiseUrlList():void{\r\n    this.urlList.set('partnerngo', '/partnerngo');\r\n    this.urlList.set('event','/event');\r\n    this.urlList.set('events','/events');\r\n    this.urlList.set('volunteer','/volunteer');\r\n    this.urlList.set('collegeregistration','/collegeregistration');\r\n    this.urlList.set('interestedAreasCategory','/interestedAreasCategory');\r\n    this.urlList.set('preresetpassword','/preresetpassword');\r\n    this.urlList.set('resetpassword','/resetpassword');\r\n    this.urlList.set('registered-events','/registered-events');\r\n    this.urlList.set('collegeregistration-list','/collegeregistration/list')\r\n    this.urlList.set('volunteerAccepted','/getAllInformation');\r\n    this.urlList.set('bulkSave','/bulk/save');\r\n    this.urlList.set('event-update','/event/update');\r\n  }\r\n\r\n   postData(data:any, type:string) {\r\n       return this.post(data, type).subscribe(response=>{\r\n         console.log('postResponse: ',response);\r\n\r\n       });\r\n     }\r\n\r\n     post(data:any, type:string) {\r\n      return this.http.post(this.basicURL+this.urlList.get(type),data);\r\n     }\r\n     \r\n  getData(type:string, id?:any, formatted?:boolean){\r\n    let uri : string =this.basicURL+this.urlList.get(type);\r\n    console.log(uri);\r\n    if(id){\r\n      uri = uri + '/' + id;\r\n      if(formatted){\r\n        uri = uri + '/' + 'formatted';\r\n      }\r\n    }\r\n    console.log(uri);\r\n    return(this.http.get(uri));\r\n  }\r\n\r\n  putData(data:any,id:any,type:string){\r\n    return this.http.put(this.basicURL+this.urlList.get(type)+\"/\"+id,data).subscribe(response=>{\r\n      console.log('updating:',response);\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { PartnerNGOComponent } from './partner-ngo/partner-ngo.component';\r\nimport { EventListComponent } from './events/event-list.component';\r\nimport { AddEventComponent } from './events/add-event.component';\r\nimport {VolunteerComponent}  from './volunteer/volunteer.component';\r\nimport { InventoryDataComponent } from './inventory-data/inventory-data.component';\r\nimport { CollegeRegistrationComponent } from './college-registration/college-registration.component';\r\nimport {SendMailComponent} from \"./send-mail/send-mail.component\";\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { InventoryListComponent } from './inventory-data/inventory-list.component';\r\nimport { PartnerNgoGridComponent } from './partner-ngo-grid/partner-ngo-grid.component';\r\nimport { CollegeRegistrationGridComponent } from './college-registration-grid/college-registration-grid.component';\r\nimport { LoginComponent}from './login/login.component';\r\nimport { ResetComponent}from './reset/reset.component';\r\nimport { RegisteredEventsComponent}from './registered-events/registered-events.component';\r\nimport {RegisterComponent}from \"./register/register.component\";\r\nimport {VolunteerGridComponent} from './volunteer-grid/volunteer-grid.component';\r\nimport{SelectablevolunteerComponent} from './selectablevolunteer/selectablevolunteer.component';\r\n\r\nimport { BulkUploadComponent } from './bulk-upload/bulk-upload.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'collegeregistration', children:[\r\n    { path: '', component:CollegeRegistrationComponent },\r\n    { path: ':mode/:id', component: CollegeRegistrationComponent}\r\n    ]\r\n    },\r\n    {\r\n      path: 'grid/collegeregistration', component: CollegeRegistrationGridComponent\r\n    },\r\n    {\r\n      path: 'bulk/volunteer', component: BulkUploadComponent\r\n    },\r\n{\r\npath: 'login', component: LoginComponent\r\n},\r\n  {\r\n    path: 'inventorydata', children:[\r\n      {path: '', component:InventoryDataComponent},\r\n      { path: ':mode', component: InventoryDataComponent}\r\n    ]\r\n  },\r\n  {\r\n    path:'inventorylist',component:InventoryListComponent\r\n  },\r\n  {\r\n  path: 'grid/partnerngo', component: PartnerNgoGridComponent\r\n  },\r\n\r\n  {\r\n    path: 'partnerngo', children:[\r\n      {path: '', component:PartnerNGOComponent},\r\n      { path: ':mode/:id', component: PartnerNGOComponent}\r\n    ]\r\n  },\r\n  {path:'events',component:EventListComponent},\r\n  {path:'home',component:WelcomeComponent},\r\n  {path:'reset',component:ResetComponent},\r\n  {path:'registered-events',component:RegisteredEventsComponent},\r\n  {path:'addevent',component:AddEventComponent},\r\n  {\r\n    path:'email',component:SendMailComponent\r\n  },\r\n   {\r\n    path: 'grid/volunteer', component: VolunteerGridComponent\r\n    },\r\n  {\r\n  path: 'volunteer', children:[\r\n   {path: '', component: VolunteerComponent},\r\n  {path: ':mode/:id', component: VolunteerComponent}\r\n  ]\r\n  },\r\n\r\n{\r\n\r\npath: '**', redirectTo: 'home'\r\n},\r\n{\r\npath: 'register', component: RegisterComponent\r\n  },\r\n  {\r\n    path:'selectVolenteer',component:SelectablevolunteerComponent\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"#app-root-container{\\r\\nwidth:100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9hcHAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLFVBQVU7QUFDViIsImZpbGUiOiJhcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjYXBwLXJvb3QtY29udGFpbmVye1xyXG53aWR0aDoxMDAlO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<nav class=\\\"navbar navbar-default navbar-fixed-top\\\" style=\\\"background-color: #ba2a29;margin-bottom:20px;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\" style=\\\"height:70px\\\">\\r\\n      <img src=\\\"/assets/youth-for-seva.png\\\" style=\\\"height:50px\\\">\\r\\n    </a>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse\\\">\\r\\n      <ul class=\\\"nav navbar-nav navbar-right text-white\\\" style=\\\"margin-top:12px;\\\">\\r\\n        <li><a [routerLink]=\\\"['/home']\\\">HOME</a></li>\\r\\n        <li *ngIf=isUser()><a [routerLink]=\\\"['/registered-events']\\\">Accepted Events</a></li>\\r\\n        <li class=\\\"dropdown\\\" *ngIf=isAdmin()>\\r\\n          <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\">REGISTER\\r\\n            <span class=\\\"caret\\\"></span></a>\\r\\n          <ul class=\\\"dropdown-menu\\\">\\r\\n            <li><a [routerLink]=\\\"['/grid/partnerngo']\\\">Partner NGO</a></li>\\r\\n            <li><a [routerLink]=\\\"['/grid/volunteer']\\\">Volunteer</a></li>\\r\\n            <li><a [routerLink]=\\\"['/grid/collegeregistration']\\\">College</a></li>\\r\\n            <li><a [routerLink]=\\\"['/inventorylist']\\\">Inventory Data</a></li>\\r\\n          </ul>\\r\\n        </li>\\r\\n        <li *ngIf=isAdmin()><a [routerLink]=\\\"['/events']\\\">EVENTS</a></li>\\r\\n\\r\\n        <li *ngIf=!app.authenticated><a [routerLink]=\\\"['/login']\\\">LOGIN</a></li>\\r\\n        <li *ngIf=app.authenticated><a href=\\\"#\\\" (click)=\\\"logout()\\\">LOGOUT</a></li>\\r\\n        <!--<li><a [routerLink]=\\\"\\\">CONTACT</a></li>-->\\r\\n        <!--<li><a [routerLink]=\\\"\\\"><span class=\\\"glyphicon glyphicon-search\\\"></span></a></li>-->\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<div id=\\\"app-root-container\\\" class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!--<footer></footer>-->\\r\\n\"","import { Component } from '@angular/core';\r\nimport { AppService } from './app.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Y4S';\r\n  static API_URL = 'http://localhost:8080';\r\n\r\n\r\n  constructor(private app: AppService, private http: HttpClient, private router: Router) {\r\n        this.app.authenticate(undefined, undefined);\r\n      }\r\n\r\n      isAdmin() {\r\n        return  this.app.authenticated && this.app.role == 'ROLE_ADMIN';\r\n      }\r\n      isUser() {\r\n              return  this.app.authenticated && this.app.role == 'ROLE_USER';\r\n            }\r\n\r\n\r\n   logout() {\r\n    this.http.get('api/logout').subscribe((response)=>{\r\n      this.app.authenticated = false;\r\n      this.router.navigateByUrl('/login');}\r\n      );\r\n   }\r\n}\r\n"," import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule,NO_ERRORS_SCHEMA, Injectable } from '@angular/core';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { PartnerNGOComponent } from './partner-ngo/partner-ngo.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AlertModule } from 'ngx-bootstrap';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { EventListComponent } from './events/event-list.component';\r\nimport { AddEventComponent } from './events/add-event.component';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\r\nimport {TypeaheadModule} from 'ngx-bootstrap/typeahead';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { VolunteerComponent } from './volunteer/volunteer.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS, HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\r\nimport {HttpModule} from '@angular/http';\r\nimport { InventoryDataComponent } from './inventory-data/inventory-data.component';\r\nimport { CollegeRegistrationComponent } from './college-registration/college-registration.component';\r\nimport { SendMailComponent } from './send-mail/send-mail.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\r\nimport { InventoryListComponent } from './inventory-data/inventory-list.component';\r\nimport { PartnerNgoGridComponent } from './partner-ngo-grid/partner-ngo-grid.component';\r\nimport { CollegeRegistrationGridComponent } from './college-registration-grid/college-registration-grid.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {UrlPermission } from './urlPermission/url.permission';\r\nimport {UserService} from './services/user.service';\r\nimport {AuthService} from './services/auth.service';\r\nimport {AppService} from './app.service';\r\nimport {VolunteerGridComponent} from './volunteer-grid/volunteer-grid.component';\r\n//import{EventEmiterService} from './event-emmiter-service1.service';\r\nimport { ButtonRendererComponent } from './events/renderer/button-renderer.component';\r\nimport { XhrInterceptor } from './xhrInterceptor';\r\nimport { ResetComponent } from './reset/reset.component';\r\nimport { RegisteredEventsComponent } from './registered-events/registered-events.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormModalComponent } from './form-modal/form-modal.component';\r\nimport { SelectablevolunteerComponent } from './selectablevolunteer/selectablevolunteer.component';\r\nimport { BulkUploadComponent } from './bulk-upload/bulk-upload.component';\r\n\r\n@NgModule({\r\ndeclarations: [\r\nAppComponent,\r\nPartnerNGOComponent,\r\nHeaderComponent,\r\nFooterComponent,\r\nEventListComponent,\r\nAddEventComponent,\r\nVolunteerComponent,\r\nInventoryDataComponent,\r\nCollegeRegistrationComponent,\r\nSendMailComponent,\r\nWelcomeComponent,\r\n    InventoryListComponent,\r\n    PartnerNgoGridComponent,\r\n    CollegeRegistrationGridComponent,\r\n  VolunteerGridComponent,\r\n  LoginComponent,\r\nRegisterComponent,\r\nButtonRendererComponent,\r\nResetComponent,\r\nRegisteredEventsComponent,\r\nFormModalComponent,\r\nSelectablevolunteerComponent,\r\nBulkUploadComponent\r\n\r\n  ],\r\n  imports: [\r\n    AgGridModule.withComponents([ButtonRendererComponent]),\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    AlertModule.forRoot(),\r\n    AgGridModule.withComponents([]),\r\n    BsDatepickerModule.forRoot(),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TimepickerModule.forRoot(),\r\n    TypeaheadModule.forRoot(),\r\n    AngularMultiSelectModule,\r\n    HttpModule,\r\n    NgbModule.forRoot(),\r\n  ],\r\n\r\n  schemas:[NO_ERRORS_SCHEMA],\r\n  providers: [AuthService, UserService, UrlPermission, AppService, { provide: HTTP_INTERCEPTORS, useClass: XhrInterceptor, multi: true }],\r\n  entryComponents:[FormModalComponent],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n\r\n  authenticated = false;\r\n  role =\"\";\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  authenticate(credentials, callback) {\r\n\r\n        const headers = new HttpHeaders(credentials ? {\r\n            authorization : 'Basic ' + btoa(credentials.username + ':' + credentials.password)\r\n        } : {});\r\n\r\n        this.http.get('api/user', {headers: headers}).subscribe(response => {\r\n            if (response && response['name']) {\r\n                this.authenticated = true;\r\n                if(response['principal']) {this.role = response['principal']['role'];}\r\n            } else {\r\n                this.authenticated = false;\r\n            }\r\n            return callback && callback();\r\n        });\r\n\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYnVsay11cGxvYWQvYnVsay11cGxvYWQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n  <div>\\r\\n    <a href={{fileUrl}} download>\\r\\n      <button class=\\\"btn btn-sm btn-primary\\\">Download Template</button>\\r\\n    </a>\\r\\n    <div class=\\\"pull-right\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#content\\\">Upload Template</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"data.length\\\">\\r\\n    <div class=\\\"page-header well text-center well-sm\\\">\\r\\n      <h5><strong> Uploaded Volunteer Data </strong></h5>\\r\\n    </div>\\r\\n    \\r\\n    <div  #bulkGrid  style=\\\"width: 100%; height: 100%;\\\">\\r\\n      <ag-grid-angular style=\\\"height: 100%;\\\"\\r\\n        class=\\\"ag-theme-balham\\\" \\r\\n        [rowData]=\\\"data\\\" \\r\\n        [columnDefs]=\\\"headers\\\"\\r\\n      >\\r\\n      </ag-grid-angular>\\r\\n    </div>\\r\\n    <div class=\\\"pull-right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-space\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"content\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"FileUpload\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header card-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" aria-hidden=\\\"true\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">File Upload</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <input type=\\\"file\\\" (change)=\\\"selectFile($event)\\\" placeholder=\\\"Upload file\\\" accept=\\\".xls, .xlsx\\\">\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button class=\\\"btn btn-sm btn-primary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n        <button class=\\\"btn btn-sm btn-primary\\\" [disabled]=\\\"!selectedFiles\\\" (click)=\\\"upload()\\\">Add File</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UploadService } from '../upload.service';\r\nimport { Router } from '@angular/router';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-bulk-upload',\r\n  templateUrl: './bulk-upload.component.html',\r\n  styleUrls: ['./bulk-upload.component.css'],\r\n})\r\nexport class BulkUploadComponent implements OnInit {\r\n\r\n  selectedFiles: FileList;\r\n  currentUploadedFile: File;\r\n  fileUrl;\r\n\r\n  private data:any=[];\r\n  private uploadResponse:any=[];\r\n  private headers=[\r\n    {headerName: 'Status', field: 'status'},\r\n    {headerName: 'First Name', field: 'firstName',filter:true, sortable: true },\r\n    {headerName: 'Last Name', field: 'lastName',filter:true},\r\n    {headerName: 'Phone Number', field: 'phoneNumber',filter:true},\r\n    {headerName: 'Alternate Phone Number', field: 'alternatePhoneNumber',filter:true},\r\n    {headerName: 'EmailId', field: 'email',filter:true},\r\n    {headerName: 'Locality', field: 'locality',filter:true},\r\n    {headerName: 'City', field: 'city',filter:true},\r\n    {headerName: 'State', field: 'state',filter:true},\r\n    {headerName: 'PinCode', field: 'pincode',filter:true},\r\n    {headerName: 'Interested Areas', field: 'formattedInterestedAreas'}\r\n  ];\r\n  private bulkGrid:any;\r\n\r\n  constructor(private uploadService: UploadService,\r\n              private router: Router) {\r\n              }\r\n\r\n  ngOnInit() {\r\n    this.fileUrl = \"/assets/Volunteer Template.xls\"\r\n  }\r\n\r\n  selectFile(event){\r\n    this.selectedFiles = event.target.files;\r\n    console.log('file uploaded: ');\r\n    console.log(event.target.files);\r\n  }\r\n\r\n  downloadTemplate(){\r\n    \r\n  }\r\n\r\n  upload(){\r\n    $(\"#content\").modal('toggle');\r\n    this.currentUploadedFile = this.selectedFiles.item(0);\r\n    this.uploadService.pushFileData(this.currentUploadedFile).subscribe(result=>{\r\n      console.log(\"Upload Response\" + result);\r\n      let response = JSON.parse(JSON.stringify(result));\r\n      if(response.status && response.status===200){\r\n        this.uploadResponse = response.body;\r\n        let volunteers =[];\r\n        (response.body).forEach(element => {\r\n          let volunteer={};\r\n          if(element.errors.length){\r\n            Object.assign(volunteer, {\"status\" : element.errors.toString()});\r\n          }else{\r\n            Object.assign(volunteer, {\"status\" : \"No Errors\"});\r\n          }\r\n          Object.assign(volunteer, element.volunteer);\r\n          let interestedAreas = [];\r\n          (element.volunteer.interestedAreas).forEach(interestedArea => {\r\n            interestedAreas.push(interestedArea[\"interestedArea\"]);\r\n          });\r\n          Object.assign(volunteer, {formattedInterestedAreas : interestedAreas});\r\n          volunteers.push(volunteer);\r\n        });\r\n        this.data = volunteers;\r\n        alert(\"Only data with no errors were saved\");\r\n      }\r\n      console.log(\"Upload Parsed Response\" + result);\r\n    });\r\n  }\r\n\r\n  close(){\r\n    alert(\"Please correct and reupload data with errors\");\r\n    this.router.navigateByUrl(\"/grid/volunteer\");\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29sbGVnZS1yZWdpc3RyYXRpb24tZ3JpZC9jb2xsZWdlLXJlZ2lzdHJhdGlvbi1ncmlkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"page-header well text-center well-sm\\\">\\r\\n    <h3><strong> College Registration</strong></h3>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" style=\\\"margin-top:10px\\\">\\r\\n\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div style=\\\"text-align:right\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"router.navigate(['/collegeregistration'])\\\">\\r\\n          Add College\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div  #myGrid  style=\\\"height: 110%;margin-top:10px\\\">\\r\\n    <ag-grid-angular style=\\\"height: 110%;\\\"\\r\\n      class=\\\"ag-theme-balham\\\" \\r\\n      [rowData]=\\\"data\\\" \\r\\n      [columnDefs]=\\\"headers\\\"\\r\\n      (rowClicked)=\\\"onRowCilcked($event)\\\">\\r\\n    </ag-grid-angular>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-college-registration-grid',\r\n  templateUrl: './college-registration-grid.component.html',\r\n  styleUrls: ['./college-registration-grid.component.css']\r\n})\r\nexport class CollegeRegistrationGridComponent implements OnInit {\r\n\r\n  private data:any=[];\r\n  private headers=[\r\n    {headerName: 'College Name', field: 'name',filter:true, sortable: true },\r\n    {headerName: 'Registration Id', field: 'registrationId',filter:true},\r\n    {headerName: 'Address Line 1', field: 'addressLine1',filter:true},\r\n    {headerName: 'Address Line 2', field: 'addressLine2',filter:true},\r\n    {headerName: 'City', field: 'city',filter:true},\r\n    {headerName: 'State', field: 'state',filter:true},\r\n    {headerName: 'Pincode', field: 'pincode',filter:true},\r\n \r\n    {headerName: 'Mou ID', field: 'mouID',filter:true},\r\n    {headerName: 'Mou Status', field: 'mouStatus'},\r\n    {headerName: 'Mou Name', field: 'mouName'},\r\n    {headerName: 'Number Of Events Agreed', field: 'noOfEvents'},\r\n    {headerName: 'Valid From', field: 'fromDate'},\r\n    {headerName: 'Valid To', field: 'toDate'},\r\n    {headerName: 'Comments', field: 'comments'}\r\n  ];\r\n  private myGrid: any;\r\n  private gridApi: any;\r\n\r\n  constructor(private apiService:ApiService,\r\n              private router:Router) { }\r\n\r\n  ngOnInit() {\r\n    let rows=[];\r\n    this.apiService.getData('collegeregistration').subscribe(response=>{\r\n      let result:any=JSON.parse(JSON.stringify(response));\r\n      Array.from(result).forEach(element => {\r\n        let collegeDetails = JSON.parse(JSON.stringify(element));\r\n        let mouDetails=collegeDetails.mouDetails;\r\n        console.log(mouDetails);\r\n\r\n        Array.from(mouDetails).forEach(detail => {\r\n          let mou = JSON.parse(JSON.stringify(detail));\r\n          if(mou!=null){\r\n            let collegeMou = {};\r\n            Object.assign(collegeMou, collegeDetails)\r\n            Object.assign(collegeMou, {mouID: mou.mouID});\r\n            Object.assign(collegeMou, {mouStatus: mou.mouStatus});\r\n            Object.assign(collegeMou, {mouName: mou.mouName});\r\n            Object.assign(collegeMou, {noOfEvents: mou.noOfEvents});\r\n            Object.assign(collegeMou, {fromDate: mou.fromDate});\r\n            Object.assign(collegeMou, {toDate: mou.toDate});\r\n            Object.assign(collegeMou, {comments: mou.comments});\r\n            rows.push(collegeMou);\r\n          }\r\n        });\r\n      });\r\n      console.log(response);\r\n      this.data=rows;\r\n      console.log(this.data);\r\n\r\n    });\r\n  }\r\n\r\n  onRowCilcked(event){\r\n    console.log(event.rowIndex);\r\n    this.router.navigateByUrl(\"/collegeregistration/edit/\"+((event.rowIndex)+1));\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29sbGVnZS1yZWdpc3RyYXRpb24vY29sbGVnZS1yZWdpc3RyYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"page-header well well-sm\\\">\\r\\n    <h3><strong> College Registration</strong></h3>\\r\\n  </div>\\r\\n\\r\\n  <form [formGroup]=\\\"collegeForm\\\">\\r\\n    <div class=\\\"panel panel-info\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <label>About College</label>\\r\\n      </div>\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <div formGroupName=\\\"collegeDetails\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n              <div class=\\\"form-group required\\\">\\r\\n                <label class=\\\"control-label\\\">College Name</label>\\r\\n                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control well well-sm\\\">\\r\\n               <!-- <div *ngIf=\\\"collegeForm.controls['collegeDetails'].controls.name.errors&&(collegeForm.controls['collegeDetails'].controls.name.dirty||collegeForm.controls['collegeDetails'].controls.name.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"collegeForm.controls['collegeDetails'].controls.name.errors.required\\\" class=\\\"field-invalid\\\">Name is required</div>\\r\\n                </div>-->\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"control-label\\\">Registration Id</label>\\r\\n                <input type=\\\"text\\\" formControlName=\\\"registrationId\\\" class=\\\"form-control well well-sm\\\">\\r\\n                <!--<div *ngIf=\\\"collegeform.controls['collegeDetails'].controls.registrationId.errors&&(collegeform.controls['collegeDetails'].controls.registrationId.dirty||collegeform.controls['collegeDetails'].controls.registrationId.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"collegeform.controls['collegeDetails'].controls.registrationId.errors.required\\\" class=\\\"field-invalid\\\"> RegistrationId is required</div>\\r\\n                </div>-->\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"panel panel-info\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <label>Address</label>\\r\\n      </div>\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <div formGroupName=\\\"address\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n              <div class=\\\"form-group required\\\">\\r\\n                <label class=\\\"control-label\\\">Address Line 1</label>\\r\\n                <input type=\\\"text\\\" formControlName=\\\"addressLine1\\\" class=\\\"form-control well well-sm\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"control-label\\\">Address Line 2</label>\\r\\n                <input type=\\\"text\\\" formControlName=\\\"addressLine2\\\" class=\\\"form-control well well-sm\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n              <div class=\\\"form-group required\\\">\\r\\n                <label class=\\\"control-label\\\">City</label>\\r\\n                <input type=\\\"text\\\" formControlName=\\\"city\\\" class=\\\"form-control well well-sm\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n              <div class=\\\"form-group required\\\">\\r\\n                <label class=\\\"control-label\\\">State</label>\\r\\n                <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control well well-sm\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n              <div class=\\\"form-group required\\\">\\r\\n                <label class=\\\"control-label\\\">Pincode</label>\\r\\n                <input type=\\\"text\\\" formControlName=\\\"pincode\\\" class=\\\"form-control well well-sm\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"panel panel-info\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <label>MOU Details</label>\\r\\n      </div>\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <ul class=\\\"nav nav-tabs\\\" active=\\\"selectedTab\\\">\\r\\n          <li class=\\\"nav active\\\" *ngIf=\\\"numberOfMOUs>0\\\"><a href=\\\"#tab0\\\" data-toggle=\\\"tab\\\" (click)=\\\"activateTab(1)\\\">MOU\\r\\n              1</a></li>\\r\\n          <li class=\\\"nav\\\" *ngFor=\\\"let num of getArray(numberOfMOUs-1); let i=index;\\\"><a href=\\\"#tab{{i+1}}\\\" data-toggle=\\\"tab\\\"\\r\\n              (click)=\\\"activateTab(i+2)\\\">MOU {{i+2}}</a></li>\\r\\n\\r\\n          <div class=\\\"pull-right\\\">\\r\\n            <button class=\\\"btn btn-primary btn-sm btn-space\\\" (click)=addMOU() [disabled]=\\\"isMaxLimitReached(10)\\\">Add MOU</button>\\r\\n            <button class=\\\"btn btn-primary btn-sm \\\" (click)=removeMOU() >Remove MOU</button>\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </ul>\\r\\n\\r\\n        <div class=\\\"tab-content\\\">\\r\\n          <div formArrayName=\\\"mouDetails\\\">\\r\\n            <div class=\\\"tab-pane\\\" *ngFor=\\\"let person of collegeForm.get('mouDetails').controls;let i=index\\\"\\r\\n              formGroupName=\\\"{{i}}\\\" id=\\\"tab{{i}}\\\">\\r\\n\\r\\n              <div *ngIf=\\\"selectedTab==i\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  \\r\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                    <div class=\\\"form-group required\\\">\\r\\n                      <label class=\\\"control-label\\\">MOU STATUS</label>\\r\\n                      <!-- <input type=\\\"text\\\" formControlName=\\\"mouStatus\\\" class=\\\"form-control well well-sm\\\"> -->\\r\\n                      <select formControlName=\\\"mouStatus\\\" class=\\\"form-control\\\">\\r\\n                        <option *ngFor=\\\"let action of moustatusinfo\\\" [value]=\\\"action\\\">{{action}}</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                    <div class=\\\"form-group required\\\">\\r\\n                      <label class=\\\"control-label\\\">MOU Name</label>\\r\\n                      <input type=\\\"text\\\" style=\\\"text-transform:uppercase\\\" formControlName=\\\"mouName\\\" class=\\\"form-control well well-sm\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"control-label\\\">Number Of Events Agreed</label>\\r\\n                      <input type=\\\"text\\\" formControlName=\\\"noOfEvents\\\" class=\\\"form-control well well-sm\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                    <div class=\\\"form-group required\\\">\\r\\n                      <label class=\\\"control-label\\\">Valid From</label>\\r\\n                      <input type=\\\"text\\\" formControlName=\\\"fromDate\\\" class=\\\"form-control well well-sm\\\" bsDatepicker [bsConfig]=\\\"{dateinputFormat:'DD/MM/YYYY'}\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                    <div class=\\\"form-group required\\\">\\r\\n                      <label class=\\\"control-label\\\">Valid To</label>\\r\\n                      <input type=\\\"text\\\" formControlName=\\\"toDate\\\" class=\\\"form-control well well-sm\\\" bsDatepicker [bsConfig]=\\\"{dateinputFormat:'DD/MM/YYYY'}\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"control-label\\\">Comments</label>\\r\\n                      <textarea type=\\\"text\\\" formControlName=\\\"comments\\\" class=\\\"form-control well well-sm\\\"></textarea>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <!--<button class=\\\"btn btn-primary btn-sx\\\"  (click)=\\\"onSubmit()\\\">Register</button>-->\\r\\n    <button (click)=\\\"onSubmit()\\\" *ngIf=\\\"!mode\\\" class=\\\"btn btn-primary btn-space\\\">Register</button>\\r\\n    <button (click)=\\\"onSubmit()\\\" *ngIf=\\\"mode=='edit'\\\" class=\\\"btn btn-primary btn-space\\\">Update</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { FormsModule, FormGroup, FormControl, Validators, FormBuilder, FormArray } from '@angular/forms';\r\nimport { ApiService } from '../api.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n  selector: 'app-college-registration',\r\n  templateUrl: './college-registration.component.html',\r\n  styleUrls: ['./college-registration.component.css']\r\n})\r\nexport class CollegeRegistrationComponent {\r\n  collegeForm: FormGroup;\r\n\r\n\r\n  private numberOfMOUs: number = 0;\r\n  private selectedTab: number = -1;\r\n  private mode: String;\r\n  private id: number;\r\n  moustatusinfo:string[]=['Active','InActive','Suspended'];\r\n  constructor(private formBuilder: FormBuilder,\r\n    private apiService: ApiService,\r\n    private route: ActivatedRoute,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.collegeForm = this.formBuilder.group({\r\n      collegeDetails: this.collegeDetails(),\r\n      address: this.address(),\r\n      mouDetails: this.formBuilder.array([this.mouDetails()])\r\n    });\r\n    this.numberOfMOUs = this.getMOUDetails().length;\r\n    this.activateTab(this.numberOfMOUs);\r\n\r\n    this.route.paramMap.subscribe(params => {\r\n      console.log(params);\r\n      this.mode = params.get('mode');\r\n      this.id = +params.get('id');\r\n      if (!isNaN(this.id)) {\r\n\r\n        this.apiService.getData('collegeregistration', this.id, true).subscribe(result => {\r\n          let data = JSON.parse(JSON.stringify(result));\r\n          console.log(\"GetResponse: \" + data);\r\n          if (data.mouDetails) {\r\n            data.mouDetails.forEach((mou, index) => {\r\n              if (index != 0) {\r\n                this.addMOU();\r\n              }\r\n            });\r\n          }\r\n          this.collegeForm.setValue(data);\r\n        });\r\n      } else {\r\n        alert('Error in ID');\r\n      }\r\n    });\r\n  }\r\n\r\n  collegeDetails(): FormGroup {\r\n    return this.formBuilder.group({\r\n      name: ['', [\r\n        Validators.required, Validators.maxLength(50)\r\n      ]],\r\n      registrationId: ['', [\r\n        Validators.maxLength(200)\r\n      ]],\r\n    });\r\n  }\r\n\r\n  address(): FormGroup {\r\n    return this.formBuilder.group({\r\n      addressLine1: ['', [\r\n        Validators.required, Validators.maxLength(2000)\r\n      ]],\r\n      addressLine2: ['', [\r\n        Validators.maxLength(2000)\r\n      ]],\r\n      state: ['', [\r\n        Validators.required, Validators.maxLength(50)\r\n      ]],\r\n      city: ['', [\r\n        Validators.required, Validators.maxLength(50)\r\n      ]],\r\n      pincode: ['', [\r\n        Validators.pattern(\"^[0-9]+$\"), Validators.minLength(6), Validators.maxLength(6)\r\n      ]]\r\n    });\r\n  }\r\n\r\n  mouDetails(): FormGroup {\r\n    return this.formBuilder.group({\r\n      mouID: ['', [\r\n        Validators.required, Validators.maxLength(200)\r\n      ]],\r\n      mouStatus: ['', [\r\n        Validators.required, Validators.maxLength(200)\r\n      ]],\r\n      mouName: ['', [\r\n        Validators.required, Validators.maxLength(10)\r\n      ]],\r\n      noOfEvents: ['', [\r\n        Validators.required, Validators.maxLength(2)\r\n      ]],\r\n      fromDate: [],\r\n      toDate: [],\r\n      comments: ['', [\r\n        Validators.maxLength(200)\r\n      ]]\r\n    });\r\n  }\r\n\r\n  getMOUDetails(): FormArray {\r\n    return this.collegeForm.get('mouDetails') as FormArray;\r\n  }\r\n\r\n  addMOU(): void {\r\n    if (this.numberOfMOUs < 10) {\r\n      (this.getMOUDetails()).push(this.mouDetails());\r\n      this.numberOfMOUs = this.getMOUDetails().length;\r\n\r\n    }\r\n  }\r\n  removeMOU(): void {\r\n    if (this.numberOfMOUs > 1) {\r\n      (this.getMOUDetails()).removeAt(this.numberOfMOUs - 1);\r\n      this.numberOfMOUs = this.getMOUDetails().length;\r\n      this.selectedTab = this.numberOfMOUs - 1;\r\n    }\r\n  }\r\n\r\n  getNumberOfMOUs(): Number {\r\n    return this.numberOfMOUs;\r\n  }\r\n\r\n  isMaxLimitReached(val): boolean {\r\n    return this.numberOfMOUs >= val;\r\n  }\r\n\r\n  getArray(val): number[] {\r\n    return Array(val);\r\n  }\r\n\r\n  activateTab(val): void {\r\n    this.selectedTab = val - 1;\r\n  }\r\n\r\n  checkForMandatoryValidations(collegeDetails) {\r\n    let checkflag:boolean=false;\r\n    if (collegeDetails.name && collegeDetails.addressLine1 && collegeDetails.city && collegeDetails.state\r\n      && collegeDetails.pincode) {\r\n\r\n      if (collegeDetails.mouDetails.length) {\r\n        collegeDetails.mouDetails.forEach(o => {\r\n          if (!o.mouStatus || !o.mouName || !o.fromDate || !o.toDate) {\r\n            checkflag=true;\r\n            return false;\r\n          }\r\n          \r\n        })\r\n        if(!checkflag)\r\n        {\r\n          return true;\r\n        }\r\n      }\r\n      else{\r\n      return true;\r\n      }\r\n    }\r\n    else\r\n      return false;\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log('inside method onsubmit');\r\n    let json = Object.assign({ mouDetails: this.getMOUDetails().value }, this.collegeForm.get('collegeDetails').value, this.collegeForm.get('address').value);\r\n    if (this.mode == 'edit') {\r\n      json = Object.assign(json, { id: this.id });\r\n    }\r\n\r\n    console.log('submitting: ', json);\r\n    if (this.checkForMandatoryValidations(json)) {\r\n      let response = this.apiService.postData(json, 'collegeregistration');\r\n      if (response) {\r\n        if (this.mode == 'edit') {\r\n          alert('Succesfully updated College Details');\r\n        } else {\r\n          alert('Succesfully registered College Details');\r\n        }\r\n        this.router.navigateByUrl(\"grid/collegeregistration\");\r\n      }\r\n\r\n    }\r\n    else {\r\n      alert('Please fill out the mandatory fields');\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = \"\\r\\n:host >>> .alert-md-local {\\r\\n    background-color: #009688;\\r\\n    border-color: #00695C;\\r\\n    color: #fff;\\r\\n    margin-bottom:0px;\\r\\n    margin-top: 20px;\\r\\n}\\r\\n\\r\\n.itemsrow{\\r\\n    margin-bottom:0px !important;\\r\\n}\\r\\n\\r\\n.form-group.required .control-label:after{\\r\\n    content:\\\"*\\\";\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9ldmVudHMvYWRkLWV2ZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0kseUJBQXlCO0lBQ3pCLHFCQUFxQjtJQUNyQixXQUFXO0lBQ1gsaUJBQWlCO0lBQ2pCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFdBQVc7SUFDWCxVQUFVO0FBQ2QiLCJmaWxlIjoiYXBwL2V2ZW50cy9hZGQtZXZlbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG46aG9zdCA+Pj4gLmFsZXJ0LW1kLWxvY2FsIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDk2ODg7XHJcbiAgICBib3JkZXItY29sb3I6ICMwMDY5NUM7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIG1hcmdpbi1ib3R0b206MHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxufVxyXG5cclxuLml0ZW1zcm93e1xyXG4gICAgbWFyZ2luLWJvdHRvbTowcHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmZvcm0tZ3JvdXAucmVxdWlyZWQgLmNvbnRyb2wtbGFiZWw6YWZ0ZXJ7XHJcbiAgICBjb250ZW50OlwiKlwiO1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG4iXX0= */\"","module.exports = \"<alert type=\\\"md-local\\\" *ngIf=\\\"submitSuc\\\">{{message}}</alert>\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"page-header well text-center well-sm\\\">\\r\\n    <h3><strong> Event Registration</strong></h3>\\r\\n  </div>\\r\\n\\r\\n  <form [formGroup]=\\\"eventForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"panel panel-default\\\">\\r\\n      <div class=\\\"panel-body\\\">\\r\\n\\r\\n        <div class=\\\"row form-row\\\">\\r\\n          <div class=\\\"col-md-6 offset-md-3 form-group required\\\">\\r\\n            <label class=\\\"control-label\\\">Event Name</label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"eventName\\\" placeholder=\\\"Event Name\\\" class=\\\"form-control\\\" required>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-4 form-group required\\\">\\r\\n            <label class=\\\"control-label\\\">Action</label>\\r\\n            <select formControlName=\\\"eventAction\\\" class=\\\"form-control\\\" required>\\r\\n              <option *ngFor=\\\"let action of eventActions\\\" [value]=\\\"action\\\">{{action}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-2 form-group required\\\">\\r\\n            <label class=\\\"control-label\\\">Recurring Event:</label>\\r\\n            <select formControlName=\\\"recurringEvent\\\" class=\\\"form-control\\\" required>\\r\\n              <option *ngFor=\\\"let value of recurringEventOptions\\\" [value]=\\\"value\\\">{{value}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row form-row\\\">\\r\\n          <div class=\\\"col-md-4 offset-md-3 form-group required\\\">\\r\\n            <label class=\\\"control-label\\\">Partner Ngos</label>\\r\\n            <angular2-multiselect [data]=\\\"ngos\\\" [settings]=\\\"settingsNgos\\\" (onSelect)=\\\"log($event)\\\"\\r\\n              (onDeSelect)=\\\"log($event)\\\" (onSelectAll)=\\\"log($event)\\\" (onDeSelectAll)=\\\"log($event)\\\"\\r\\n              formControlName=\\\"ngoName\\\" required>\\r\\n            </angular2-multiselect>\\r\\n          </div>            \\r\\n          <div class=\\\"col-md-4 form-group required\\\">\\r\\n            <label class=\\\"control-label\\\">Category</label>\\r\\n            <select formControlName=\\\"eventCategory\\\" class=\\\"form-control\\\" (change)=\\\"onCategorySelected()\\\" required>\\r\\n              <option *ngFor=\\\"let category of eventCategories\\\" [value]=\\\"category\\\">{{category}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-4 form-group required\\\">\\r\\n            <label class=\\\"control-label\\\">College-MOU</label>\\r\\n            <select formControlName=\\\"college\\\" class=\\\"form-control\\\" required>\\r\\n              <option *ngFor=\\\"let mou of mouItems\\\" [value]=\\\"mou\\\">{{mou}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row form-row itemsrow\\\">\\r\\n          <div class=\\\"col-md-6 offset-md-3 form-group required\\\">\\r\\n            <label class=\\\"control-label\\\" for=\\\"datepicker\\\">Select Date & Time Range</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"datepicker\\\" formControlName=\\\"eventDuration\\\" bsDaterangepicker required/>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3 form-group\\\">\\r\\n            <timepicker [formControlName]=\\\"'fromTime'\\\">\\r\\n            </timepicker>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3 form-group\\\">\\r\\n            <timepicker [formControlName]=\\\"'toTime'\\\"></timepicker>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row form-row\\\">\\r\\n          <div class=\\\"col-md-8 offset-md-3 form-group required\\\">\\r\\n            <label class=\\\"control-label\\\">Items Required:</label>\\r\\n            <angular2-multiselect [data]=\\\"itemList\\\" [settings]=\\\"settings\\\" (onSelect)=\\\"log($event)\\\"\\r\\n              (onDeSelect)=\\\"log($event)\\\" (onSelectAll)=\\\"log($event)\\\" (onDeSelectAll)=\\\"log($event)\\\"\\r\\n              formControlName=\\\"items\\\" required>\\r\\n            </angular2-multiselect>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-2  form-group required\\\">\\r\\n            <label class=\\\"control-label\\\">Volunteers Required</label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"volunteersReq\\\" placeholder=\\\"0\\\" class=\\\"form-control\\\" required>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-2 form-group\\\">\\r\\n            <label class=\\\"control-label\\\">Volunteers Registered</label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"volunteersReg\\\" placeholder=\\\"0\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-row\\\">\\r\\n          <div class=\\\"col-md-6 offset-md-3 form-group\\\">\\r\\n            <label class=\\\"control-label\\\">Offline Registered Volunteers</label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"volunteersOff\\\" placeholder=\\\"0\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-row\\\">\\r\\n          <div class=\\\" col-md-12 offset-md-3 form-group required\\\">\\r\\n            <label class=\\\"control-label\\\">Comments</label>\\r\\n            <textarea type=\\\"text\\\" formControlName=\\\"comments\\\" class=\\\"form-control\\\" required></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n  </form>\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <button class=\\\"btn btn-primary btn-sx\\\" (click)=\\\"onSubmit()\\\">Save</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- <form >\\r\\n        <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n          <div class=\\\"form-group col-md-5\\\">\\r\\n            <label for=\\\"eventname\\\">Event Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"eventname\\\" placeholder=\\\"Name\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-5\\\">\\r\\n                <label for=\\\"eventaction\\\">Action</label>\\r\\n                <select id=\\\"eventaction\\\" class=\\\"form-control\\\">\\r\\n                  <option selected>Choose...</option>\\r\\n                  <option>Not Started</option>\\r\\n                  <option>In progress</option>\\r\\n                  <option>completed</option>\\r\\n                  <option>Abandoned</option>\\r\\n                </select>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"col-md-1\\\"></div>\\r\\n              <div class=\\\"form-group col-md-5\\\">\\r\\n                <label for=\\\"ngoname\\\">Partner Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ngoname\\\" placeholder=\\\"NGO Name\\\" >\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-md-5\\\">\\r\\n                    <label for=\\\"eventcategory\\\">Event category</label>\\r\\n                    <select id=\\\"eventcategory\\\" class=\\\"form-control\\\">\\r\\n                      <option selected>Choose...</option>\\r\\n                      <option>Not Started</option>\\r\\n                      <option>In progress</option>\\r\\n                      <option>completed</option>\\r\\n                      <option>Abandoned</option>\\r\\n                    </select>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"form-group col-md-5\\\">\\r\\n                <label for=\\\"datepicker\\\">Select Date Range</label>\\r\\n                <input id=\\\"datepicker\\\" class=\\\"form-control\\\"\\r\\n                bsDaterangepicker [(ngModel)]=\\\"bsRangeValue\\\" >\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-5\\\">\\r\\n                <label for=\\\"eventaction\\\">Recurring Event</label>\\r\\n                <select id=\\\"eventaction\\\" class=\\\"form-control\\\">\\r\\n                  <option selected>No</option>\\r\\n                  <option>Yes</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n        \\r\\n\\r\\n            \\r\\n</form> -->\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { formatDate, DatePipe } from '@angular/common';\r\nimport { ApiService } from '../api.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { InventorydataService } from '../inventory-data/inventorydata.service';\r\n\r\n@Component({\r\n    selector:'add-event',\r\n    templateUrl: './add-event.component.html',\r\n    styleUrls: ['./add-event.component.css']\r\n  })\r\n\r\n  export class AddEventComponent implements OnInit{\r\n    ngos_data: any[];\r\n    ngos = [];\r\n    pipe:any;\r\n    eventForm :FormGroup;\r\n    bsValue = new Date();\r\n    bsRangeValue: Date[];\r\n    maxDate = new Date();\r\n    eventData = new Eventdata();\r\n    itemList = [];\r\n    config = {\r\n      search:true,\r\n      height: 'auto', \r\n      placeholder:'Select',\r\n      noResultsFound: 'No results found!',\r\n      searchPlaceholder:'Search',\r\n    }\r\n    selectedItems = [];\r\n    settings={};\r\n    settingsNgos={};\r\n    eventActions: string[] = ['Not Started','In progress','Completed','Abandoned'];\r\n    eventCategories: string[] = ['PartnerNGO','Education','Environment','Health','Other'];\r\n    recurringEventOptions: string[] = ['Yes','No'];\r\n    mouItems:string[]=[];\r\n    submitSuc:boolean;\r\n    message:string;\r\n    constructor(private formBuilder: FormBuilder,private apiService: ApiService,private route:ActivatedRoute,private inventoryService: InventorydataService,\r\n      private router: Router) {\r\n      this.eventForm=this.formBuilder.group({\r\n        eventName: ['', [\r\n          Validators.required, Validators.maxLength(50)\r\n        ]],\r\n        eventAction: ['Not Started',[\r\n          Validators.required\r\n        ]],\r\n        eventDuration: [null,[Validators.required]],\r\n        fromTime: [new Date(),[Validators.required]],\r\n        toTime: [new Date(),[Validators.required]],\r\n        ngoName:[[],[Validators.required]],\r\n        eventCategory:['',[Validators.required]],\r\n        college:['',[Validators.required]],\r\n        recurringEvent:['No',[Validators.required]],\r\n        items:[[],[Validators.required]],\r\n        volunteersReq: ['',[Validators.required]],\r\n        volunteersReg:'',\r\n        volunteersOff:'',\r\n        comments:['',[Validators.required]],\r\n      });\r\n      this.submitSuc=false;\r\n    }\r\n   \r\n  \r\n    ngOnInit(){ \r\n      this.apiService.getData('partnerngo').subscribe((data:any)=>{\r\n            this.ngos_data=data;\r\n            this.ngos=this.ngos_data.map(ngo=>{\r\n                return {\"id\":data.indexOf(ngo),\"itemName\":ngo.name};\r\n                \r\n            });\r\n      });\r\n\r\n      this.apiService.getData('collegeregistration-list').subscribe((data:any)=>{\r\n        this.mouItems=data.map(item=>{\r\n          return item[0]+'--'+item[1];\r\n        })\r\n      });\r\n      \r\n      \r\n     \r\n    //   this.itemList = [\r\n    //     { \"id\": 1, \"itemName\": \"Item1\" },\r\n    //     { \"id\": 2, \"itemName\": \"Item2\" },\r\n    //     { \"id\": 3, \"itemName\": \"Item3\" },\r\n    //     { \"id\": 4, \"itemName\": \"Item4\" },\r\n    //     { \"id\": 5, \"itemName\": \"Item5\" },\r\n    //     { \"id\": 6, \"itemName\": \"Item6\" }\r\n    // ];\r\n    this.selectedItems = [];\r\n    this.settings = {\r\n      singleSelection: false,\r\n        text: \"Select Items\",\r\n        selectAllText: 'Select All',\r\n        unSelectAllText: 'UnSelect All',\r\n        enableSearchFilter: true\r\n    };\r\n\r\n    this.settingsNgos = {\r\n      singleSelection: false,\r\n        text: \"Select PartnerNgos\",\r\n        selectAllText: 'Select All',\r\n        unSelectAllText: 'UnSelect All',\r\n        enableSearchFilter: true\r\n    };\r\n\r\n    if(this.route.snapshot.paramMap && this.route.snapshot.paramMap.get('id')){\r\n      this.apiService.getData('event',this.route.snapshot.paramMap.get('id')).subscribe((data:any)=>{\r\n        console.log(data.eventDuration);\r\n        this.pipe = new DatePipe('en-US');\r\n        this.eventForm.setValue({\r\n          eventName:data.eventName,\r\n          eventAction:data.eventAction,\r\n          eventDuration:data.eventDuration.map(date=>{\r\n            return this.pipe.transform(date,'shortDate');\r\n          }),\r\n          fromTime: new Date(data.eventfromTime),\r\n          toTime: new Date(data.eventtoTime),\r\n          ngoName:data.ngoName.map(ngo=>({\r\n            id:data.ngoName.indexOf(ngo),\r\n            itemName:ngo\r\n          })),\r\n          eventCategory:data.eventCategory,\r\n          recurringEvent:data.recurringEvent,\r\n          items:data.eventItems.map(item=>({\r\n            id:data.eventItems.indexOf(item),\r\n            itemName:item\r\n          })),\r\n          volunteersReq:data.volunteers,\r\n          comments:data.comments,\r\n          college:data.college,\r\n          volunteersReg:'',\r\n          volunteersOff:''\r\n        });\r\n        console.log(this.eventForm.value.eventDuration);\r\n      })\r\n    }\r\n\r\n  }\r\n  \r\n  log($event){\r\n    console.log(\"hi\");\r\n  }\r\n    \r\n  checkForMandatoryValidations(eventDataValues) {\r\n    if (eventDataValues.eventName && eventDataValues.eventAction && eventDataValues.fromTime && eventDataValues.toTime &&\r\n      eventDataValues.recurringEvent  && eventDataValues.eventCategory && eventDataValues.volunteersReq &&\r\n      eventDataValues.eventDuration && eventDataValues.items\r\n      )\r\n      return true;\r\n    else\r\n      return false;\r\n\r\n  }\r\n  onSubmit():void{\r\n    const eventDataValues = this.eventForm.getRawValue();\r\n    if (this.checkForMandatoryValidations(eventDataValues)) {\r\n    console.log(this.eventForm.value);\r\n    this.eventData.eventName= this.eventForm.value.eventName;\r\n    this.eventData.eventAction=this.eventForm.value.eventAction;\r\n    this.eventData.eventfromTime= this.eventForm.value.fromTime;\r\n    this.eventData.eventtoTime = this.eventForm.value.toTime;\r\n    this.eventData.ngoName = this.eventForm.value.ngoName.map(ngo=>ngo.itemName);\r\n    this.eventData.volunteers = this.eventForm.value.volunteersReq;\r\n    this.eventData.recurringEvent=this.eventForm.value.recurringEvent;\r\n    // this.eventData.eventDuration=[];\r\n    // this.eventData.eventDuration.push(formatDate(this.eventForm.value.eventDuration[0],'fullDate','en-US'));\r\n    // this.eventData.eventDuration.push(formatDate(this.eventForm.value.eventDuration[1],'fullDate','en-US'));\r\n    this.eventData.eventCategory=this.eventForm.value.eventCategory;\r\n    this.eventData.eventDuration=this.eventForm.value.eventDuration;\r\n    this.eventData.eventItems=this.eventForm.value.items.map(item => item.itemName);\r\n    this.eventData.comments=this.eventForm.value.comments;\r\n    this.eventData.college=this.eventForm.value.college;\r\n    this.eventData.volunteersOffline=this.eventForm.value.volunteersOff;\r\n    console.log(this.eventData);\r\n    if(this.route.snapshot.paramMap && this.route.snapshot.paramMap.get('id')){\r\n    this.eventData.id = this.route.snapshot.paramMap.get('id');\r\n          this.eventData.eventDuration = this.eventData.eventDuration.map(date=>{\r\n                return this.pipe.transform(date,\"yyyy-MM-dd'T'HH:mm:ss.SSS\");\r\n              }),\r\n    this.apiService.post(this.eventData,'event-update').subscribe(response=>{\r\n\r\n                                                                    alert('Succesfully saved Event Details');\r\n                                                                      this.router.navigateByUrl(\"/events\");\r\n                                                                  });\r\n    }\r\n    else{\r\n      let response = this.apiService.post(this.eventData,'event').subscribe(response=>{\r\n        this.message=\"Event Submitted: http://yfsevents.com?id=\" + (response as any).id;\r\n        this.submitSuc=true;\r\n        alert('Succesfully saved Event Details');\r\n          this.router.navigateByUrl(\"/events\");\r\n      });\r\n      \r\n    }\r\n  }\r\n  else{\r\n    alert('Please fill out the mandatory fields');\r\n  }\r\n  }\r\n\r\n  onCategorySelected(event){\r\n    this.inventoryService.getItemsByCategory(this.eventForm.value.eventCategory).subscribe((data:any)=>{\r\n      this.itemList = data.map(item=>{\r\n        return {'id':data.indexOf(item),\"itemName\":item};\r\n      })\r\n    })\r\n  }\r\n\r\n  ngoChanged(event){\r\n    console.log(this.eventForm.value.ngoName);\r\n  }\r\n\r\n  \r\n\r\n}\r\n\r\n\r\nexport class Eventdata {\r\nid:any;\r\n  eventName:string;\r\n  eventAction:string;\r\n  eventfromTime:string;\r\n  eventtoTime:string;\r\n  ngoName:string;\r\n  eventCategory: string;\r\n  recurringEvent:string;\r\n  volunteers:string;\r\n  eventDuration:string[];\r\n  eventItems:string[];\r\n  comments:string;\r\n  college:string;\r\n  volunteersOffline:string;\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row \\\">\\r\\n      <div class=\\\"col-md-12 page-header well text-center well-sm\\\">\\r\\n      <h3><strong> Events </strong></h3>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n<div class=\\\"row\\\" style=\\\"margin-top:10px\\\">\\r\\n\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div style=\\\"text-align:right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"router.navigate(['/addevent'])\\\">\\r\\n        Add Event\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\r\\n\\r\\n\\r\\n<div>\\r\\n<div id=\\\"myGrid\\\"  style=\\\"height: 110%;\\\">\\r\\n    <ag-grid-angular style=\\\"height: 110%;\\\"\\r\\n        class=\\\"ag-theme-balham\\\"\\r\\n        [rowData]=\\\"rowData\\\" \\r\\n        [columnDefs]=\\\"columnDefs\\\"\\r\\n        [frameworkComponents]=\\\"frameworkComponents\\\">\\r\\n    </ag-grid-angular>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../api.service';\r\nimport { Eventdata } from './add-event.component';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { formatDate, DatePipe } from '@angular/common';\r\nimport { ButtonRendererComponent } from './renderer/button-renderer.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormModalComponent } from '../form-modal/form-modal.component';\r\n@Component({\r\n  selector:'event-list',\r\n  templateUrl: './event-list.component.html'\r\n})\r\n\r\n\r\nexport class EventListComponent implements OnInit{\r\n  pipe:any;\r\n  rowData :any;\r\n  private paginationPageSize;\r\n\tcolumnDefs = [\r\n        {headerName: 'EventId', field: 'id',filter:true },\r\n        {headerName: 'Action', field: 'eventAction',filter:true},\r\n        {headerName: 'Event Name', field: 'eventName',filter:true},\r\n        {headerName: 'Event Category', field: 'eventCategory',filter:true},\r\n        {headerName: 'Partner NGO', field: 'ngoName',filter:true},\r\n        {headerName: 'Event Start Date', field: 'event_start_date',filter:true},\r\n        {headerName: 'Event End Date', field: 'event_end_date',filter:true},\r\n        {\r\n          headerName: 'Email',\r\n          cellRenderer: 'buttonRenderer',\r\n          cellRendererParams: {\r\n            onClick: this.onBtnClick1.bind(this),\r\n            label: 'Send Email'\r\n          }\r\n        },\r\n        {\r\n          headerName: 'Edit',\r\n          cellRenderer: 'buttonRenderer',\r\n          cellRendererParams: {\r\n            onClick: this.onSearch.bind(this),\r\n            label: 'Edit'\r\n          }\r\n        },\r\n        {\r\n          headerName: 'Volunteers Accepted',\r\n          cellRenderer: 'buttonRenderer',\r\n          cellRendererParams: {\r\n            onClick: this.onBtnClick2.bind(this),\r\n            label: 'Accepted Count'\r\n          }\r\n        },\r\n\r\n    ];\r\n\r\n    eventData :any[];\r\n    frameworkComponents:any;\r\n    constructor(private apiService: ApiService,private router:Router,private modalService: NgbModal){\r\n      this.frameworkComponents = {\r\n        buttonRenderer: ButtonRendererComponent,\r\n      }\r\n      this.paginationPageSize=10;\r\n    }\r\n\r\n\tngOnInit():void{\r\n   this.pipe = new DatePipe('en-US');\r\n   this.apiService.getData('events').subscribe((data:any)=>{\r\n        this.eventData=data;\r\n        console.log(data);\r\n        this.rowData = this.eventData.map(event=>({\r\n          id:event.id,\r\n          eventAction:event.eventAction,\r\n          eventName:event.eventName,\r\n          eventCategory:event.eventCategory,\r\n          ngoName:event.ngoName,\r\n          event_start_date:this.pipe.transform(event.eventDuration[0],'shortDate'),\r\n          event_end_date:this.pipe.transform(event.eventDuration[1],'shortDate')\r\n        }));\r\n      },( err:HttpErrorResponse)=>{\r\n        console.log(err.message);\r\n     });\r\n    }\r\n    \r\n  onSearch(event:any){\r\n    this.router.navigate(['addevent',{id:event.rowData.id}]);\r\n  }\r\n  onBtnClick1(event:any){\r\n    console.log(\"grid/volunteer\",event.rowData.id);\r\n    this.router.navigate(['grid/volunteer',{id:event.rowData.id}]);\r\n  }\r\n  onBtnClick2(event:any){\r\n    this.openFormModal();\r\n  }\r\n\r\n  \r\n  openFormModal() {\r\n    const modalRef = this.modalService.open(FormModalComponent);\r\n    console.log(\"ddff\");\r\n    modalRef.result.then((result) => {\r\n      console.log(result);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n  \r\n}\r\n\r\n\r\n\r\n","\r\n\r\nimport { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { ICellRendererParams, IAfterGuiAttachedParams } from 'ag-grid-community';\r\n\r\n@Component({\r\n  selector: 'app-button-renderer',\r\n  template: `\r\n    <button type=\"button\" (click)=\"onClick($event)\">{{label}}</button>\r\n    `\r\n})\r\n\r\nexport class ButtonRendererComponent implements ICellRendererAngularComp {\r\n\r\n  params;\r\n  label: string;\r\n\r\n  agInit(params): void {\r\n    this.params = params;\r\n    this.label = this.params.label || null;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  onClick($event) {\r\n    if (this.params.onClick instanceof Function) {\r\n      // put anything into params u want pass into parents component\r\n      const params = {\r\n        event: $event,\r\n        rowData: this.params.node.data\r\n        // ...something\r\n      }\r\n      this.params.onClick(params);\r\n\r\n    }\r\n  }\r\n}","module.exports = \".footer{\\r\\n    background-color: #2d2d30;\\r\\n    color: #d5d5d5 !important;\\r\\n    letter-spacing: 4px;\\r\\n    opacity: 0.9;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7SUFDekIseUJBQXlCO0lBQ3pCLG1CQUFtQjtJQUNuQixZQUFZO0FBQ2hCIiwiZmlsZSI6ImFwcC9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9vdGVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJkMmQzMDtcclxuICAgIGNvbG9yOiAjZDVkNWQ1ICFpbXBvcnRhbnQ7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogNHB4O1xyXG4gICAgb3BhY2l0eTogMC45O1xyXG59Il19 */\"","module.exports = \"<div class=\\\"text-center footer\\\">\\r\\n    <!--ToDo: Add go to Top Logic on Button Click\\r\\n    >a class=\\\"up-arrow\\\" href=\\\"\\\" data-toggle=\\\"tooltip\\\" title=\\\"TO TOP\\\">\\r\\n      <span class=\\\"glyphicon glyphicon-chevron-up\\\"></span>\\r\\n    </a><br><br-->\\r\\n    <!--TODO: Add below?-->\\r\\n    <p>Made by <strong></strong></p>\\r\\n    </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvZm9ybS1tb2RhbC9mb3JtLW1vZGFsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"modal-header\\\" id=\\\"abc\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Volunteers who have accepte the invitation</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\"\\r\\n     (click)=\\\"activeModal.dismiss('Cross click')\\\">\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"page-header well text-center well-sm\\\">\\r\\n        <h3><strong> Volunteer </strong></h3>\\r\\n      </div>\\r\\n      <div  #myGrid  style=\\\"width: 100%; height: 600px;\\\">\\r\\n        <ag-grid-angular style=\\\"height: 100%;\\\"\\r\\n          class=\\\"ag-theme-balham\\\"\\r\\n          [rowData]=\\\"data\\\"\\r\\n          [columnDefs]=\\\"headers\\\"\\r\\n          (rowClicked)=\\\"onRowCilcked($event)\\\"\\r\\n          (gridReady)=\\\"onGridReady($event)\\\"\\r\\n          [rowSelection]=\\\"rowSelection\\\"\\r\\n          [gridOptions]=\\\"gridOptions\\\"\\r\\n          >\\r\\n        </ag-grid-angular>\\r\\n      </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button (click)=\\\"activeModal.dismiss('Close clicked')\\\">\\r\\n      Close Clicked\\r\\n    </button>\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport { ApiService } from '../api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-form-modal',\r\n  templateUrl: './form-modal.component.html',\r\n  styleUrls: ['./form-modal.component.css']\r\n})\r\nexport class FormModalComponent implements OnInit {\r\n\r\n  private data:any=[];\r\n public  selectedEmails:any=\"\";\r\n   private headers=[\r\n     {headerName: 'First Name', field: 'firstName',filter:true, sortable: true,headerCheckboxSelection: true,\r\n     headerCheckboxSelectionFilteredOnly: true,\r\n     checkboxSelection: true },\r\n     {headerName: 'Last Name', field: 'lastName',filter:true},\r\n     {headerName: 'Phone Prefix', field: 'phonePrefix',filter:true},\r\n     {headerName: 'Phone Number', field: 'phoneNumber',filter:true},\r\n     {headerName: 'Phone Prefix', field: 'alternatePhonePrefix',filter:true},\r\n     {headerName: 'Alternate Phone Number', field: 'alternatePhoneNumber',filter:true},\r\n     {headerName: 'EmailId', field: 'email',filter:true},\r\n     {headerName: 'EmailId2', field: 'alternateEmail',filter:true},\r\n     {headerName: 'Locality', field: 'locality',filter:true},\r\n     {headerName: 'City', field: 'city',filter:true},\r\n     {headerName: 'State', field: 'state',filter:true},\r\n     {headerName: 'PinCode', field: 'pincode',filter:true},\r\n     {headerName: 'Interested Areas', field: 'interestedAreas'}\r\n   ];\r\n   private myGrid: any;\r\n   private gridApi: any;\r\n   private gridColumnApi: any;\r\n   private rowSelection :any;\r\n   public gridOptions: GridOptions;\r\n  interestedList:any[]=new Array();\r\n   constructor(private apiService:ApiService,\r\n               private router:Router,public activeModal: NgbActiveModal) { }\r\n   ngOnInit() {\r\n    this.rowSelection = \"multiple\";\r\n    this.apiService.getData('volunteerAccepted','1').subscribe(response=>{\r\n          let result:any=JSON.parse(JSON.stringify(response));\r\n          Array.from(result).forEach(element => {\r\n            let interestedAreas1=JSON.parse(JSON.stringify(element)).interestedAreas;\r\n            while(this.interestedList.length)\r\n            {\r\n              this.interestedList.pop();\r\n            }\r\n            for(var val of interestedAreas1)\r\n                {\r\n                console.log(\"hey:\"+val[\"interestedArea\"]);\r\n                this.interestedList.push(val[\"interestedArea\"]);\r\n                }\r\n            Object.assign(element, {interestedAreas: this.interestedList.toString()\r\n            });\r\n          });\r\n          console.log(response);\r\n          console.log(this.data);\r\n          this.data=result;\r\n          \r\n          \r\n        });\r\n    }\r\n    onGridReady(params) {\r\n      // this.gridOptions.columnDefs=this.headers;\r\n      // console.log(\"You are here\");\r\n      // this.gridApi = params.api;\r\n      // this.gridColumnApi = params.columnApi;\r\n    }\r\n\r\n   onRowCilcked(event){\r\n     console.log(event.rowIndex);\r\n     this.router.navigateByUrl(\"/volunteer/edit/\"+((event.rowIndex)+1));\r\n      // console.log(this.printAllDisplayedRows());\r\n     //  this.onBtForEachNodeAfterFilterAndSort();\r\n     }\r\n\r\n\r\n\r\n \r\n \r\n  closeModal() {\r\n    this.activeModal.close('Modal Closed');\r\n  }\r\n\r\n}\r\n","module.exports = \".nav-tabs li a {\\r\\n    color: #777;\\r\\n  }\\r\\n  \\r\\n  .navbar {\\r\\n    font-family: Montserrat, sans-serif;\\r\\n    margin-bottom: 0;\\r\\n    border: 0;\\r\\n    font-size: 15px !important;\\r\\n    letter-spacing: 4px;\\r\\n    opacity: 0.9;\\r\\n  }\\r\\n  \\r\\n  .navbar li a, .navbar .navbar-brand { \\r\\n    color: #d5d5d5 !important;\\r\\n  }\\r\\n  \\r\\n  .navbar-nav li a:hover {\\r\\n    color: #fff !important;\\r\\n  }\\r\\n  \\r\\n  .navbar-nav li.active a {\\r\\n    color: #fff !important;\\r\\n    background-color: #2b2c29 !important;\\r\\n  }\\r\\n  \\r\\n  .navbar-default .navbar-toggle {\\r\\n    border-color: transparent;\\r\\n  }\\r\\n  \\r\\n  .open .dropdown-toggle {\\r\\n    color: #fff;\\r\\n  }\\r\\n  \\r\\n  .dropdown-menu li a {\\r\\n    color: #000 !important;\\r\\n  }\\r\\n  \\r\\n  .dropdown-menu li a:hover {\\r\\n    background-color: red !important;\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0VBQ2I7O0VBRUE7SUFDRSxtQ0FBbUM7SUFDbkMsZ0JBQWdCO0lBQ2hCLFNBQVM7SUFDVCwwQkFBMEI7SUFDMUIsbUJBQW1CO0lBQ25CLFlBQVk7RUFDZDs7RUFDQTtJQUNFLHlCQUF5QjtFQUMzQjs7RUFDQTtJQUNFLHNCQUFzQjtFQUN4Qjs7RUFDQTtJQUNFLHNCQUFzQjtJQUN0QixvQ0FBb0M7RUFDdEM7O0VBQ0E7SUFDRSx5QkFBeUI7RUFDM0I7O0VBQ0E7SUFDRSxXQUFXO0VBQ2I7O0VBQ0E7SUFDRSxzQkFBc0I7RUFDeEI7O0VBQ0E7SUFDRSxnQ0FBZ0M7RUFDbEMiLCJmaWxlIjoiYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXYtdGFicyBsaSBhIHtcclxuICAgIGNvbG9yOiAjNzc3O1xyXG4gIH1cclxuICBcclxuICAubmF2YmFyIHtcclxuICAgIGZvbnQtZmFtaWx5OiBNb250c2VycmF0LCBzYW5zLXNlcmlmO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgIGJvcmRlcjogMDtcclxuICAgIGZvbnQtc2l6ZTogMTVweCAhaW1wb3J0YW50O1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDRweDtcclxuICAgIG9wYWNpdHk6IDAuOTtcclxuICB9XHJcbiAgLm5hdmJhciBsaSBhLCAubmF2YmFyIC5uYXZiYXItYnJhbmQgeyBcclxuICAgIGNvbG9yOiAjZDVkNWQ1ICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIC5uYXZiYXItbmF2IGxpIGE6aG92ZXIge1xyXG4gICAgY29sb3I6ICNmZmYgIWltcG9ydGFudDtcclxuICB9XHJcbiAgLm5hdmJhci1uYXYgbGkuYWN0aXZlIGEge1xyXG4gICAgY29sb3I6ICNmZmYgIWltcG9ydGFudDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyYjJjMjkgIWltcG9ydGFudDtcclxuICB9XHJcbiAgLm5hdmJhci1kZWZhdWx0IC5uYXZiYXItdG9nZ2xlIHtcclxuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgfVxyXG4gIC5vcGVuIC5kcm9wZG93bi10b2dnbGUge1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgfVxyXG4gIC5kcm9wZG93bi1tZW51IGxpIGEge1xyXG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcclxuICB9XHJcbiAgLmRyb3Bkb3duLW1lbnUgbGkgYTpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQgIWltcG9ydGFudDtcclxuICB9XHJcbiAgIl19 */\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvaW52ZW50b3J5LWRhdGEvaW52ZW50b3J5LWRhdGEuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"page-header well well-sm\\\">\\r\\n    <h3><strong> Inventory Data</strong></h3>\\r\\n  </div>\\r\\n  <form [formGroup]=\\\"inventoryData\\\">\\r\\n    <div class=\\\"panel panel-info\\\">\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n            <div class=\\\"form-group required\\\">\\r\\n              <label class=\\\"control-label\\\">Item Name</label>\\r\\n              <input type=\\\"text\\\" formControlName=\\\"itemName\\\" class=\\\"form-control well well-sm\\\" required>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n            <div class=\\\"form-group required\\\">\\r\\n              <label class=\\\"control-label\\\">Event Category</label>\\r\\n              <div>\\r\\n                <select formControlName=\\\"eventCategory\\\" class=\\\"form-control well well-sm\\\" required>\\r\\n                  <option *ngFor=\\\"let evCat of eventCategoryList\\\" [(ngValue)]=\\\"evCat.value\\\">{{evCat.value}}</option>\\r\\n                </select>          \\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"control-label\\\">Comments</label>\\r\\n              <textarea type=\\\"text\\\" formControlName=\\\"comments\\\" class=\\\"form-control well well-sm\\\"></textarea>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <button class=\\\"btn btn-primary btn-sx\\\" (click)=\\\"onSubmit()\\\">Save</button>\\r\\n  </div>\\r\\n  <div class=\\\"spinner-border\\\" role=\\\"status\\\" *ngIf=\\\"loading\\\">\\r\\n    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, PLATFORM_ID, Injector, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { InventorydataService } from './inventorydata.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-inventory-data',\r\n  templateUrl: './inventory-data.component.html',\r\n  styleUrls: ['./inventory-data.component.css']\r\n})\r\nexport class InventoryDataComponent implements OnInit {\r\n  inventoryData: FormGroup;\r\n  eventCategoryList: any[];\r\n  selected: any;\r\n  loading: boolean = false;\r\n\r\n  constructor(private formBuilder: FormBuilder, private inventoryService: InventorydataService,\r\n    private route: ActivatedRoute, private router: Router) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.inventoryData = this.formBuilder.group({\r\n      itemName: ['', [\r\n        Validators.required, Validators.maxLength(50)\r\n      ]],\r\n      eventCategory: [''],\r\n      comments: ['', [\r\n        Validators.required, Validators.maxLength(200)\r\n      ]],\r\n\r\n    });\r\n\r\n    this.inventoryService.getEventCategoryList().subscribe((data: any) => {\r\n      this.eventCategoryList = data;\r\n    }, (err: HttpErrorResponse) => {\r\n      console.log(err.message);\r\n    });\r\n\r\n    if (this.route.snapshot.paramMap && this.route.snapshot.paramMap.get('id')) {\r\n      this.inventoryService.getInventoryDataById(this.route.snapshot.paramMap.get('id')).subscribe((data: any) => {\r\n        this.inventoryData.setValue({\r\n        \r\n          itemName: data.itemName,\r\n          eventCategory: data.eventCategory,\r\n          comments: data.comments\r\n        })\r\n      }, (err: HttpErrorResponse) => {\r\n        console.log(err.message)\r\n      })\r\n    }\r\n  }\r\n\r\n  checkForMandatoryValidations(inventoryData) {\r\n    if (inventoryData.itemName && inventoryData.eventCategory)\r\n      return true;\r\n    else\r\n      return false;\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    const inventoryData = this.inventoryData.getRawValue();\r\n    if (this.checkForMandatoryValidations(inventoryData)) {\r\n      this.loading = true;\r\n\r\n      if (this.route.snapshot.paramMap && this.route.snapshot.paramMap.get('id')) {\r\n        this.inventoryService.updateInventoryDataById(inventoryData, this.route.snapshot.paramMap.get('id')).subscribe((data: any) => {\r\n          this.loading = false;\r\n          console.log('response', data);\r\n          alert('Succesfully updated Inventory Data');\r\n          this.router.navigateByUrl(\"/inventorylist\");\r\n        }, e => {\r\n          this.loading = false;\r\n          console.log(e);\r\n        });\r\n\r\n      }\r\n      else {\r\n        this.inventoryService.saveInventoryData(inventoryData).subscribe((data: any) => {\r\n          this.loading = false;\r\n          console.log('response', data);\r\n          alert('Succesfully saved Inventory Data');\r\n          this.router.navigateByUrl(\"/inventorylist\");\r\n        }, e => {\r\n          this.loading = false;\r\n          console.log(e);\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      alert('Please fill out the mandatory fields');\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvaW52ZW50b3J5LWRhdGEvaW52ZW50b3J5LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\r\\n\\r\\n  <div class=\\\"page-header well text-center well-sm\\\">\\r\\n    <h3><strong>Inventory</strong></h3>\\r\\n  </div>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n<div class=\\\"row\\\" style=\\\"margin-top:20px\\\">\\r\\n\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div style=\\\"text-align:right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"router.navigate(['/inventorydata'])\\\">\\r\\n        Add Inventory\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" style=\\\"margin-top: 10px\\\">\\r\\n\\r\\n  \\r\\n\\r\\n          <div  id=\\\"myGrid\\\"  style=\\\"height: 115px;\\\">\\r\\n  <ag-grid-angular style=\\\"height: 100%;\\\"\\r\\n      class=\\\"ag-theme-balham\\\"\\r\\n      [rowData]=\\\"rowData\\\" \\r\\n      [columnDefs]=\\\"columnDefs\\\"\\r\\n      (rowClicked)=\\\"onSearch($event)\\\"\\r\\n      >\\r\\n  </ag-grid-angular>\\r\\n  </div>\\r\\n\\r\\n\\r\\n      \\r\\n  </div>\\r\\n</div>\\r\\n  \\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { InventorydataService } from './inventorydata.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-inventory-list',\r\n  templateUrl: './inventory-list.component.html',\r\n  styleUrls: ['./inventory-list.component.css']\r\n})\r\nexport class InventoryListComponent implements OnInit {\r\n  \r\n  columnDefs = [\r\n    {headerName: 'No', field: 'id',filter:true},\r\n    {headerName: 'Item Name', field: 'itemName',filter:true },\r\n    {headerName: 'Event Category', field: 'eventCategory',filter:true},\r\n    {headerName: 'Comments', field: 'comments',filter:true} \r\n];\r\n\r\nrowData:any[];\r\n\r\n  constructor(private inventoryService: InventorydataService,private router:Router) { }\r\n\r\n  ngOnInit() {\r\n    this.inventoryService.getInventoryData().subscribe((data:any) =>{\r\n      this.rowData= data;\r\n    },(err:HttpErrorResponse) =>{\r\n       console.log(err.message)\r\n    })\r\n  }\r\n\r\n  onSearch(event:any){\r\n    this.router.navigate(['inventorydata','edit',{id:event.data.id}]);\r\n   \r\n    \r\n\r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InventorydataService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  saveInventoryData(data:any){\r\n    return this.http.post(`${environment.serverHost}/inventorydata/list`,data);\r\n  }\r\n\r\n  getInventoryData(){\r\n    return this.http.get(`${environment.serverHost}/inventorydata/list`);\r\n  }\r\n\r\n  getEventCategoryList(){\r\n    return this.http.get(`${environment.serverHost}/inventorydata/eventcategory`);\r\n  }\r\n  \r\n  getInventoryDataById(id:any){\r\n    return this.http.get(`${environment.serverHost}/inventorydata/list/${id}`)\r\n  }\r\n  \r\n  updateInventoryDataById(data:any,id:any){\r\n    return this.http.put(`${environment.serverHost}/inventorydata/list/${id}`,data)\r\n  }\r\n\r\n  getItemsByCategory(data:any){\r\n    return this.http.get(\"/inventorydata/items/\"+data);\r\n  }\r\n  \r\n \r\n   \r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"card card-container\\\">\\r\\n\\r\\n<div class=\\\"row\\\"><div class=\\\"col-md-4\\\"></div><div class=\\\"col-md-4\\\">\\r\\n    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.form.valid && login()\\\" name=\\\"form-signin\\\" novalidate>\\r\\n      <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">{{errorMessage}}</div>\\r\\n      <span class=\\\"reauth-email\\\" id=\\\"reauth-email\\\"></span>\\r\\n      <div [ngClass]=\\\"{ 'has-error': f.submitted && !username.valid }\\\" class=\\\"form-group\\\">\\r\\n        <label for=\\\"username\\\">Username</label>\\r\\n        <input #username=\\\"ngModel\\\" [(ngModel)]=\\\"user.username\\\" class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\"\\r\\n               required type=\\\"text\\\"/>\\r\\n        <!-- <div *ngIf=\\\"f.submitted && !username.valid\\\" class=\\\"help-block\\\">an valid email is required</div>-->\\r\\n      </div>\\r\\n      <div [ngClass]=\\\"{ 'has-error': f.submitted && !password.valid }\\\" class=\\\"form-group\\\">\\r\\n        <label for=\\\"password\\\">Password</label>\\r\\n        <input #password=\\\"ngModel\\\" [(ngModel)]=\\\"user.password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\"\\r\\n               required type=\\\"password\\\"/>\\r\\n        <div *ngIf=\\\"f.submitted && !password.valid\\\" class=\\\"help-block\\\">Password is required</div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\"><a  a [routerLink]=\\\"['/reset']\\\" class=\\\"pull-right\\\">Reset Password</a></div>\\r\\n\\r\\n      <div class=\\\"row\\\"><div class=\\\"col-md-4\\\"></div>\\r\\n    <div class=\\\"col-md-4\\\">  <button class=\\\"btn btn-lg btn-primary btn-block btn-signin\\\" type=\\\"submit\\\">Sign in</button></div>\\r\\n        <div class=\\\"col-md-4\\\"></div> </div><!--<a [routerLink]=\\\"['/register']\\\" class=\\\"btn btn-link\\\">Create new Account!</a>-->\\r\\n    </form></div> <div class=\\\"col-md-4\\\"></div></div><!-- /form -->\\r\\n\\r\\n  </div><!-- /card-container -->\\r\\n</div><!-- /container -->\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from '../app.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent {\r\n\r\n  user = {username: '', password: ''};\r\n\r\n  constructor(private app: AppService, private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n  login() {\r\n    this.app.authenticate(this.user, () => {\r\n        this.router.navigateByUrl('/events');\r\n    });\r\n    return false;\r\n  }\r\n\r\n}\r\n","export class User {\r\n  id:string;\r\nusername: string = \"\";\r\npassword: string = \"\";\r\nfullName: string = \"\";\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcGFydG5lci1uZ28tZ3JpZC9wYXJ0bmVyLW5nby1ncmlkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"page-header well text-center well-sm\\\">\\r\\n    <h3><strong> Partner NGO </strong></h3>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div style=\\\"text-align:right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"router.navigate(['/partnerngo'])\\\">\\r\\n        Add partner NGO\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n  <div  #myGrid  style=\\\"width: 100%; height: 110%;margin-top:10px\\\">\\r\\n    <ag-grid-angular style=\\\"height: 100%;\\\"\\r\\n      class=\\\"ag-theme-balham\\\" \\r\\n      [rowData]=\\\"data\\\" \\r\\n      [columnDefs]=\\\"headers\\\"\\r\\n      (rowClicked)=\\\"onRowCilcked($event)\\\"\\r\\n    >\\r\\n      <!-- \\r\\n      (rowDoubleClicked)=\\\"onRowDoubleCilcked(event)\\\"\\r\\n      (cellDoubleClicked)=\\\"onCellDoubleClicked($event)\\\"-->\\r\\n    </ag-grid-angular>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../api.service';\r\nimport { Router } from '@angular/router';\r\nimport {ngDevModeResetPerfCounters}from '@angular/core/src/render3/ng_dev_mode';\r\nimport { JsonPipe}from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-partner-ngo-grid',\r\n  templateUrl: './partner-ngo-grid.component.html',\r\n  styleUrls: ['./partner-ngo-grid.component.css']\r\n})\r\nexport class PartnerNgoGridComponent implements OnInit {\r\n\r\n  private data:any=[];\r\n  private headers=[\r\n    {headerName: 'Partner NGO', field: 'name',filter:true, sortable: true},\r\n    {headerName: 'Description', field: 'description',filter:true},\r\n    {headerName: 'Branch', field: 'branch',filter:true},\r\n    {headerName: 'Registration Number', field: 'registrationNumber',filter:true},\r\n    {headerName: 'Address Line 1', field: 'addressLine1',filter:true},\r\n    {headerName: 'Address Line 2', field: 'addressLine2',filter:true},\r\n    {headerName: 'City', field: 'city',filter:true},\r\n    {headerName: 'State', field: 'state',filter:true},\r\n    {headerName: 'Pincode', field: 'pincode',filter:true},\r\n\r\n    {headerName: 'Authorized Person Name', field: 'authorizedPersonName'},\r\n    {headerName: 'Authorized Person Contact', field: 'authorizedPersonContact'},\r\n    {headerName: 'Alternate Contact Number', field: 'contact2'},\r\n    {headerName: 'Email ID', field: 'email1'},\r\n    {headerName: 'Alternate Email ID', field: 'email2'},\r\n\r\n    {headerName: 'Authorized Person Name (2)', field: 'authorizedPersonName1'},\r\n    {headerName: 'Authorized Person Contact (2)', field: 'authorizedPersonContact1'},\r\n    {headerName: 'Alternate Contact Number (2)', field: 'contact21'},\r\n    {headerName: 'Email ID (2)', field: 'email11'},\r\n    {headerName: 'Alternate Email ID (2)', field: 'email21'},\r\n    \r\n    {headerName: 'Authorized Person Name (3)', field: 'authorizedPersonName2'},\r\n    {headerName: 'Authorized Person Contact (3)', field: 'authorizedPersonContact2'},\r\n    {headerName: 'Alternate Contact Number (3)', field: 'contact22'},\r\n    {headerName: 'Email ID (3)', field: 'email12'},\r\n    {headerName: 'Alternate Email ID (3)', field: 'email22'},\r\n\r\n    {headerName: 'Authorized Person Name (4)', field: 'authorizedPersonName3'},\r\n    {headerName: 'Authorized Person Contact (4)', field: 'authorizedPersonContact3'},\r\n    {headerName: 'Alternate Contact Number (4)', field: 'contact23'},\r\n    {headerName: 'Email ID (4)', field: 'email13'},\r\n    {headerName: 'Alternate Email ID (4)', field: 'email23'},\r\n\r\n    {headerName: 'Authorized Person Name (5)', field: 'authorizedPersonName4'},\r\n    {headerName: 'Authorized Person Contact (5)', field: 'authorizedPersonContact4'},\r\n    {headerName: 'Alternate Contact Number (5)', field: 'contact24'},\r\n    {headerName: 'Email ID (5)', field: 'email14'},\r\n    {headerName: 'Alternate Email ID (5)', field: 'email24'},\r\n\r\n\r\n  ];\r\n// {headerName: 'State', field: 'state',filter:true},\r\n  private myGrid: any;\r\n  private gridApi: any;\r\n\r\n  constructor(private apiService:ApiService,\r\n              private router:Router) { }\r\n\r\n  ngOnInit() {\r\n    // this.data=[\r\n    //   {name:'n1', description: 'd1', city: 'c1', state: 's1', authorizedPerson: [\r\n    //     {name: 'a1'},{name:'a2'}\r\n    //   ]},\r\n    //   {name:'n2', description: 'd2', city: 'c2', state: 's2', authorizedPerson: [\r\n    //     {name: 'b1'},{name:'b2'},{name:'b3'},{name:'b4'},{name:'b5'}\r\n    //   ]}\r\n    // ];\r\n    this.apiService.getData('partnerngo').subscribe(response=>{\r\n      let result:any=JSON.parse(JSON.stringify(response));\r\n      Array.from(result).forEach(element => {\r\n        let authorizedPersons=JSON.parse(JSON.stringify(element)).authorizedPerson;\r\n        if(authorizedPersons[0]!=null){\r\n        Object.assign(element, {authorizedPersonName: authorizedPersons[0].name});\r\n        Object.assign(element, {authorizedPersonContact: authorizedPersons[0].contact1});\r\n        Object.assign(element, {contact2: authorizedPersons[0].contact2});\r\n        Object.assign(element, {email1: authorizedPersons[0].email1});\r\n        Object.assign(element, {email2: authorizedPersons[0].email2});\r\n        }\r\n        \r\n        if(authorizedPersons[1]!=null){\r\n          Object.assign(element, {authorizedPersonName1: authorizedPersons[1].name});\r\n          Object.assign(element, {authorizedPersonContact1: authorizedPersons[1].contact1});\r\n          Object.assign(element, {contact21: authorizedPersons[1].contact2});\r\n          Object.assign(element, {email11: authorizedPersons[1].email1});\r\n          Object.assign(element, {email21: authorizedPersons[1].email2});\r\n        }\r\n\r\n        if(authorizedPersons[2]!=null){\r\n          Object.assign(element, {authorizedPersonName2: authorizedPersons[2].name});\r\n          Object.assign(element, {authorizedPersonContact2: authorizedPersons[2].contact1});\r\n          Object.assign(element, {contact22: authorizedPersons[2].contact2});\r\n          Object.assign(element, {email12: authorizedPersons[2].email1});\r\n          Object.assign(element, {email22: authorizedPersons[2].email2});\r\n        }\r\n\r\n        if(authorizedPersons[3]!=null){\r\n        Object.assign(element, {authorizedPersonName3: authorizedPersons[3].name});\r\n        Object.assign(element, {authorizedPersonContact3: authorizedPersons[3].contact1});\r\n        Object.assign(element, {contact23: authorizedPersons[3].contact2});\r\n        Object.assign(element, {email13: authorizedPersons[3].email1});\r\n        Object.assign(element, {email23: authorizedPersons[3].email2});\r\n        }\r\n\r\n        if(authorizedPersons[4]!=null){\r\n        Object.assign(element, {authorizedPersonName4: authorizedPersons[4].name});\r\n        Object.assign(element, {authorizedPersonContact4: authorizedPersons[4].contact1});\r\n        Object.assign(element, {contact24: authorizedPersons[4].contact2});\r\n        Object.assign(element, {email14: authorizedPersons[4].email1});\r\n        Object.assign(element, {email24: authorizedPersons[4].email2});\r\n        }\r\n\r\n      });\r\n      console.log(response);\r\n      console.log(this.data);\r\n      this.data=result;\r\n    });\r\n  }\r\n\r\n  onRowCilcked(event){\r\n    console.log(event.rowIndex);\r\n    this.router.navigateByUrl(\"/partnerngo/edit/\"+((event.rowIndex)+1));\r\n  }\r\n\r\n  // onRowDoubleCilcked(event){}\r\n\r\n  //onCellDoubleClicked(event){}\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcGFydG5lci1uZ28vcGFydG5lci1uZ28uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!doctype html>\\r\\n<html lang=\\\"en\\\">\\r\\n  <head>\\r\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1 user-scalable=no\\\">\\r\\n  </head>\\r\\n\\r\\n  <body>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"page-header well well-sm\\\">\\r\\n        <h3><strong> Partner NGO Registration</strong></h3>\\r\\n      </div>\\r\\n      \\r\\n      <form [formGroup]=\\\"myForm\\\">\\r\\n        <!-- ToDo: Decrease space between the table rows-->\\r\\n        <div class=\\\"panel panel-info\\\">\\r\\n          <div class=\\\"panel-heading\\\">\\r\\n            <label>Basic Information</label>\\r\\n          </div>\\r\\n          <div class=\\\"panel-body\\\">\\r\\n            <div formGroupName=\\\"basicInfo\\\">\\r\\n              <!-- <table class=\\\"form-table\\\"> -->\\r\\n              <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                    <div class=\\\"form-group required\\\">\\r\\n                      <label class=\\\"control-label\\\">Name</label>\\r\\n                      <input type=\\\"text\\\" formControlName = \\\"name\\\" class=\\\"form-control well well-sm\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"control-label\\\">Description</label>\\r\\n                      <input type=\\\"text\\\" formControlName = \\\"description\\\" class=\\\"form-control well well-sm\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"control-label\\\">Branch</label>\\r\\n                      <input type=\\\"text\\\" formControlName = \\\"branch\\\" class=\\\"form-control well well-sm\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"control-label\\\">Registration Number</label>\\r\\n                      <input type=\\\"text\\\" formControlName = \\\"registrationNumber\\\" class=\\\"form-control well well-sm\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              <!-- </table>               -->\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"panel panel-info\\\">\\r\\n          <div class=\\\"panel-heading\\\">\\r\\n            <label>Address</label>\\r\\n          </div>\\r\\n          <div class=\\\"panel-body\\\">\\r\\n            <div formGroupName=\\\"address\\\">\\r\\n              <!-- <table class=\\\"form-table\\\"> -->\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                    <div class=\\\"form-group required\\\">\\r\\n                      <label class=\\\"control-label\\\">Address Line 1</label>\\r\\n                      <input type=\\\"text\\\" formControlName = \\\"addressLine1\\\" class=\\\"form-control well well-sm\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"control-label\\\">Address Line 2</label>\\r\\n                      <input type=\\\"text\\\" formControlName = \\\"addressLine2\\\" class=\\\"form-control well well-sm\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                    <div class=\\\"form-group required\\\">\\r\\n                      <label class=\\\"control-label\\\">City</label>\\r\\n                      <input type=\\\"text\\\" formControlName = \\\"city\\\" class=\\\"form-control well well-sm\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                    <div class=\\\"form-group required\\\">\\r\\n                      <label class=\\\"control-label\\\">State</label>\\r\\n                      <input type=\\\"text\\\" formControlName = \\\"state\\\" class=\\\"form-control well well-sm\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"control-label\\\">Pincode</label>\\r\\n                      <input type=\\\"text\\\" formControlName = \\\"pincode\\\" class=\\\"form-control well well-sm\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n              <!-- </table>               -->\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"panel panel-info\\\">\\r\\n          <div class=\\\"panel-heading\\\">\\r\\n            <label>Authorised Persons</label>\\r\\n          </div>\\r\\n          <div class=\\\"panel-body\\\">\\r\\n            <ul class=\\\"nav nav-tabs\\\" active=\\\"selectedTab\\\">\\r\\n              <li class=\\\"nav active\\\" *ngIf=\\\"numberOfAuthorizedPersons>0\\\"><a href=\\\"#tab0\\\" data-toggle=\\\"tab\\\" (click)=\\\"activateTab(1)\\\">Person 1</a></li>\\r\\n              <li class=\\\"nav\\\" *ngFor=\\\"let num of getArray(numberOfAuthorizedPersons-1); let i=index;\\\"><a href=\\\"#tab{{i+1}}\\\" data-toggle=\\\"tab\\\" (click)=\\\"activateTab(i+2)\\\">Person {{i+2}}</a></li>\\r\\n              <!--li class=\\\"nav active\\\" *ngIf=\\\"numberOfAuthorizedPersons>0\\\"><a href=\\\"#tab{{numberOfAuthorizedPersons-1}}\\\" data-toggle=\\\"tab\\\" (click)=\\\"activateTab(numberOfAuthorizedPersons)\\\">Person {{numberOfAuthorizedPersons}}</a></li-->\\r\\n              <!--li class=\\\"nav active\\\" *ngIf=\\\"numberOfAuthorizedPersons>0\\\"><a href=\\\"#tab{{numberOfAuthorizedPersons-1}}\\\" data-toggle=\\\"tab\\\" (click)=\\\"selectedTab=i\\\">Person {{numberOfAuthorizedPersons}}</a></li-->\\r\\n              <div class=\\\"pull-right\\\">\\r\\n                <button class=\\\"btn btn-sm btn-primary btn-space right\\\" (click)=\\\"addAuthorisedPerson()\\\" [disabled]=\\\"isMaxLimitReached(5)\\\">Add Person</button>\\r\\n                <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"removeAuthorisedPerson(selectedTab)\\\" confirm=\\\"Are you sure you want to delete?\\\" confirm-ok=\\\"Yes\\\" confirm-cancel=\\\"No\\\" [disabled]=\\\"isMinLimitReached()\\\">Remove Person</button>\\r\\n              </div>\\r\\n              <!--ToDo: Setup dynamic Tab Creation and Add Delete button-->\\r\\n            </ul>\\r\\n\\r\\n            <div class=\\\"tab-content\\\">\\r\\n              <div formArrayName=\\\"authorizedPersons\\\">\\r\\n                <!--ToDo: NgFor not working: Check-->\\r\\n                <div class=\\\"tab-pane\\\" *ngFor=\\\"let person of myForm.get('authorizedPersons').controls;let i=index\\\" formGroupName=\\\"{{i}}\\\" id=\\\"tab{{i}}\\\">\\r\\n                  <!-- <table class=\\\"form-table\\\"> -->\\r\\n                  <div *ngIf=\\\"selectedTab==i\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                        <div class=\\\"form-group required\\\">\\r\\n                          <label class=\\\"control-label\\\">Name</label>\\r\\n                          <input type=\\\"text\\\" formControlName = \\\"name\\\" class=\\\"form-control well well-sm\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                        <div class=\\\"form-group required\\\">\\r\\n                          <label class=\\\"control-label\\\">Contact Number</label>\\r\\n                          <input type=\\\"text\\\" formControlName = \\\"contact1\\\" class=\\\"form-control well well-sm\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"control-label\\\">Alternate Contact Number</label>\\r\\n                          <input type=\\\"text\\\" formControlName = \\\"contact2\\\" class=\\\"form-control well well-sm\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label\\\">Email ID</label>\\r\\n                            <input type=\\\"text\\\" formControlName = \\\"email1\\\" class=\\\"form-control well well-sm\\\">\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  <!-- </table>               -->\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n      <!--<span>{{myForm.value | json}}</span>-->\\r\\n      <div class=\\\"pull-right\\\">\\r\\n        <button (click)=\\\"onSubmit()\\\" *ngIf=\\\"!mode\\\" class=\\\"btn btn-primary btn-space\\\">Register</button>\\r\\n        <button (click)=\\\"onEdit()\\\" *ngIf=\\\"mode=='view'\\\" class=\\\"btn btn-primary btn-space\\\">Edit</button>\\r\\n        <button (click)=\\\"onSubmit()\\\" *ngIf=\\\"mode=='edit'\\\" class=\\\"btn btn-primary btn-space\\\">Update</button>\\r\\n        <button (click)=\\\"onClose()\\\" *ngIf=\\\"mode=='view' || mode=='edit'\\\" class=\\\"btn btn-primary btn-space\\\">Close\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </body>\\r\\n</html>\\r\\n\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { FormsModule, FormGroup, FormControl, Validators, FormBuilder, FormArray }  from '@angular/forms';\r\nimport { ApiService } from '../api.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport {NgOnChangesFeature}from '@angular/core/src/render3';\r\n// import { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\n@Component({\r\n  selector: 'app-partner-ngo',\r\n  templateUrl: './partner-ngo.component.html',\r\n  styleUrls: ['./partner-ngo.component.css']\r\n})\r\nexport class PartnerNGOComponent implements OnInit, AfterViewInit {\r\n\r\n  myForm: FormGroup;\r\n\r\n  private numberOfAuthorizedPersons: number=0;\r\n  private selectedTab: number=-1;\r\n  private mode: String;\r\n  private id: number;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n             private apiService: ApiService,\r\n             private route: ActivatedRoute,\r\n             private router: Router){ }\r\n\r\n  ngOnInit() {\r\n    console.log('Loading PartnerNgo Screen');\r\n    this.myForm = this.formBuilder.group({\r\n      basicInfo: this.partnerNgoGroup(),\r\n      address: this.address(),\r\n      authorizedPersons: this.formBuilder.array([this.authorisedPerson()])\r\n    });\r\n\r\n    this.route.paramMap.subscribe(params=>{\r\n      console.log(params);\r\n      if(params.get('mode')){\r\n        this.mode=params.get('mode');\r\n        this.id=+params.get('id');\r\n      }\r\n      if(this.id){\r\n        if(!isNaN(this.id)){\r\n          // let data={basicInfo: {name:\"name\", description:\"desc\", branch:\"branch\", registrationNumber:\"regNum\"},\r\n          //           address: {addressLine1: \"add1\", addressLine2: \"add2\", city: \"city\", state: \"state\", pincode:\"pin\"},\r\n          //           authorizedPersons: [{name: \"a1\", contact1: \"c1\", contact2: \"c2\", email1: \"e1\", email2: \"e2\"},\r\n          //           {name: \"a1\", contact1: \"c1\", contact2: \"c2\", email1: \"e1\", email2: \"e2\"}\r\n          // ]};\r\n          this.apiService.getData('partnerngo',this.id, true).subscribe(result =>{\r\n            let data=JSON.parse(JSON.stringify(result));\r\n            console.log(\"GetResponse: \"+data);\r\n            if(data.authorizedPersons){\r\n              data.authorizedPersons.forEach((authorizedPerson, index) =>{\r\n                if(index!=0){\r\n                  this.addAuthorisedPerson();\r\n                }\r\n              });\r\n            }\r\n            this.myForm.setValue(data);\r\n          });\r\n        }else{\r\n          alert('Error in ID');\r\n        }\r\n      }\r\n    });\r\n\r\n    this.numberOfAuthorizedPersons=this.getAuthorizedPersons().length;\r\n    this.activateTab(1);\r\n\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    if(this.mode=='view'){\r\n      Array.from(document.getElementsByClassName('form-control')).forEach(element => {\r\n        (<HTMLInputElement>element).disabled = true;\r\n        //TODO: Disable add/remove buttons\r\n      });\r\n    }else{\r\n      Array.from(document.getElementsByClassName('form-control')).forEach(element => {\r\n        (<HTMLInputElement>element).disabled = false;\r\n        //TODO: Enable add/remove buttons\r\n      });\r\n    }\r\n  }\r\n\r\n  partnerNgoGroup(): FormGroup{\r\n    return this.formBuilder.group({\r\n      name: ['',[\r\n        Validators.required, Validators.maxLength(200)\r\n      ]],\r\n      description: ['',[\r\n        Validators.maxLength(200)\r\n      ]],\r\n      branch: ['',[\r\n        Validators.maxLength(200)\r\n      ]],\r\n      registrationNumber: ['', [\r\n        Validators.maxLength(200)\r\n      ]]\r\n      //todo: registrationNumber Validation.\r\n    });\r\n  }\r\n\r\n  address(): FormGroup{\r\n    return this.formBuilder.group({\r\n      addressLine1: ['', [\r\n        Validators.required, Validators.maxLength(2000)\r\n      ]],\r\n      addressLine2: ['', [\r\n        Validators.maxLength(2000)\r\n      ]],\r\n      state: ['', [\r\n        Validators.required, Validators.maxLength(50)\r\n      ]],\r\n      city: ['', [\r\n        Validators.required, Validators.maxLength(50)\r\n      ]],\r\n      pincode: ['', [\r\n        Validators.pattern(\"^[0-9]+$\"), Validators.minLength(6), Validators.maxLength(6)\r\n      ]]\r\n    });\r\n  }\r\n\r\n  authorisedPerson(): FormGroup{\r\n    return this.formBuilder.group({\r\n      name: ['',[\r\n        Validators.required, Validators.maxLength(200)\r\n      ]],\r\n      contact1: ['', [\r\n        Validators.required, Validators.pattern(\"^[0-9]+$\"), Validators.minLength(10), Validators.maxLength(10)\r\n      ]],\r\n      contact2: ['', [\r\n        Validators.pattern(\"^[0-9]+$\"), Validators.minLength(10), Validators.maxLength(10)\r\n      ]],\r\n      email1: ['', [\r\n        Validators.email, Validators.maxLength(50)\r\n      ]]\r\n\r\n    });\r\n  }\r\n\r\n  getAuthorizedPersons(): FormArray{\r\n    return this.myForm.get('authorizedPersons') as FormArray;\r\n  }\r\n\r\n  addAuthorisedPerson():void{\r\n    if(this.numberOfAuthorizedPersons<5){\r\n      (this.getAuthorizedPersons()).push(this.authorisedPerson());\r\n      this.numberOfAuthorizedPersons=this.getAuthorizedPersons().length;\r\n      //this.activateTab(this.numberOfAuthorizedPersons);\r\n    }\r\n  }\r\n\r\n  removeAuthorisedPerson(index): void{\r\n    if(this.numberOfAuthorizedPersons>1){\r\n      // var authorizedPerson = this.getAuthorizedPersons();\r\n      // var name = authorizedPerson[index].get('name');\r\n      // confirm(\"Do you want to delete \"\r\n      if(confirm(\"Do you want to delete \")){\r\n        (this.getAuthorizedPersons()).removeAt(index);\r\n        this.numberOfAuthorizedPersons=this.getAuthorizedPersons().length;\r\n        if(this.selectedTab==this.numberOfAuthorizedPersons)\r\n          this.selectedTab=this.numberOfAuthorizedPersons-1;\r\n      }\r\n    }else{\r\n\r\n    }\r\n  }\r\n\r\n  getNumberOfAuthorizedPersons(): Number{\r\n    return this.numberOfAuthorizedPersons;\r\n  }\r\n\r\n  isMaxLimitReached(val):boolean{\r\n    return this.numberOfAuthorizedPersons>=val;\r\n  }\r\n\r\n  isMinLimitReached():boolean{\r\n    return this.numberOfAuthorizedPersons===1;\r\n  }\r\n\r\n  getArray(val): number[]{\r\n    return Array(val);\r\n  }\r\n\r\n  activateTab(val): void{\r\n      this.selectedTab=val-1;\r\n  }\r\n\r\n  onUpdate(){\r\n    //TODO\r\n  }\r\n\r\n  onEdit(){\r\n    //TODO: instead change mode and make fields Editable.\r\n    this.router.navigateByUrl(\"/partnerngo/edit/\"+this.id);\r\n  }\r\n\r\n  onClose(){\r\n    this.router.navigateByUrl(\"/grid/partnerngo\");\r\n  }\r\n\r\n  checkForMandatoryValidations(partnerNgoDetails) {\r\n   let checkflag:boolean=false;\r\n    if (partnerNgoDetails.name && partnerNgoDetails.addressLine1 && partnerNgoDetails.city && partnerNgoDetails.state)\r\n     \r\n       {\r\n         if(partnerNgoDetails.authorizedPerson.length)\r\n         {\r\n            partnerNgoDetails.authorizedPerson.forEach(o =>{\r\n              if(!o.name || !o.contact1)\r\n              {\r\n                checkflag = true;\r\n                return false;\r\n              }\r\n              \r\n            })\r\n            if(!checkflag)\r\n            {\r\n              return true;\r\n            }\r\n         }\r\n         else{\r\n        return true;\r\n         }\r\n       }\r\n   \r\n    else\r\n      return false;\r\n\r\n  }\r\n  onSubmit(){\r\n    let json= Object.assign({authorizedPerson:this.getAuthorizedPersons().value}, this.myForm.get('basicInfo').value, this.myForm.get('address').value);\r\n    if(this.mode=='edit'){\r\n      json=Object.assign(json, {id:this.id});\r\n    }\r\n    console.log('submitting: ',json);\r\n    if(this.checkForMandatoryValidations(json)){\r\n    let response = this.apiService.postData(json,'partnerngo');\r\n    if(response){\r\n      if(this.mode=='edit'){\r\n        alert('Succesfully updated Partner NGO');\r\n      }else{\r\n        alert('Succesfully registered Partner NGO');\r\n      }\r\n      this.router.navigateByUrl(\"/grid/partnerngo\");\r\n    }\r\n  }\r\n  else{\r\n    alert('Please fill out the mandatory fields');\r\n  }\r\n  }\r\n}\r\n","module.exports = \"/*\\r\\n * Specific styles of signin component\\r\\n */\\r\\n/*\\r\\n * General styles\\r\\n */\\r\\nbody, html {\\r\\n  height: 100%;\\r\\n  background-repeat: no-repeat;\\r\\n  background-image: -webkit-gradient(linear, left top, left bottom, from(rgb(104, 145, 162)), to(rgb(12, 97, 33)));\\r\\n  background-image: linear-gradient(rgb(104, 145, 162), rgb(12, 97, 33));\\r\\n}\\r\\n.card-container.card {\\r\\n  max-width: 350px;\\r\\n  padding: 40px 40px;\\r\\n}\\r\\n.btn {\\r\\n  font-weight: 700;\\r\\n  height: 36px;\\r\\n  -moz-user-select: none;\\r\\n  -webkit-user-select: none;\\r\\n  -ms-user-select: none;\\r\\n      user-select: none;\\r\\n  cursor: default;\\r\\n}\\r\\n/*\\r\\n * Card component\\r\\n */\\r\\n.card {\\r\\n  background-color: #F7F7F7;\\r\\n  /* just in case there no content*/\\r\\n  padding: 20px 25px 30px;\\r\\n  margin: 0 auto 25px;\\r\\n  margin-top: 50px;\\r\\n  /* shadows and rounded borders */\\r\\n  border-radius: 2px;\\r\\n  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n.profile-img-card {\\r\\n  width: 96px;\\r\\n  height: 96px;\\r\\n  margin: 0 auto 10px;\\r\\n  display: block;\\r\\n  border-radius: 50%;\\r\\n}\\r\\n/*\\r\\n * Form styles\\r\\n */\\r\\n.profile-name-card {\\r\\n  font-size: 16px;\\r\\n  font-weight: bold;\\r\\n  text-align: center;\\r\\n  margin: 10px 0 0;\\r\\n  min-height: 1em;\\r\\n}\\r\\n.reauth-email {\\r\\n  display: block;\\r\\n  color: #404040;\\r\\n  line-height: 2;\\r\\n  margin-bottom: 10px;\\r\\n  font-size: 14px;\\r\\n  text-align: center;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  white-space: nowrap;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n.form-signin #inputEmail,\\r\\n.form-signin #inputPassword {\\r\\n  direction: ltr;\\r\\n  height: 44px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n.form-signin input[type=email],\\r\\n.form-signin input[type=password],\\r\\n.form-signin input[type=text],\\r\\n.form-signin button {\\r\\n  width: 100%;\\r\\n  display: block;\\r\\n  margin-bottom: 10px;\\r\\n  z-index: 1;\\r\\n  position: relative;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n.form-signin .form-control:focus {\\r\\n  border-color: rgb(104, 145, 162);\\r\\n  outline: 0;\\r\\n  box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgb(104, 145, 162);\\r\\n}\\r\\n.btn.btn-signin,.btn-cancel {\\r\\n  /*background-color: #4d90fe; */\\r\\n  background-color: rgb(104, 145, 162);\\r\\n  /* background-color: linear-gradient(rgb(104, 145, 162), rgb(12, 97, 33));*/\\r\\n  padding: 0px;\\r\\n  font-weight: 700;\\r\\n  font-size: 14px;\\r\\n  height: 36px;\\r\\n  border-radius: 3px;\\r\\n  border: none;\\r\\n  -webkit-transition: all 0.218s;\\r\\n  transition: all 0.218s;\\r\\n}\\r\\n.btn.btn-cancel {\\r\\n  background-color: rgb(255, 34, 24);\\r\\n}\\r\\n.btn.btn-signin:hover,\\r\\n.btn.btn-signin:active,\\r\\n.btn.btn-signin:focus {\\r\\n  background-color: rgb(12, 97, 33);\\r\\n}\\r\\n.forgot-password {\\r\\n  color: rgb(104, 145, 162);\\r\\n}\\r\\n.forgot-password:hover,\\r\\n.forgot-password:active,\\r\\n.forgot-password:focus{\\r\\n  color: rgb(12, 97, 33);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVFO0FBQ0Y7O0VBRUU7QUFDRjtFQUNFLFlBQVk7RUFDWiw0QkFBNEI7RUFDNUIsZ0hBQXNFO0VBQXRFLHNFQUFzRTtBQUN4RTtBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBQUNwQjtBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixzQkFBc0I7RUFDdEIseUJBQXlCO0VBQ3pCLHFCQUFpQjtNQUFqQixpQkFBaUI7RUFDakIsZUFBZTtBQUNqQjtBQUVBOztFQUVFO0FBQ0Y7RUFDRSx5QkFBeUI7RUFDekIsaUNBQWlDO0VBQ2pDLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsZ0JBQWdCO0VBQ2hCLGdDQUFnQztFQUdoQyxrQkFBa0I7RUFHbEIsMENBQTBDO0FBQzVDO0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixjQUFjO0VBR2Qsa0JBQWtCO0FBQ3BCO0FBRUE7O0VBRUU7QUFDRjtFQUNFLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixlQUFlO0FBQ2pCO0FBRUE7RUFDRSxjQUFjO0VBQ2QsY0FBYztFQUNkLGNBQWM7RUFDZCxtQkFBbUI7RUFDbkIsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUduQixzQkFBc0I7QUFDeEI7QUFFQTs7RUFFRSxjQUFjO0VBQ2QsWUFBWTtFQUNaLGVBQWU7QUFDakI7QUFFQTs7OztFQUlFLFdBQVc7RUFDWCxjQUFjO0VBQ2QsbUJBQW1CO0VBQ25CLFVBQVU7RUFDVixrQkFBa0I7RUFHbEIsc0JBQXNCO0FBQ3hCO0FBRUE7RUFDRSxnQ0FBZ0M7RUFDaEMsVUFBVTtFQUVWLHVFQUF1RTtBQUN6RTtBQUVBO0VBQ0UsOEJBQThCO0VBQzlCLG9DQUFvQztFQUNwQywyRUFBMkU7RUFDM0UsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsWUFBWTtFQUdaLGtCQUFrQjtFQUNsQixZQUFZO0VBR1osOEJBQThCO0VBQzlCLHNCQUFzQjtBQUN4QjtBQUVBO0VBQ0Usa0NBQWtDO0FBQ3BDO0FBQ0E7OztFQUdFLGlDQUFpQztBQUNuQztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCO0FBRUE7OztFQUdFLHNCQUFzQjtBQUN4QiIsImZpbGUiOiJhcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIFNwZWNpZmljIHN0eWxlcyBvZiBzaWduaW4gY29tcG9uZW50XHJcbiAqL1xyXG4vKlxyXG4gKiBHZW5lcmFsIHN0eWxlc1xyXG4gKi9cclxuYm9keSwgaHRtbCB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHJnYigxMDQsIDE0NSwgMTYyKSwgcmdiKDEyLCA5NywgMzMpKTtcclxufVxyXG5cclxuLmNhcmQtY29udGFpbmVyLmNhcmQge1xyXG4gIG1heC13aWR0aDogMzUwcHg7XHJcbiAgcGFkZGluZzogNDBweCA0MHB4O1xyXG59XHJcblxyXG4uYnRuIHtcclxuICBmb250LXdlaWdodDogNzAwO1xyXG4gIGhlaWdodDogMzZweDtcclxuICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xyXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgY3Vyc29yOiBkZWZhdWx0O1xyXG59XHJcblxyXG4vKlxyXG4gKiBDYXJkIGNvbXBvbmVudFxyXG4gKi9cclxuLmNhcmQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNGN0Y3Rjc7XHJcbiAgLyoganVzdCBpbiBjYXNlIHRoZXJlIG5vIGNvbnRlbnQqL1xyXG4gIHBhZGRpbmc6IDIwcHggMjVweCAzMHB4O1xyXG4gIG1hcmdpbjogMCBhdXRvIDI1cHg7XHJcbiAgbWFyZ2luLXRvcDogNTBweDtcclxuICAvKiBzaGFkb3dzIGFuZCByb3VuZGVkIGJvcmRlcnMgKi9cclxuICAtbW96LWJvcmRlci1yYWRpdXM6IDJweDtcclxuICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDJweDtcclxuICBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgLW1vei1ib3gtc2hhZG93OiAwcHggMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMyk7XHJcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiAwcHggMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMyk7XHJcbiAgYm94LXNoYWRvdzogMHB4IDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG59XHJcblxyXG4ucHJvZmlsZS1pbWctY2FyZCB7XHJcbiAgd2lkdGg6IDk2cHg7XHJcbiAgaGVpZ2h0OiA5NnB4O1xyXG4gIG1hcmdpbjogMCBhdXRvIDEwcHg7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgLW1vei1ib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG59XHJcblxyXG4vKlxyXG4gKiBGb3JtIHN0eWxlc1xyXG4gKi9cclxuLnByb2ZpbGUtbmFtZS1jYXJkIHtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIG1hcmdpbjogMTBweCAwIDA7XHJcbiAgbWluLWhlaWdodDogMWVtO1xyXG59XHJcblxyXG4ucmVhdXRoLWVtYWlsIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBjb2xvcjogIzQwNDA0MDtcclxuICBsaW5lLWhlaWdodDogMjtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG5cclxuLmZvcm0tc2lnbmluICNpbnB1dEVtYWlsLFxyXG4uZm9ybS1zaWduaW4gI2lucHV0UGFzc3dvcmQge1xyXG4gIGRpcmVjdGlvbjogbHRyO1xyXG4gIGhlaWdodDogNDRweDtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuXHJcbi5mb3JtLXNpZ25pbiBpbnB1dFt0eXBlPWVtYWlsXSxcclxuLmZvcm0tc2lnbmluIGlucHV0W3R5cGU9cGFzc3dvcmRdLFxyXG4uZm9ybS1zaWduaW4gaW5wdXRbdHlwZT10ZXh0XSxcclxuLmZvcm0tc2lnbmluIGJ1dHRvbiB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB6LWluZGV4OiAxO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbi5mb3JtLXNpZ25pbiAuZm9ybS1jb250cm9sOmZvY3VzIHtcclxuICBib3JkZXItY29sb3I6IHJnYigxMDQsIDE0NSwgMTYyKTtcclxuICBvdXRsaW5lOiAwO1xyXG4gIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwwLDAsLjA3NSksMCAwIDhweCByZ2IoMTA0LCAxNDUsIDE2Mik7XHJcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwwLDAsLjA3NSksMCAwIDhweCByZ2IoMTA0LCAxNDUsIDE2Mik7XHJcbn1cclxuXHJcbi5idG4uYnRuLXNpZ25pbiwuYnRuLWNhbmNlbCB7XHJcbiAgLypiYWNrZ3JvdW5kLWNvbG9yOiAjNGQ5MGZlOyAqL1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxMDQsIDE0NSwgMTYyKTtcclxuICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lYXItZ3JhZGllbnQocmdiKDEwNCwgMTQ1LCAxNjIpLCByZ2IoMTIsIDk3LCAzMykpOyovXHJcbiAgcGFkZGluZzogMHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIGhlaWdodDogMzZweDtcclxuICAtbW96LWJvcmRlci1yYWRpdXM6IDNweDtcclxuICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDNweDtcclxuICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIC1vLXRyYW5zaXRpb246IGFsbCAwLjIxOHM7XHJcbiAgLW1vei10cmFuc2l0aW9uOiBhbGwgMC4yMThzO1xyXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuMjE4cztcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4yMThzO1xyXG59XHJcblxyXG4uYnRuLmJ0bi1jYW5jZWwge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDM0LCAyNCk7XHJcbn1cclxuLmJ0bi5idG4tc2lnbmluOmhvdmVyLFxyXG4uYnRuLmJ0bi1zaWduaW46YWN0aXZlLFxyXG4uYnRuLmJ0bi1zaWduaW46Zm9jdXMge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxMiwgOTcsIDMzKTtcclxufVxyXG5cclxuLmZvcmdvdC1wYXNzd29yZCB7XHJcbiAgY29sb3I6IHJnYigxMDQsIDE0NSwgMTYyKTtcclxufVxyXG5cclxuLmZvcmdvdC1wYXNzd29yZDpob3ZlcixcclxuLmZvcmdvdC1wYXNzd29yZDphY3RpdmUsXHJcbi5mb3Jnb3QtcGFzc3dvcmQ6Zm9jdXN7XHJcbiAgY29sb3I6IHJnYigxMiwgOTcsIDMzKTtcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"card card-container\\\">\\r\\n    <img class=\\\"profile-img-card\\\" id=\\\"profile-img\\\" src=\\\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\\\"/>\\r\\n    <p class=\\\"profile-name-card\\\" id=\\\"profile-name\\\"></p>\\r\\n\\r\\n    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.form.valid && register()\\\" name=\\\"form\\\" novalidate>\\r\\n      <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">{{errorMessage}}</div>\\r\\n      <span class=\\\"reauth-email\\\" id=\\\"reauth-email\\\"></span>\\r\\n      <div [ngClass]=\\\"{ 'has-error': f.submitted && !fullName.valid }\\\" class=\\\"form-group\\\">\\r\\n        <label for=\\\"fullName\\\">Full Name</label>\\r\\n        <input #fullName=\\\"ngModel\\\" [(ngModel)]=\\\"user.fullName\\\" class=\\\"form-control\\\" id=\\\"fullName\\\" name=\\\"fullName\\\"\\r\\n               required type=\\\"text\\\"/>\\r\\n        <div *ngIf=\\\"f.submitted && !fullName.valid\\\" class=\\\"help-block\\\">The full Name is required</div>\\r\\n      </div>\\r\\n      <div [ngClass]=\\\"{ 'has-error': f.submitted && !username.valid }\\\" class=\\\"form-group\\\">\\r\\n        <label for=\\\"username\\\">Email Address</label>\\r\\n        <input #username=\\\"ngModel\\\" [(ngModel)]=\\\"user.username\\\" class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\"\\r\\n               pattern=\\\"[^ @]*@[^ @]*\\\" required type=\\\"text\\\"/>\\r\\n        <div *ngIf=\\\"f.submitted && !username.valid\\\" class=\\\"help-block\\\">\\r\\n\\r\\n          <div *ngIf=\\\"username.errors.required\\\">\\r\\n            Email is required.\\r\\n          </div>\\r\\n          <div *ngIf=\\\"username.errors.pattern\\\">\\r\\n            A valid email address is required\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      <div [ngClass]=\\\"{ 'has-error': f.submitted && !password.valid }\\\" class=\\\"form-group\\\">\\r\\n        <label for=\\\"password\\\">Password</label>\\r\\n        <input #password=\\\"ngModel\\\" [(ngModel)]=\\\"user.password\\\" class=\\\"form-control\\\" id=\\\"password\\\" minlength=\\\"4\\\"\\r\\n               name=\\\"password\\\" required type=\\\"password\\\"/>\\r\\n        <div *ngIf=\\\"f.submitted && !password.valid\\\" class=\\\"help-block\\\">\\r\\n\\r\\n          <div *ngIf=\\\"password.errors.required\\\">\\r\\n            password is required.\\r\\n          </div>\\r\\n          <div *ngIf=\\\"password.errors.minlength\\\">\\r\\n            password must be at least 4 characters long.\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"checkbox\\\" id=\\\"remember\\\">\\r\\n\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-lg btn-primary btn-block btn-signin\\\" type=\\\"submit\\\">Create Account</button>\\r\\n      <button [routerLink]=\\\"['/login']\\\" class=\\\"btn btn-lg btn-danger btn-block btn-cancel\\\" type=\\\"button\\\">Cancel</button>\\r\\n\\r\\n    </form><!-- /form -->\\r\\n\\r\\n  </div><!-- /card-container -->\\r\\n</div><!-- /container -->\\r\\n\\r\\n\"","import{Component, OnInit, ViewEncapsulation}from '@angular/core';\r\nimport {User}from \"../model/model.user\";\r\nimport {UserService}from \"../services/user.service\";\r\nimport {Router}from \"@angular/router\";\r\n\r\n@Component({\r\nselector: 'app-register',\r\ntemplateUrl: './register.component.html',\r\nstyleUrls: ['./register.component.css'],\r\nencapsulation: ViewEncapsulation.None\r\n})\r\nexport class RegisterComponent implements OnInit {\r\nuser: User = new User();\r\nerrorMessage: string;\r\n\r\nconstructor(public userService: UserService, public router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  register() {\r\n    this.userService.createAccount(this.user).subscribe(data => {\r\n        this.router.navigate(['/login']);\r\n      }, err => {\r\n        console.log(err);\r\n        this.errorMessage = \"username already exist\";\r\n      }\r\n)\r\n}\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcmVnaXN0ZXJlZC1ldmVudHMvcmVnaXN0ZXJlZC1ldmVudHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-md-10\\\">\\r\\n    <div id=\\\"myGrid\\\"  style=\\\"height: 100%;\\\">\\r\\n      <ag-grid-angular style=\\\"height: 100%;\\\"\\r\\n                       class=\\\"ag-theme-balham\\\"\\r\\n                       [rowData]=\\\"rowData\\\"\\r\\n                       [columnDefs]=\\\"columnDefs\\\">\\r\\n      </ag-grid-angular>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../api.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { formatDate, DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-registered-events',\r\n  templateUrl: './registered-events.component.html',\r\n  styleUrls: ['./registered-events.component.css']\r\n})\r\nexport class RegisteredEventsComponent implements OnInit {\r\n\r\n    rowData :any;\r\n      pipe:any;\r\n      eventData :any[];\r\n\r\n  \tcolumnDefs = [\r\n          {headerName: 'EventId', field: 'id',filter:true },\r\n          {headerName: 'Action', field: 'eventAction',filter:true},\r\n          {headerName: 'Event Name', field: 'eventName',filter:true},\r\n          {headerName: 'Event Category', field: 'eventCategory',filter:true},\r\n          {headerName: 'Partner NGO', field: 'ngoName',filter:true},\r\n          {headerName: 'Event Start Date', field: 'event_start_date',filter:true},\r\n          {headerName: 'Event End Date', field: 'event_end_date',filter:true}\r\n          ];\r\n\r\n  constructor(private apiService: ApiService,private router:Router) {\r\n\r\n\r\n          }\r\n\r\n  \tngOnInit():void{\r\n     this.pipe = new DatePipe('en-US');\r\n     this.apiService.getData('registered-events').subscribe((data:any)=>{\r\n          this.eventData=data;\r\n          console.log(data);\r\n          this.rowData = this.eventData.map(event=>({\r\n            id:event.id,\r\n            eventAction:event.eventAction,\r\n            eventName:event.eventName,\r\n            eventCategory:event.eventCategory,\r\n            ngoName:event.ngoName,\r\n            event_start_date:this.pipe.transform(event.eventDuration[0],'shortDate'),\r\n            event_end_date:this.pipe.transform(event.eventDuration[1],'shortDate')\r\n          }));\r\n        },( err:HttpErrorResponse)=>{\r\n          console.log(err.message);\r\n       });\r\n      }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvcmVzZXQvcmVzZXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"card card-container\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\"></div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <form #f=\\\"ngForm\\\"  name=\\\"form-signin\\\" novalidate>\\r\\n          <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">{{errorMessage}}</div>\\r\\n          <div *ngIf=\\\"successMessage\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">{{successMessage}}</div>\\r\\n\\r\\n          <div [ngClass]=\\\"{ 'has-error': showError }\\\" class=\\\"form-group\\\">\\r\\n            <div *ngIf=\\\"!showReset\\\">\\r\\n            <label for=\\\"username\\\">Email</label>\\r\\n            <input #username=\\\"ngModel\\\" [(ngModel)]=\\\"user.username\\\" class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\"\\r\\n                   required type=\\\"text\\\"/>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"showReset\\\">\\r\\n            <label for=\\\"resetToken\\\">Token</label>\\r\\n            <input #token=\\\"ngModel\\\" [(ngModel)]=\\\"user.resetToken\\\" class=\\\"form-control\\\" id=\\\"resetToken\\\" name=\\\"resetToken\\\"\\r\\n                   required type=\\\"text\\\"/>\\r\\n\\r\\n            <label for=\\\"password\\\">Password</label>\\r\\n            <input #password=\\\"ngModel\\\" [(ngModel)]=\\\"user.password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\"\\r\\n                   required type=\\\"password\\\"/>\\r\\n            </div>\\r\\n            <br/>\\r\\n            <div *ngIf=\\\"!showReset\\\">\\r\\n            <button class=\\\"btn btn-sm btn-primary btn-block btn-signin\\\" (click)=\\\"checkEmail($event)\\\">Check & Generate Reset Token</button>\\r\\n            </div>\\r\\n              <div *ngIf=\\\"showReset\\\">\\r\\n            <button class=\\\"btn btn-sm btn-primary btn-block btn-signin\\\" (click)=\\\"reset($event)\\\">Reset Password</button>\\r\\n            <!-- <div *ngIf=\\\"f.submitted && !username.valid\\\" class=\\\"help-block\\\">an valid email is required</div>-->\\r\\n</div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div><!-- /form -->\\r\\n\\r\\n  </div><!-- /card-container -->\\r\\n</div><!-- /container -->\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-reset',\r\n  templateUrl: './reset.component.html',\r\n  styleUrls: ['./reset.component.css']\r\n})\r\nexport class ResetComponent implements OnInit {\r\nshowReset = false;\r\nerrorMessage = \"\";\r\nsuccessMessage = \"\";\r\n\r\n user = {username: '', password: '', resetToken:''};\r\n\r\n  constructor(private apiService: ApiService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  checkEmail(event) {\r\n\r\n      this.apiService.getData('preresetpassword', this.user.username, false).subscribe(\r\n      response=>{\r\n\r\n       let result:any=JSON.parse(JSON.stringify(response));\r\n       if(!response['userExists']) {\r\n\r\n         this.errorMessage = \"Email id doesn't exists\";\r\n       } else if(response['userExists'] && !response['mailsent']) {\r\n         this.errorMessage= \"Unable to send email\";\r\n       } else if(response['userExists'] && response['mailsent']) {\r\n          this.errorMessage= \"\";\r\n          this.successMessage= \"Please check email, enter token and new password\";\r\n          this.showReset = true;\r\n       }\r\n\r\n       });\r\n  return false;\r\n    };\r\n\r\n      reset(event) {\r\n       this.successMessage='';\r\n\r\n      if(this.user.password.length < 8) {\r\n       this.errorMessage= \"Password length should be more than 8\";\r\n       return false;\r\n      }\r\n\r\n          this.apiService.post( this.user, 'resetpassword').subscribe(response=>{\r\n\r\n             let result:any=JSON.parse(JSON.stringify(response));\r\n             if(response['reset']) {\r\n\r\n                      this.router.navigateByUrl('/login');\r\n                    } else  {\r\n                      this.errorMessage= \"Unable to reset password\";\r\n                    }\r\n             });\r\n          return false;\r\n        }\r\n\r\n}\r\n","module.exports = \"\\r\\n.text-on-pannel {\\r\\n    background: #fff none repeat scroll 0 0;\\r\\n    height: auto;\\r\\n    margin-left: 20px;\\r\\n    padding: 3px 5px;\\r\\n    position: absolute;\\r\\n    margin-top: -20px;\\r\\n    border: 1px solid #337ab7;\\r\\n    border-radius: 8px;\\r\\n  }\\r\\n  \\r\\n  .panel {\\r\\n  \\r\\n    margin-top: 27px a!important;\\r\\n  }\\r\\n  \\r\\n  .panel-body {\\r\\n    padding-top: 30px !important;\\r\\n  }\\r\\n  \\r\\n  .field-invalid\\r\\n  {\\r\\n  color:pink;\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9zZWxlY3RhYmxldm9sdW50ZWVyL3NlbGVjdGFibGV2b2x1bnRlZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSx1Q0FBdUM7SUFDdkMsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQix5QkFBeUI7SUFDekIsa0JBQWtCO0VBQ3BCOztFQUVBOztJQUVFLDRCQUE0QjtFQUM5Qjs7RUFFQTtJQUNFLDRCQUE0QjtFQUM5Qjs7RUFFQTs7RUFFQSxVQUFVO0VBQ1YiLCJmaWxlIjoiYXBwL3NlbGVjdGFibGV2b2x1bnRlZXIvc2VsZWN0YWJsZXZvbHVudGVlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi50ZXh0LW9uLXBhbm5lbCB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmIG5vbmUgcmVwZWF0IHNjcm9sbCAwIDA7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcclxuICAgIHBhZGRpbmc6IDNweCA1cHg7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBtYXJnaW4tdG9wOiAtMjBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICMzMzdhYjc7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5wYW5lbCB7XHJcbiAgXHJcbiAgICBtYXJnaW4tdG9wOiAyN3B4IGEhaW1wb3J0YW50O1xyXG4gIH1cclxuICBcclxuICAucGFuZWwtYm9keSB7XHJcbiAgICBwYWRkaW5nLXRvcDogMzBweCAhaW1wb3J0YW50O1xyXG4gIH1cclxuICBcclxuICAuZmllbGQtaW52YWxpZFxyXG4gIHtcclxuICBjb2xvcjpwaW5rO1xyXG4gIH1cclxuICAiXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"page-header well well-sm text-center\\\">\\r\\n    <h3><strong> Volunteer Registration</strong></h3>\\r\\n  </div>\\r\\n  <div class=\\\"panel panel-info\\\" >\\r\\n   <!-- <fieldset>\\r\\n\\r\\n    <legend>Personal Details</legend>-->\\r\\n    <!--<h3 class=\\\"text-on-pannel text-primary\\\"><strong class=\\\"text-uppercase\\\"> Personal Information</strong></h3>-->\\r\\n  <div class=\\\"panel-heading\\\">\\r\\n    <label>Personal Information</label>\\r\\n  </div>\\r\\n  <div class=\\\"panel-body\\\" >\\r\\n    <form #form=\\\"ngForm\\\" [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"personalInfo()\\\">\\r\\n    <div  formGroupName=\\\"personalInfo\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n            <div class=\\\"form-group required\\\">\\r\\n              <label class=\\\"control-label\\\">First Name</label>\\r\\n              <input type=\\\"text\\\" formControlName = \\\"firstName\\\" class=\\\"form-control well well-sm\\\"[ngClass]=\\\"{'is-invalid':myForm.controls['personalInfo'].controls.firstName.errors&&(myForm.controls['personalInfo'].controls.firstName.dirty||myForm.controls['personalInfo'].controls.firstName.touched)}\\\">\\r\\n              <div *ngIf=\\\"myForm.controls['personalInfo'].controls.firstName.errors&&(myForm.controls['personalInfo'].controls.firstName.dirty||myForm.controls['personalInfo'].controls.firstName.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"myForm.controls['personalInfo'].controls.firstName.errors.required\\\" class=\\\"field-invalid\\\">First Name is required</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n            <div class=\\\"form-group required\\\">\\r\\n              <label class=\\\"control-label\\\">Last Name</label>\\r\\n              <input type=\\\"text\\\" formControlName = \\\"lastName\\\" class=\\\"form-control well well-sm\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-1 offset-md-3\\\">\\r\\n            <div class=\\\"form-group required\\\">\\r\\n              <label class=\\\"control-label\\\">Prefix</label>\\r\\n              <input type=\\\"text\\\" formControlName = \\\"phonePrefix\\\" class=\\\"form-control well well-sm\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n            <div class=\\\"form-group required\\\">\\r\\n              <label class=\\\"control-label\\\">Phone Number</label>\\r\\n              <input type=\\\"text\\\" formControlName = \\\"phoneNumber\\\" class=\\\"form-control well well-sm\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-1 offset-md-3\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"control-label\\\">Prefix</label>\\r\\n              <input type=\\\"text\\\" formControlName = \\\"alternatePhonePrefix\\\" class=\\\"form-control well well-sm\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"control-label\\\">Alternate Phone</label>\\r\\n              <input type=\\\"text\\\" formControlName = \\\"alternatePhoneNumber\\\" class=\\\"form-control well well-sm\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n            <div class=\\\"form-group required\\\">\\r\\n              <label class=\\\"control-label\\\">Email</label>\\r\\n              <input type=\\\"text\\\" formControlName = \\\"email\\\" class=\\\"form-control well well-sm\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"control-label\\\">Alternate Email</label>\\r\\n              <input type=\\\"text\\\" formControlName = \\\"alternateEmail\\\" class=\\\"form-control well well-sm\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    </form>\\r\\n  </div>\\r\\n    <!--</fieldset>-->\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"panel panel-info\\\">\\r\\n    <!--<fieldset>\\r\\n\\r\\n      <legend>Address</legend>-->\\r\\n\\r\\n    <!--<h3 class=\\\"text-on-pannel text-primary\\\"><strong class=\\\"text-uppercase\\\"> Address</strong></h3>-->\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n      <label>Address</label>\\r\\n    </div>\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <form [formGroup]=\\\"myForm\\\" >\\r\\n        <div formGroupName=\\\"address\\\">\\r\\n\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                <div class=\\\"form-group required\\\">\\r\\n                  <label class=\\\"control-label\\\">Locality</label>\\r\\n                  <input type=\\\"text\\\" formControlName = \\\"locality\\\" class=\\\"form-control well well-sm\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                <div class=\\\"form-group required\\\">\\r\\n                  <label class=\\\"control-label\\\">City</label>\\r\\n                  <input type=\\\"text\\\" formControlName = \\\"city\\\" class=\\\"form-control well well-sm\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                <div class=\\\"form-group required\\\">\\r\\n                  <label class=\\\"control-label\\\">State</label>\\r\\n                  <input type=\\\"text\\\" formControlName = \\\"state\\\" class=\\\"form-control well well-sm\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                <div class=\\\"form-group required\\\">\\r\\n                  <label class=\\\"control-label\\\">Pin Code</label>\\r\\n                  <input type=\\\"text\\\" formControlName = \\\"pincode\\\" class=\\\"form-control well well-sm\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        </form>\\r\\n      </div>\\r\\n   <!-- </fieldset>-->\\r\\n  </div>\\r\\n  <div class=\\\"panel panel-info\\\">\\r\\n    <!--<fieldset>\\r\\n\\r\\n      <legend>Additional Information</legend>-->\\r\\n   <!-- <h3 class=\\\"text-on-pannel text-primary\\\"><strong class=\\\"text-uppercase\\\"> Additional Information </strong></h3>-->\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <label>Additional Information</label>\\r\\n      </div>\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <form #form=\\\"ngForm\\\" [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"additionalInfo()\\\">\\r\\n        <div formGroupName=\\\"additionalInfo\\\">\\r\\n\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"control-label\\\">Interest Areas</label>\\r\\n\\r\\n\\r\\n\\r\\n                  <angular2-multiselect [data]=\\\"interestedAreasCategory\\\" [(ngModel)]=\\\"selectedList\\\" formControlName=\\\"interestedAreas\\\" settings=\\\"dropdownSettings\\\"></angular2-multiselect>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n    <!--</fieldset>-->\\r\\n  </div>\\r\\n  <div class=\\\"text-center\\\">\\r\\n <!-- <button  class=\\\"btn btn-default\\\" (click)=\\\"onSubmit()\\\">Register</button>-->\\r\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"onSubmit()\\\"  *ngIf=\\\"mode!='view' && mode!='edit'\\\">Register</button>\\r\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"onSubmit()\\\" *ngIf=\\\"mode=='edit'\\\" >Update</button>\\r\\n\\r\\n    <button class=\\\"btn btn-default\\\"(click)=\\\"onEdit()\\\" *ngIf=\\\"mode=='view'\\\">Edit</button>\\r\\n    <button class=\\\"btn btn-default\\\"(click)=\\\"onClose()\\\" *ngIf=\\\"mode=='view' || mode=='edit'\\\" >Close</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {GridOptions} from 'ag-grid-community';\r\nimport { ApiService } from '../api.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-selectablevolunteer',\r\n  templateUrl: './selectablevolunteer.component.html',\r\n  styleUrls: ['./selectablevolunteer.component.css']\r\n})\r\nexport class SelectablevolunteerComponent implements OnInit {\r\n  private data:any=[];\r\n  public  selectedEmails:any=\"\";\r\n    private headers=[\r\n      {headerName: 'First Name', field: 'firstName',filter:true, sortable: true,headerCheckboxSelection: true,\r\n      headerCheckboxSelectionFilteredOnly: true,\r\n      checkboxSelection: true },\r\n      {headerName: 'Last Name', field: 'lastName',filter:true},\r\n      {headerName: 'Phone Prefix', field: 'phonePrefix',filter:true},\r\n      {headerName: 'Phone Number', field: 'phoneNumber',filter:true},\r\n      {headerName: 'Phone Prefix', field: 'alternatePhonePrefix',filter:true},\r\n      {headerName: 'Alternate Phone Number', field: 'alternatePhoneNumber',filter:true},\r\n      {headerName: 'EmailId', field: 'email',filter:true},\r\n      {headerName: 'EmailId2', field: 'alternateEmail',filter:true},\r\n      {headerName: 'Locality', field: 'locality',filter:true},\r\n      {headerName: 'City', field: 'city',filter:true},\r\n      {headerName: 'State', field: 'state',filter:true},\r\n      {headerName: 'PinCode', field: 'pincode',filter:true},\r\n      {headerName: 'Interested Areas', field: 'interestedAreas'}\r\n    ];\r\n    private myGrid: any;\r\n    private gridApi: any;\r\n    private gridColumnApi: any;\r\n    private rowSelection :any;\r\n    public gridOptions: GridOptions;\r\n   interestedList:any[]=new Array();\r\n    constructor(private apiService:ApiService,\r\n                private router:Router) { }\r\n    ngOnInit() {\r\n     this.rowSelection = \"multiple\";\r\n     this.apiService.getData('volunteer').subscribe(response=>{\r\n           let result:any=JSON.parse(JSON.stringify(response));\r\n           Array.from(result).forEach(element => {\r\n             let interestedAreas1=JSON.parse(JSON.stringify(element)).interestedAreas;\r\n             while(this.interestedList.length)\r\n             {\r\n               this.interestedList.pop();\r\n             }\r\n             for(var val of interestedAreas1)\r\n                 {\r\n                 console.log(\"hey:\"+val[\"interestedArea\"]);\r\n                 this.interestedList.push(val[\"interestedArea\"]);\r\n                 }\r\n             Object.assign(element, {interestedAreas: this.interestedList.toString()\r\n             });\r\n           });\r\n           console.log(response);\r\n           console.log(this.data);\r\n           this.data=result;\r\n           \r\n           \r\n         });\r\n     }\r\n     onGridReady(params) {\r\n       this.gridOptions.columnDefs=this.headers;\r\n       console.log(\"You are here\");\r\n       this.gridApi = params.api;\r\n       this.gridColumnApi = params.columnApi;\r\n     }\r\n \r\n    onRowCilcked(event){\r\n      console.log(event.rowIndex);\r\n     // this.router.navigateByUrl(\"/volunteer/edit/\"+((event.rowIndex)+1));\r\n        //console.log(this.printAllDisplayedRows());\r\n        this.onBtForEachNodeAfterFilterAndSort();\r\n      }\r\n \r\n      onBtForEachNodeAfterFilterAndSort() {\r\n       console.log(\"### api.forEachNodeAfterFilterAndSort() ###\");\r\n       //this.gridApi.forEachNodeAfterFilterAndSort(this.printNode);\r\n       this.gridOptions.api.getSelectedNodes().forEach(node=>{console.log(node.data.email)});\r\n     }\r\n     \r\n      printNode(node, index) {\r\n       if (node.group) {\r\n         console.log(index + \" -> group: \" + node.key);\r\n       } else {\r\n         console.log(index + \" -> data: \" + node.data.city + \", \" + node.data.email);\r\n       }\r\n     }\r\n\r\n}\r\n","module.exports = \"#mainDiv\\r\\n{\\r\\n  height: 100%;\\r\\n  width:70%;\\r\\n  margin:auto;\\r\\n  background-color: azure;\\r\\n  margin-top: 2%;\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\n#heading\\r\\n{\\r\\n  height: 50px;\\r\\n  width: 70%;\\r\\n  /*padding-left: 35%;*/\\r\\n  /*margin: auto;*/\\r\\n  font-size: 25px;\\r\\n  margin-top: 25px;   \\r\\n  margin-left: 15%;\\r\\n   background-color: burlywood;\\r\\n   border-radius: 10px;\\r\\n}\\r\\n\\r\\n#buttonTab\\r\\n{\\r\\n  padding-left:10%;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n#buttonCancel\\r\\n{\\r\\nmargin-left: 30%;\\r\\n}\\r\\n\\r\\n#buttonSubmit\\r\\n{\\r\\n  margin-left: 4%;\\r\\n}\\r\\n\\r\\n#backButton\\r\\n{\\r\\n  width:30%;\\r\\n  float:left;\\r\\n}\\r\\n\\r\\n#headingText\\r\\n{\\r\\n  width:70%;\\r\\n  padding-left: 29%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9zZW5kLW1haWwvc2VuZC1tYWlsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUsWUFBWTtFQUNaLFNBQVM7RUFDVCxXQUFXO0VBQ1gsdUJBQXVCO0VBQ3ZCLGNBQWM7RUFDZCxtQkFBbUI7QUFDckI7O0FBRUE7O0VBRUUsWUFBWTtFQUNaLFVBQVU7RUFDVixxQkFBcUI7RUFDckIsZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0dBQ2YsMkJBQTJCO0dBQzNCLG1CQUFtQjtBQUN0Qjs7QUFDQTs7RUFFRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCOztBQUNBOztBQUVBLGdCQUFnQjtBQUNoQjs7QUFDQTs7RUFFRSxlQUFlO0FBQ2pCOztBQUNBOztFQUVFLFNBQVM7RUFDVCxVQUFVO0FBQ1o7O0FBQ0E7O0VBRUUsU0FBUztFQUNULGlCQUFpQjtBQUNuQiIsImZpbGUiOiJhcHAvc2VuZC1tYWlsL3NlbmQtbWFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI21haW5EaXZcclxue1xyXG4gIGhlaWdodDogMTAwJTtcclxuICB3aWR0aDo3MCU7XHJcbiAgbWFyZ2luOmF1dG87XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogYXp1cmU7XHJcbiAgbWFyZ2luLXRvcDogMiU7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxufVxyXG5cclxuI2hlYWRpbmdcclxue1xyXG4gIGhlaWdodDogNTBweDtcclxuICB3aWR0aDogNzAlO1xyXG4gIC8qcGFkZGluZy1sZWZ0OiAzNSU7Ki9cclxuICAvKm1hcmdpbjogYXV0bzsqL1xyXG4gIGZvbnQtc2l6ZTogMjVweDtcclxuICBtYXJnaW4tdG9wOiAyNXB4OyAgIFxyXG4gIG1hcmdpbi1sZWZ0OiAxNSU7XHJcbiAgIGJhY2tncm91bmQtY29sb3I6IGJ1cmx5d29vZDtcclxuICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxufVxyXG4jYnV0dG9uVGFiXHJcbntcclxuICBwYWRkaW5nLWxlZnQ6MTAlO1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuI2J1dHRvbkNhbmNlbFxyXG57XHJcbm1hcmdpbi1sZWZ0OiAzMCU7XHJcbn1cclxuI2J1dHRvblN1Ym1pdFxyXG57XHJcbiAgbWFyZ2luLWxlZnQ6IDQlO1xyXG59XHJcbiNiYWNrQnV0dG9uXHJcbntcclxuICB3aWR0aDozMCU7XHJcbiAgZmxvYXQ6bGVmdDtcclxufVxyXG4jaGVhZGluZ1RleHRcclxue1xyXG4gIHdpZHRoOjcwJTtcclxuICBwYWRkaW5nLWxlZnQ6IDI5JTtcclxufVxyXG4iXX0= */\"","module.exports = \"<!--<div class=\\\"row custom-row\\\" id=\\\"mainDiv\\\">-->\\r\\n  <!--<div class= \\\"col-sm-5 custom-container jumbotron\\\">-->\\r\\n    <!--<form class=\\\"form-horizontal\\\"  #sendmailForm=\\\"ngForm\\\"-->\\r\\n          <!--(ngSubmit)=\\\"onFormSubmit(sendmailForm)\\\" >-->\\r\\n      <!--<fieldset>-->\\r\\n        <!--<legend>SignUp</legend>-->\\r\\n\\r\\n        <!--&lt;!&ndash;- To Block -&ndash;&gt;-->\\r\\n        <!--<div class=\\\"form-group\\\">-->\\r\\n          <!--<label for=\\\"toEmail\\\">to</label>-->\\r\\n          <!--&lt;!&ndash;<input type=\\\"text\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;id=\\\"toEmail\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;[(ngModel)]=\\\"email.to\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;name=\\\"to\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;placeholder=\\\"to\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;#emailTo = \\\"ngModel\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" required>&ndash;&gt;-->\\r\\n        <!--</div>-->\\r\\n        <!---->\\r\\n\\r\\n        <!--<div class=\\\"form-group\\\">-->\\r\\n          <!--<label for=\\\"ccEmail\\\">cc</label>-->\\r\\n          <!--&lt;!&ndash;<input type=\\\"text\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;id=\\\"ccEmail\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;[(ngModel)]=\\\"email.cc\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;name=\\\"cc\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;#emailCc = \\\"ngModel\\\"&ndash;&gt;-->\\r\\n\\r\\n                 <!--&lt;!&ndash;pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;placeholder=\\\"cc\\\">&ndash;&gt;-->\\r\\n        <!--</div>-->\\r\\n        <!--<div class=\\\"form-group\\\">-->\\r\\n          <!--<label for=\\\"bccEmail\\\">bcc</label>-->\\r\\n          <!--&lt;!&ndash;<input type=\\\"text\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;id=\\\"bccEmail\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;[(ngModel)]=\\\"email.bcc\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;name=\\\"bcc\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;#emailBcc = \\\"ngModel\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;placeholder=\\\"bcc\\\" >&ndash;&gt;-->\\r\\n        <!--</div>-->\\r\\n        <!--<div class=\\\"form-group\\\">-->\\r\\n          <!--<label for=\\\"subjectEmail\\\">Subject</label>-->\\r\\n          <!--&lt;!&ndash;<input type=\\\"text\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;id=\\\"subjectEmail\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;[(ngModel)]=\\\"email.subject\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;name=\\\"subject\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;placeholder=\\\"subject\\\" required>&ndash;&gt;-->\\r\\n        <!--</div>-->\\r\\n        <!--<div class=\\\"form-group\\\">-->\\r\\n          <!--<label for=\\\"textEmail\\\">Text</label>-->\\r\\n          <!--&lt;!&ndash;<input type=\\\"text\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;id=\\\"textEmail\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;[(ngModel)]=\\\"email.text\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;name=\\\"text\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;placeholder=\\\"text\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;#pwd = \\\"ngModel\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;minlength=\\\"8\\\"&ndash;&gt;-->\\r\\n                 <!--&lt;!&ndash;required>&ndash;&gt;-->\\r\\n        <!--</div>-->\\r\\n\\r\\n\\r\\n        <!--&lt;!&ndash;- Buttons Block -&ndash;&gt;-->\\r\\n\\r\\n      <!--</fieldset>-->\\r\\n    <!--</form>-->\\r\\n    <!--{{email | json}}-->\\r\\n  <!--</div>-->\\r\\n  <div id=\\\"heading\\\">\\r\\n    <div id=\\\"headingText\\\">\\r\\n    Enter Email Details\\r\\n    </div>\\r\\n  </div>\\r\\n  <div id=\\\"mainDiv\\\">\\r\\n    <form class=\\\"form-horizontal\\\"  #sendmailForm=\\\"ngForm\\\"\\r\\n          (ngSubmit)=\\\"onFormSubmit(sendmailForm)\\\" >\\r\\n    <table class=\\\"table-condensed form-table\\\">\\r\\n      <tr class=\\\"row\\\">\\r\\n        <td class=\\\"col-md-6 offset-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"control-label\\\">To</label>\\r\\n            <input type=\\\"text\\\"\\r\\n                   id=\\\"toEmail\\\"\\r\\n                   [(ngModel)]=\\\"email.to\\\"\\r\\n                   name=\\\"to\\\"\\r\\n                   placeholder=\\\"to\\\"\\r\\n                   #emailTo = \\\"ngModel\\\"\\r\\n                   pattern=\\\"([a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3},?)*$\\\"\\r\\n                   class=\\\"form-control well well-sm\\\" required>\\r\\n          </div>\\r\\n        </td>\\r\\n        <td class=\\\"col-md-4 offset-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div *ngIf=\\\"emailTo.invalid && (emailTo.dirty || emailTo.touched)\\\"\\r\\n                 class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf = \\\"emailTo.errors?.required\\\">\\r\\n                Email field can't be blank\\r\\n              </div>\\r\\n              <div *ngIf = \\\"emailTo.errors?.dirty\\\">\\r\\n                Enter in correct Format\\r\\n              </div>\\r\\n              <div *ngIf = \\\"emailTo.errors?.pattern && emailTo.touched\\\">\\r\\n                The email id doesn't seem right\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </td>\\r\\n      </tr>\\r\\n\\r\\n\\r\\n      <tr class=\\\"row\\\">\\r\\n        <td class=\\\"col-md-6 offset-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"control-label\\\">Cc</label>\\r\\n            <input type=\\\"text\\\"\\r\\n                   id=\\\"ccEmail\\\"\\r\\n                   [(ngModel)]=\\\"email.cc\\\"\\r\\n                   name=\\\"cc\\\"\\r\\n                   #emailCc = \\\"ngModel\\\"\\r\\n                   pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"\\r\\n                   placeholder=\\\"cc\\\"\\r\\n                   class=\\\"form-control well well-sm\\\">\\r\\n          </div>\\r\\n        </td>\\r\\n        <td class=\\\"col-md-4 offset-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div *ngIf=\\\"emailCc.invalid && (emailCc.dirty || emailCc.touched)\\\"\\r\\n                 class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf = \\\"emailCc.errors?.required\\\">\\r\\n                Email field can't be blank\\r\\n              </div>\\r\\n              <div *ngIf = \\\"emailCc.errors?.dirty\\\">\\r\\n                Enter in correct Format\\r\\n              </div>\\r\\n              <div *ngIf = \\\"emailCc.errors?.pattern && emailCc.touched\\\">\\r\\n                The email id doesn't seem right\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr class=\\\"row\\\">\\r\\n        <td class=\\\"col-md-6 offset-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"control-label\\\">Bcc</label>\\r\\n            <input type=\\\"text\\\"\\r\\n                   id=\\\"bccEmail\\\"\\r\\n                   [(ngModel)]=\\\"email.bcc\\\"\\r\\n                   name=\\\"bcc\\\"\\r\\n                   #emailBcc = \\\"ngModel\\\"\\r\\n                   pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3},?$\\\"\\r\\n                   placeholder=\\\"bcc\\\"\\r\\n                   class=\\\"form-control well well-sm\\\">\\r\\n          </div>\\r\\n        </td>\\r\\n        <td class=\\\"col-md-4 offset-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div *ngIf=\\\"emailBcc.invalid && (emailBcc.dirty || emailBcc.touched)\\\"\\r\\n                 class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf = \\\"emailBcc.errors?.required\\\">\\r\\n                Email field can't be blank\\r\\n              </div>\\r\\n              <div *ngIf = \\\"emailBcc.errors?.dirty\\\">\\r\\n                Enter in correct Format\\r\\n              </div>\\r\\n              <div *ngIf = \\\"emailBcc.errors?.pattern && emailBcc.touched\\\">\\r\\n                The email id doesn't seem right\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr class=\\\"row\\\">\\r\\n        <td class=\\\"col-md-2 offset-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n\\r\\n            <label class=\\\"control-label\\\" for=\\\"subjectEmail\\\">Subject</label>\\r\\n            <textarea type=\\\"text\\\"\\r\\n                   id=\\\"subjectEmail\\\"\\r\\n                   [(ngModel)]=\\\"email.subject\\\"\\r\\n                   name=\\\"subject\\\"\\r\\n                   placeholder=\\\"subject\\\"\\r\\n                   class=\\\"form-control well well-sm\\\"\\r\\n                   required>\\r\\n                   </textarea>\\r\\n          </div>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr class=\\\"row\\\">\\r\\n        <td class=\\\"col-md-2 offset-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n\\r\\n            <label class=\\\"control-label\\\" for=\\\"subjectEmail\\\">Text</label>\\r\\n            <textarea type=\\\"text\\\"\\r\\n                   id=\\\"textEmail\\\"\\r\\n                   [(ngModel)]=\\\"email.text\\\"\\r\\n                   name=\\\"text\\\"\\r\\n                   placeholder=\\\"text\\\"\\r\\n                   #pwd = \\\"ngModel\\\"\\r\\n                   minlength=\\\"8\\\"\\r\\n                   class=\\\"form-control well well-sm\\\"\\r\\n                   required>\\r\\n                   </textarea>\\r\\n          </div>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <div class=\\\"form-group\\\" id=\\\"buttonTab\\\">\\r\\n      <button type=\\\"reset\\\" class=\\\"btn btn-default\\\" id=\\\"buttonCancel\\\" >Cancel</button>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\r\\n              [disabled]=\\\"!sendmailForm.form.valid\\\" id=\\\"buttonSubmit\\\">Submit</button>\\r\\n    </div>\\r\\n</form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params, Data } from '@angular/router';\r\nimport {Email} from \"../Email\";\r\nimport {FormBuilder} from \"@angular/forms\";\r\nimport {ApiService} from \"../api.service\";\r\nimport {ApiServiceMail} from \"../api.service.mail\";\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport{Eventdata} from \"../events/add-event.component\";\r\nimport { formatDate, DatePipe } from '@angular/common';\r\n@Component({\r\n  selector: 'app-send-mail',\r\n  templateUrl: './send-mail.component.html',\r\n  styleUrls: ['./send-mail.component.css']\r\n})\r\nexport class SendMailComponent implements OnInit {\r\n  public email:Email;\r\n  public eventData:Eventdata;\r\n  public resp:string;\r\n  pipe:any;\r\n  constructor(private apiService:ApiService,\r\n              private apiServiceMail: ApiServiceMail,private route: ActivatedRoute,public router:Router) { }\r\n  ngOnInit() {\r\n    this.pipe = new DatePipe('en-US');\r\n    this.eventData=new Eventdata(); this.eventData=new Eventdata();\r\n    this.email=new Email({to:this.route.snapshot.paramMap.get('emails'),cc:\"\",bcc:\"\",\r\n    text:\"\",eventId:this.route.snapshot.paramMap.get('id'),subject:\"\"});\r\n    this.apiService.getData('event',this.route.snapshot.paramMap.get('id'), false).subscribe((data:any)=>{\r\n      this.eventData.eventfromTime=this.pipe.transform(data.eventfromTime,'shortDate')\r\n      this.eventData.eventtoTime=this.pipe.transform(data.eventtoTime,'shortDate')\r\n      this.eventData.ngoName=data.ngoName;\r\n      this.eventData.eventName=data.eventName;\r\n      this.email.subject=this.createDefaultSubject(this.eventData.eventName,\r\n        this.eventData.ngoName,this.eventData.eventfromTime,this.eventData.eventtoTime);\r\n      console.log(this.eventData.eventfromTime);\r\n      console.log(this.eventData.eventtoTime);\r\n      console.log(this.eventData.ngoName);\r\n      console.log(this.eventData.eventName);\r\n      //this.getEmailId();\r\n      console.log(this.resp);\r\n      console.log(this.email.to);\r\n    },( err:HttpErrorResponse)=>{\r\n      console.log(err.message);\r\n   });\r\n  }\r\n\r\n  public onFormSubmit({value}:{value:Email}) {\r\n    console.log(value);\r\n    console.log(this.route.snapshot.paramMap.get(\"name\"));\r\n    //this.eventData.eventCategory='abc';\r\n    // this.apiServiceMail.postData(this.email);\r\n    this.apiServiceMail.saveToStagingEmail(this.email);\r\n   // console.log(\"hello mate, routing offf\");\r\n    //this.router.navigate(['selectVolenteer']);\r\n  }\r\n  public createDefaultSubject(eventName,ngoName,eventTo,eventFor)\r\n  {\r\n    return \"We invite You for event : \" + eventName + \"by NGO : \"+ngoName+\" from :\"+eventFor+\"to : \"+eventTo; \r\n  }\r\n\r\n  public  getEmailId()\r\n  {\r\n    //String resp;\r\n    this.apiServiceMail.getData().subscribe(response=>{\r\n      console.log('postResponse: ',response);\r\n     //return response.toString();\r\n     this.resp=response.toString();\r\n     \r\n     console.log(\"reponse is:\"+\" ....\"+(response as any).result);\r\n     this.email.to=this.resp;\r\n    });\r\n  }\r\n}\r\n","import{Injectable}from'@angular/core';\r\nimport {Http, Headers, RequestOptions,Response}from '@angular/http';\r\nimport {User} from \"../model/model.user\";\r\n\r\nimport {map}from 'rxjs/operators';\r\n\r\nimport {AppComponent}from \"../app.component\";\r\n@Injectable()\r\nexport class AuthService {\r\nconstructor(public http: Http) { }\r\n\r\n  public logIn(user: User){\r\n\r\n    let headers = new Headers();\r\n    headers.append('Accept', 'application/json')\r\n    // creating base64 encoded String from user name and password\r\n    var base64Credential: string = btoa( user.username+ ':' + user.password);\r\n    headers.append(\"Authorization\", \"Basic \" + base64Credential);\r\n\r\n    let options = new RequestOptions();\r\n    options.headers=headers;\r\n\r\n    return this.http.get(AppComponent.API_URL+\"/user/login\" , options)\r\n      .pipe(map((response: Response) => {\r\n      // login successful if there's a jwt token in the response\r\n      let user = response.json().principal;// the returned user object is a principal object\r\n      if (user) {\r\n        // store user details  in local storage to keep user logged in between page refreshes\r\n        localStorage.setItem('currentUser', JSON.stringify(user));\r\n      }\r\n    }));\r\n  }\r\n\r\n  logOut() {\r\n    // remove user from local storage to log user out\r\n    return this.http.post(AppComponent.API_URL+\"logout\",{})\r\n      .pipe(map((response: Response) => {\r\n        localStorage.removeItem('currentUser');\r\n      }));\r\n\r\n  }\r\n}\r\n","import{Injectable}from'@angular/core';\r\nimport {User}from \"../model/model.user\";\r\nimport {Http}from \"@angular/http\";\r\nimport {AppComponent}from \"../app.component\";\r\nimport {map}from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class UserService {\r\nconstructor(public http: Http) { }\r\n\r\n  createAccount(user:User){\r\n    return this.http.post(AppComponent.API_URL+'/user/register',user)\r\n      .pipe(map(resp=>resp.json()));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpRequest } from '@angular/common/http';\r\nimport { ApiService } from './api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UploadService {\r\n\r\n  constructor(private http: HttpClient,\r\n              private apiService : ApiService\r\n              ) { }\r\n\r\n  pushFileData(file: File){\r\n    let formData: FormData = new FormData();\r\n    formData.append('file', file);\r\n    let request = new HttpRequest('POST', '/api/bulk/upload', formData);\r\n    console.log(request);\r\n    return this.http.request(request);\r\n  }\r\n\r\n  saveBulkData(data){\r\n    let request = new HttpRequest('POST', '/api/bulk/save', data);\r\n    return this.http.request(request);\r\n    // return this.http.post('/api/bulk/save', data);\r\n  }\r\n}\r\n","import{Injectable}from'@angular/core';\r\nimport {Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot}from '@angular/router';\r\n\r\n@Injectable()\r\nexport class UrlPermission implements CanActivate {\r\n\r\nconstructor(private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (localStorage.getItem('currentUser')) {\r\n      // logged in so return true\r\n      return true;\r\n    }\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\r\n    return false;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvdm9sdW50ZWVyLWdyaWQvdm9sdW50ZWVyLWdyaWQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\r\\n  <div class=\\\"page-header well text-center well-sm\\\">\\r\\n    <h3><strong> Volunteer </strong></h3>\\r\\n  </div>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <div class=\\\"col-md-7\\\" style=\\\"text-align:right\\\">\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-1\\\" style=\\\"text-align:right\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-space\\\" (click)=\\\"router.navigate(['/bulk/volunteer'])\\\">\\r\\n          Bulk Upload\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-1\\\" style=\\\"text-align:right\\\"></div>\\r\\n      <div class=\\\"col-md-1\\\" style=\\\"text-align:right\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"router.navigate(['/volunteer'])\\\">\\r\\n          Add Volunteer\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-1\\\" style=\\\"text-align:right\\\"></div>\\r\\n      <div class=\\\"col-md-1\\\" style=\\\"text-align:right\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onBtForEachNodeAfterFilterAndSort()\\\">\\r\\n          send mail\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  <div  #myGrid  style=\\\"width: 100%; height: 110%;\\\">\\r\\n    <ag-grid-angular style=\\\"height: 100%;\\\"\\r\\n      class=\\\"ag-theme-balham\\\"\\r\\n      [rowData]=\\\"data\\\"\\r\\n      [columnDefs]=\\\"headers\\\"\\r\\n      (rowClicked)=\\\"onRowCilcked($event)\\\"\\r\\n      (gridReady)=\\\"onGridReady($event)\\\"\\r\\n      [rowSelection]=\\\"rowSelection\\\"\\r\\n      [gridOptions]=\\\"gridOptions\\\"\\r\\n      >\\r\\n    </ag-grid-angular>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../api.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport {ngDevModeResetPerfCounters}from '@angular/core/src/render3/ng_dev_mode';\r\nimport { JsonPipe}from '@angular/common';\r\nimport { GridApi, Column } from 'ag-grid-community';\r\nimport {GridOptions} from 'ag-grid-community';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-volunteer-grid',\r\n  templateUrl: './volunteer-grid.component.html',\r\n  styleUrls: ['./volunteer-grid.component.css']\r\n})\r\n\r\n\r\nexport class VolunteerGridComponent implements OnInit {\r\n \r\n private data:any=[];\r\n private eventId:any;\r\n public  selectedEmails:any=\"\";\r\n   private headers=[\r\n     {headerName: 'First Name', field: 'firstName',filter:true, sortable: true,headerCheckboxSelection: true,\r\n     headerCheckboxSelectionFilteredOnly: true,\r\n     checkboxSelection: true },\r\n\r\n     {headerName: 'Last Name', field: 'lastName',filter:true},\r\n     {headerName: 'Phone Prefix', field: 'phonePrefix',filter:true},\r\n     {headerName: 'Phone Number', field: 'phoneNumber',filter:true},\r\n     {headerName: 'Phone Prefix', field: 'alternatePhonePrefix',filter:true},\r\n     {headerName: 'Alternate Phone Number', field: 'alternatePhoneNumber',filter:true},\r\n     {headerName: 'EmailId', field: 'email',filter:true},\r\n     {headerName: 'EmailId2', field: 'alternateEmail',filter:true},\r\n     {headerName: 'Locality', field: 'locality',filter:true},\r\n     {headerName: 'City', field: 'city',filter:true},\r\n     {headerName: 'State', field: 'state',filter:true},\r\n     {headerName: 'PinCode', field: 'pincode',filter:true},\r\n     {headerName: 'Interested Areas', field: 'interestedAreas',filter:true},\r\n     {headerName: 'PreferredTimings', field: 'volunteerPreferredTimings',filter:true}\r\n   ];\r\n   private myGrid: any;\r\n   private gridApi: any;\r\n   private gridOptions: any;\r\n   private gridColumnApi: any;\r\n   private rowSelection :any;\r\n   private columnDefs: Object[];\r\n   private emailsSelected: any;\r\n  interestedList:any[]=new Array();\r\n   constructor(private apiService:ApiService,\r\n               private router:Router,private route: ActivatedRoute,) { }\r\n               ngOnInit() {    \r\n                 this.emailsSelected=\"\";  \r\n    this.eventId=this.route.snapshot.paramMap.get('id')\r\n    this.rowSelection = \"multiple\";\r\n    this.apiService.getData('volunteer').subscribe(response=>{\r\n          let result:any=JSON.parse(JSON.stringify(response));\r\n          Array.from(result).forEach(element => {\r\n            let interestedAreas1=JSON.parse(JSON.stringify(element)).interestedAreas;\r\n            while(this.interestedList.length)\r\n            {\r\n              this.interestedList.pop();\r\n            }\r\n            for(var val of interestedAreas1)\r\n                {\r\n                console.log(\"hey:\"+val[\"interestedArea\"]);\r\n                this.interestedList.push(val[\"interestedArea\"]);\r\n                }\r\n            Object.assign(element, {interestedAreas: this.interestedList.toString()\r\n            });\r\n          });\r\n          console.log(response);\r\n          console.log(this.data);\r\n          this.data=result;\r\n          \r\n          \r\n        });\r\n    }\r\n   onGridReady(params) {\r\n      \r\n      //this.gridOptions=params.GridOptions;\r\n      console.log(\"You are here\");\r\n      this.gridApi = params.api;\r\n      this.gridColumnApi = params.columnApi;\r\n      this.gridColumnApi.columnDefs=params.columnDefs;\r\n      this.gridOptions = <GridOptions>{\r\n        context: {parentComponent: this},\r\n      };\r\n      //new agGrid.Grid( this.gridOptions)\r\n    }\r\n\r\n   onRowCilcked(event){\r\n     console.log(event.rowIndex);\r\n    // this.router.navigateByUrl(\"/volunteer/edit/\"+((event.rowIndex)+1));\r\n       //console.log(this.printAllDisplayedRows());\r\n       console.log(\"### api.forEachNodeAfterFilterAndSort() ###\");\r\n       //this.gridApi.forEachNodeAfterFilterAndSort(this.printNode);\r\n     //  this.gridApi.getSelectedNodes().forEach(node=>{console.log(node.data.email)});\r\n      this.onBtForEachNodeAfterFilterAndSort();\r\n     }\r\n\r\n     onBtForEachNodeAfterFilterAndSort() {\r\n      console.log(\"### api.forEachNodeAfterFilterAndSort() ###\");\r\n      //this.gridApi.forEachNodeAfterFilterAndSort(this.printNode);\r\n\r\n      this.gridApi.getSelectedNodes().forEach(node=>{this.appendEmails(node.data.email)});\r\n      this.router.navigate(['email',{id:this.eventId,emails:this.emailsSelected}]);\r\n    }\r\n    \r\n     printNode(node, index) {\r\n      if (node.group) {\r\n        console.log(index + \" -> group: \" + node.key);\r\n      } else {\r\n        console.log(index + \" -> data: \" + node.data.city + \", \" + node.data.email);\r\n      }\r\n    }\r\n    \r\n    appendEmails(email)\r\n    {\r\n    if(this.emailsSelected==\"\")\r\n    this.emailsSelected=email;\r\n    else\r\n    this.emailsSelected=this.emailsSelected+\",\"+email;\r\n    }\r\n\r\n}\r\n","module.exports = \"\\r\\n.text-on-pannel {\\r\\n  background: #fff none repeat scroll 0 0;\\r\\n  height: auto;\\r\\n  margin-left: 20px;\\r\\n  padding: 3px 5px;\\r\\n  position: absolute;\\r\\n  margin-top: -20px;\\r\\n  border: 1px solid #337ab7;\\r\\n  border-radius: 8px;\\r\\n}\\r\\n\\r\\n.panel {\\r\\n\\r\\n  margin-top: 27px a!important;\\r\\n}\\r\\n\\r\\n.panel-body {\\r\\n  padding-top: 30px !important;\\r\\n}\\r\\n\\r\\n.field-invalid\\r\\n{\\r\\ncolor:pink;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC92b2x1bnRlZXIvdm9sdW50ZWVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0VBQ0UsdUNBQXVDO0VBQ3ZDLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIseUJBQXlCO0VBQ3pCLGtCQUFrQjtBQUNwQjs7QUFFQTs7RUFFRSw0QkFBNEI7QUFDOUI7O0FBRUE7RUFDRSw0QkFBNEI7QUFDOUI7O0FBRUE7O0FBRUEsVUFBVTtBQUNWIiwiZmlsZSI6ImFwcC92b2x1bnRlZXIvdm9sdW50ZWVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLnRleHQtb24tcGFubmVsIHtcclxuICBiYWNrZ3JvdW5kOiAjZmZmIG5vbmUgcmVwZWF0IHNjcm9sbCAwIDA7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG4gIHBhZGRpbmc6IDNweCA1cHg7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIG1hcmdpbi10b3A6IC0yMHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICMzMzdhYjc7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG59XHJcblxyXG4ucGFuZWwge1xyXG5cclxuICBtYXJnaW4tdG9wOiAyN3B4IGEhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ucGFuZWwtYm9keSB7XHJcbiAgcGFkZGluZy10b3A6IDMwcHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmZpZWxkLWludmFsaWRcclxue1xyXG5jb2xvcjpwaW5rO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"page-header well well-sm text-center\\\">\\r\\n    <h3><strong> Volunteer Registration</strong></h3>\\r\\n  </div>\\r\\n  <div class=\\\"panel panel-info\\\" >\\r\\n   <!-- <fieldset>\\r\\n\\r\\n    <legend>Personal Details</legend>-->\\r\\n    <!--<h3 class=\\\"text-on-pannel text-primary\\\"><strong class=\\\"text-uppercase\\\"> Personal Information</strong></h3>-->\\r\\n  <div class=\\\"panel-heading\\\">\\r\\n    <label>Personal Information</label>\\r\\n  </div>\\r\\n  <div class=\\\"panel-body\\\" >\\r\\n    <form  [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"personalInfo()\\\">\\r\\n    <div  formGroupName=\\\"personalInfo\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n            <div class=\\\"form-group required\\\">\\r\\n              <label class=\\\"control-label\\\">First Name</label>\\r\\n              <input type=\\\"text\\\" formControlName = \\\"firstName\\\" class=\\\"form-control well well-sm\\\"[ngClass]=\\\"{'is-invalid':myForm.controls['personalInfo'].controls.firstName.errors&&(myForm.controls['personalInfo'].controls.firstName.dirty||myForm.controls['personalInfo'].controls.firstName.touched)}\\\">\\r\\n              <div *ngIf=\\\"myForm.controls['personalInfo'].controls.firstName.errors&&(myForm.controls['personalInfo'].controls.firstName.dirty||myForm.controls['personalInfo'].controls.firstName.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"myForm.controls['personalInfo'].controls.firstName.errors.required\\\" class=\\\"field-invalid\\\">First Name is required</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n            <div class=\\\"form-group required\\\">\\r\\n              <label class=\\\"control-label\\\">Last Name</label>\\r\\n              <input type=\\\"text\\\" formControlName = \\\"lastName\\\" class=\\\"form-control well well-sm\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n            <div class=\\\"form-group required\\\">\\r\\n              <label class=\\\"control-label\\\">Contact Number</label>\\r\\n              <input type=\\\"text\\\" formControlName = \\\"phoneNumber\\\" class=\\\"form-control well well-sm\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"control-label\\\">Alternate Contact Number</label>\\r\\n              <input type=\\\"text\\\" formControlName = \\\"alternatePhoneNumber\\\" class=\\\"form-control well well-sm\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n            <div class=\\\"form-group required\\\">\\r\\n              <label class=\\\"control-label\\\">Email</label>\\r\\n              <input type=\\\"text\\\" formControlName = \\\"email\\\" class=\\\"form-control well well-sm\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    </form>\\r\\n  </div>\\r\\n    <!--</fieldset>-->\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"panel panel-info\\\">\\r\\n    <!--<fieldset>\\r\\n\\r\\n      <legend>Address</legend>-->\\r\\n\\r\\n    <!--<h3 class=\\\"text-on-pannel text-primary\\\"><strong class=\\\"text-uppercase\\\"> Address</strong></h3>-->\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n      <label>Address</label>\\r\\n    </div>\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <form [formGroup]=\\\"myForm\\\" >\\r\\n        <div formGroupName=\\\"address\\\">\\r\\n\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                <div class=\\\"form-group required\\\">\\r\\n                  <label class=\\\"control-label\\\">Locality</label>\\r\\n                  <input type=\\\"text\\\" formControlName = \\\"locality\\\" class=\\\"form-control well well-sm\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                <div class=\\\"form-group required\\\">\\r\\n                  <label class=\\\"control-label\\\">City</label>\\r\\n                  <input type=\\\"text\\\" formControlName = \\\"city\\\" class=\\\"form-control well well-sm\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                <div class=\\\"form-group required\\\">\\r\\n                  <label class=\\\"control-label\\\">State</label>\\r\\n                  <input type=\\\"text\\\" formControlName = \\\"state\\\" class=\\\"form-control well well-sm\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                <div class=\\\"form-group required\\\">\\r\\n                  <label class=\\\"control-label\\\">Pin Code</label>\\r\\n                  <input type=\\\"text\\\" formControlName = \\\"pincode\\\" class=\\\"form-control well well-sm\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        </form>\\r\\n      </div>\\r\\n   <!-- </fieldset>-->\\r\\n  </div>\\r\\n  <div class=\\\"panel panel-info\\\">\\r\\n    <!--<fieldset>\\r\\n\\r\\n      <legend>Additional Information</legend>-->\\r\\n   <!-- <h3 class=\\\"text-on-pannel text-primary\\\"><strong class=\\\"text-uppercase\\\"> Additional Information </strong></h3>-->\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <label>Additional Information</label>\\r\\n      </div>\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"additionalInfo()\\\">\\r\\n        <div formGroupName=\\\"additionalInfo\\\">\\r\\n\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"control-label\\\">Interest Areas</label>\\r\\n\\r\\n\\r\\n\\r\\n                  <angular2-multiselect [data]=\\\"interestedAreasCategory\\\" [settings]=\\\"dropdownSettings\\\" (onSelect)=\\\"log($event)\\\" [(ngModel)]=\\\"selectedList\\\"\\r\\n                                        (onDeSelect)=\\\"log($event)\\\" (onSelectAll)=\\\"log($event)\\\" (onDeSelectAll)=\\\"log($event)\\\"\\r\\n                                        formControlName=\\\"interestedAreas\\\">\\r\\n                  </angular2-multiselect>\\r\\n\\r\\n                  <!--<angular2-multiselect [data]=\\\"interestedAreasCategory\\\" [(ngModel)]=\\\"selectedList\\\" formControlName=\\\"interestedAreas\\\" settings=\\\"dropdownSettings\\\"></angular2-multiselect>\\r\\n-->\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n                  <div class=\\\"form-group \\\">\\r\\n                    <label class=\\\"control-label\\\">Preferred Timings</label>\\r\\n                    <!-- <input type=\\\"text\\\" formControlName=\\\"mouStatus\\\" class=\\\"form-control well well-sm\\\"> -->\\r\\n                    <select formControlName=\\\"volunteerPreferredTimes\\\" class=\\\"form-control\\\">\\r\\n                      <option *ngFor=\\\"let action of preferredTimings\\\" [value]=\\\"action\\\">{{action}}</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div\\r\\n                >\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n    <!--</fieldset>-->\\r\\n  </div>\\r\\n  <div class=\\\"text-center\\\">\\r\\n <!-- <button  class=\\\"btn btn-default\\\" (click)=\\\"onSubmit()\\\">Register</button>-->\\r\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"onSubmit()\\\"  *ngIf=\\\"mode!='view' && mode!='edit'\\\">Register</button>\\r\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"onSubmit()\\\" *ngIf=\\\"mode=='edit'\\\" >Update</button>\\r\\n\\r\\n    <button class=\\\"btn btn-default\\\"(click)=\\\"onEdit()\\\" *ngIf=\\\"mode=='view'\\\">Edit</button>\\r\\n    <button class=\\\"btn btn-default\\\"(click)=\\\"onClose()\\\" *ngIf=\\\"mode=='view' || mode=='edit'\\\" >Close</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, Injectable, AfterViewInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiService } from '../api.service'\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport {InventorydataService} from '../inventory-data/inventorydata.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport { NgOnChangesFeature } from '@angular/core/src/render3';\r\n@Component({\r\n  selector: 'app-volunteer',\r\n  templateUrl: './volunteer.component.html',\r\n  styleUrls: ['./volunteer.component.css']\r\n})\r\nexport class VolunteerComponent implements OnInit, AfterViewInit {\r\n\r\n  myForm: FormGroup;\r\n  interestedAreasCategorydata: any[];\r\n\r\n interestedAreasCategory=[];\r\n\r\n  selectedList: any[];\r\n  interestedList: any[] = new Array();\r\n  private mode: String;\r\n  private id: number;\r\n  dropdownSettings = {};\r\n  preferredTimings:string[]=['Weekdays','Weekends','Both Weekdays and Weekends'];\r\n\r\n  constructor(private formBuilder: FormBuilder, private inventoryService: InventorydataService,\r\n    private apiService: ApiService, private route: ActivatedRoute, private router: Router) { }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    this.myForm = this.formBuilder.group({\r\n      personalInfo: this.personalInfo(),\r\n      address: this.address(),\r\n      additionalInfo: this.additionalInfo()\r\n\r\n    });\r\n\r\n\r\n    this.inventoryService.getEventCategoryList().subscribe((data: any) => {\r\n          this.interestedAreasCategorydata=data;\r\n                      this.interestedAreasCategory=this.interestedAreasCategorydata.map(interestedAreasCategory=>{\r\n                        console.log(\"888\",interestedAreasCategory.value);\r\n\r\n                          return {\"id\":interestedAreasCategory.key,\"itemName\":interestedAreasCategory.value};\r\n\r\n                      });\r\n        }, (err: HttpErrorResponse) => {\r\n          console.log(err.message);\r\n        });\r\n\r\n  //  this.interestedAreasCategory = [\r\n   //   { \"id\": 1, \"itemName\": \"Education\" },\r\n    //  { \"id\": 2, \"itemName\": \"Health\" },\r\n     // { \"id\": 3, \"itemName\": \"Environment\" }\r\n\r\n    //];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    this.dropdownSettings = {\r\n      singleSelection: false,\r\n      text: \"Select Interested Areas\",\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      enableSearchFilter: true,\r\n      classes: \"myclass custom-class\"\r\n    };\r\n    this.route.paramMap.subscribe(params => {\r\n      console.log(params);\r\n      if (params.get('mode')) {\r\n        this.mode = params.get('mode');\r\n        this.id = +params.get('id');\r\n      }\r\n      if (this.id) {\r\n        if (!isNaN(this.id)) {\r\n\r\n           this.apiService.getData('volunteer', this.id, true).subscribe(result => {\r\n            let data = JSON.parse(JSON.stringify(result));\r\n            console.log(\"GetResponse: \" + data);\r\n            data.additionalInfo.interestedAreas=data.additionalInfo.interestedAreas.map(interestedArea1=>({\r\n                        id:interestedArea1.interestedAreaId,\r\n                        itemName:interestedArea1.interestedArea\r\n                      }));\r\n\r\n\r\n\r\n\r\n\r\n            this.myForm.setValue(data);\r\n          });\r\n        } else {\r\n          alert('Error in ID');\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n  ngAfterViewInit() {\r\n    if (this.mode == 'view') {\r\n      Array.from(document.getElementsByClassName('form-control')).forEach(element => {\r\n        (<HTMLInputElement>element).disabled = true;\r\n      });\r\n    } else {\r\n      Array.from(document.getElementsByClassName('form-control')).forEach(element => {\r\n        (<HTMLInputElement>element).disabled = false;\r\n      });\r\n\r\n    }\r\n\r\n\r\n  }\r\n  log($event)\r\n  {\r\n  }\r\n\r\n  personalInfo(): FormGroup {\r\n\r\n    const aboutVolunteer = this.formBuilder.group({\r\n      firstName: ['', [\r\n        Validators.required, Validators.maxLength(50)\r\n      ]],\r\n      lastName: ['', [\r\n        Validators.required, Validators.maxLength(50)\r\n      ]],\r\n\r\n      phoneNumber: ['', [\r\n        Validators.required, Validators.pattern(\"^[0-9]+$\"), Validators.minLength(10), Validators.maxLength(10)\r\n      ]],\r\n      alternatePhoneNumber: ['', [\r\n        Validators.pattern(\"^[0-9]+$\"), Validators.minLength(10), Validators.maxLength(10)\r\n      ]],\r\n      email: ['', [\r\n        Validators.email, Validators.maxLength(50)\r\n      ]]\r\n\r\n    });\r\n    return aboutVolunteer;\r\n  }\r\n\r\n  address(): FormGroup {\r\n\r\n    const address = this.formBuilder.group({\r\n      locality: ['', [\r\n        Validators.required, Validators.maxLength(2000)\r\n      ]],\r\n      state: ['', [\r\n        Validators.required, Validators.maxLength(50)\r\n      ]],\r\n      city: ['', [\r\n        Validators.required, Validators.maxLength(50)\r\n      ]],\r\n      pincode: ['', [\r\n        Validators.pattern(\"^[0-9]+$\"), Validators.minLength(6), Validators.maxLength(6)\r\n      ]]\r\n    });\r\n    return address;\r\n  }\r\n  additionalInfo(): FormGroup {\r\n    let me = this;\r\n    const additionalInfo = this.formBuilder.group({\r\n      interestedAreas: ['', [\r\n\r\n      ]],\r\n      volunteerPreferredTimes:['',[\r\n\r\n      ]]\r\n\r\n    });\r\n    return additionalInfo;\r\n  }\r\n\r\n\r\n\r\n\r\n  onEdit() {\r\n    this.router.navigateByUrl(\"/volunteer/edit/\" + this.id);\r\n\r\n  }\r\n\r\n  onClose() {\r\n    console.log(\"came to close\");\r\n    this.router.navigateByUrl(\"/grid/volunteer\");\r\n  }\r\n\r\n\r\n\r\n  onSubmit() {\r\n    console.log(\"Insubmit\");\r\n    this.interestedList=this.myForm.get('additionalInfo').get('interestedAreas').value.map(interestedArea=>{return {\"interestedArea\":interestedArea.itemName,\"interestedAreaId\":interestedArea.id};});\r\n\r\n\r\n\r\n     if (this.myForm.valid) {\r\n      console.log(\"valid\");\r\n      let json = Object.assign(this.myForm.get('personalInfo').value, this.myForm.get('address').value, { interestedAreas: this.interestedList },{volunteerPreferredTimes:this.myForm.get('additionalInfo').get('volunteerPreferredTimes').value});\r\n      if (this.mode == 'edit') {\r\n        json = Object.assign(json, { id: this.id });\r\n      }\r\n\r\n      console.log('submitting: ', json);\r\n\r\n      let response = this.apiService.postData(json, 'volunteer');\r\n      console.log(\"response is\" + response);\r\n      while (this.interestedList.length) {\r\n        this.interestedList.pop();\r\n      }\r\n      if (response) {\r\n        if (this.mode == 'edit') {\r\n          alert('Succesfully updated Volunteer');\r\n        } else {\r\n          alert('Succesfully registered Volunteer');\r\n        }\r\n        this.router.navigateByUrl(\"/grid/volunteer\");\r\n      }\r\n\r\n\r\n\r\n    }\r\n    else { console.log(\"invalid\");alert('please fill all the mandatory details'); } console.log(\"address is\" + this.myForm.valid);\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvd2VsY29tZS93ZWxjb21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-1\\\"></div>\\r\\n<div class=\\\"col-md-10\\\">\\r\\n  <p style=\\\"text-align: justify;\\\">Youth for Seva (YFS), founded in April 2007, is a nation-wide volunteering movement that inspires youth to volunteer, and provides them with meaningful opportunities to serve the community.</p>\\r\\n  <p style=\\\"text-align: justify;\\\">The goal of YFS is to support schools, destitute shelters, government hospitals and other organizations in the social sector through volunteers who can help them mitigate some of their shortcomings and challenges. Volunteering is made easy and customized to the individual’s interests, time availability and skill sets.</p>\\r\\n  <p style=\\\"text-align: justify;\\\">YFS aims to create positive change agents in the society, through the culture of volunteering.</p>\\r\\n  <p style=\\\"text-align: justify;\\\"><strong>Vision</strong>:</p>\\r\\n  <p style=\\\"text-align: justify;\\\">Self-reliant communities powered by selfless individuals.</p>\\r\\n  <p style=\\\"text-align: justify;\\\"><strong>Mission:</strong></p>\\r\\n  <div>\\r\\n    <ul>\\r\\n      <li>To facilitate a movement of volunteering.</li>\\r\\n      <li>To empower and enable individuals to become positive change agents.</li>\\r\\n      <li>To enable institutions to effectively engage community to deliver services.</li>\\r\\n      <li>To promote sustainable lifestyles.</li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-md-1\\\"></div>\\r\\n\\r\\n\\r\\n</div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.css']\r\n})\r\nexport class WelcomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { HttpRequest, HttpInterceptor, HttpHandler } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class XhrInterceptor implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const xhr = req.clone({\r\n      headers: req.headers.set('X-Requested-With', 'XMLHttpRequest')\r\n    });\r\n    return next.handle(xhr);\r\n  }\r\n}\r\n","export const environment = {\r\n  production: true,\r\n  serverHost:'.'\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  serverHost:'http://localhost:8080'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}