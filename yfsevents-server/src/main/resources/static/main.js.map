{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Email.ts","webpack:///./src/app/api.service.mail.ts","webpack:///./src/app/api.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/bulk-upload/bulk-upload.component.css","webpack:///./src/app/bulk-upload/bulk-upload.component.html","webpack:///./src/app/bulk-upload/bulk-upload.component.ts","webpack:///./src/app/college-registration-grid/college-registration-grid.component.css","webpack:///./src/app/college-registration-grid/college-registration-grid.component.html","webpack:///./src/app/college-registration-grid/college-registration-grid.component.ts","webpack:///./src/app/college-registration/college-registration.component.css","webpack:///./src/app/college-registration/college-registration.component.html","webpack:///./src/app/college-registration/college-registration.component.ts","webpack:///./src/app/events/add-event.component.css","webpack:///./src/app/events/add-event.component.html","webpack:///./src/app/events/add-event.component.ts","webpack:///./src/app/events/event-list.component.html","webpack:///./src/app/events/event-list.component.ts","webpack:///./src/app/events/renderer/button-renderer.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/form-modal/form-modal.component.css","webpack:///./src/app/form-modal/form-modal.component.html","webpack:///./src/app/form-modal/form-modal.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/inventory-data/inventory-data.component.css","webpack:///./src/app/inventory-data/inventory-data.component.html","webpack:///./src/app/inventory-data/inventory-data.component.ts","webpack:///./src/app/inventory-data/inventory-list.component.css","webpack:///./src/app/inventory-data/inventory-list.component.html","webpack:///./src/app/inventory-data/inventory-list.component.ts","webpack:///./src/app/inventory-data/inventorydata.service.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/model/model.user.ts","webpack:///./src/app/partner-ngo-grid/partner-ngo-grid.component.css","webpack:///./src/app/partner-ngo-grid/partner-ngo-grid.component.html","webpack:///./src/app/partner-ngo-grid/partner-ngo-grid.component.ts","webpack:///./src/app/partner-ngo/partner-ngo.component.css","webpack:///./src/app/partner-ngo/partner-ngo.component.html","webpack:///./src/app/partner-ngo/partner-ngo.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/registered-events/registered-events.component.css","webpack:///./src/app/registered-events/registered-events.component.html","webpack:///./src/app/registered-events/registered-events.component.ts","webpack:///./src/app/reset/reset.component.css","webpack:///./src/app/reset/reset.component.html","webpack:///./src/app/reset/reset.component.ts","webpack:///./src/app/selectablevolunteer/selectablevolunteer.component.css","webpack:///./src/app/selectablevolunteer/selectablevolunteer.component.html","webpack:///./src/app/selectablevolunteer/selectablevolunteer.component.ts","webpack:///./src/app/send-mail/send-mail.component.css","webpack:///./src/app/send-mail/send-mail.component.html","webpack:///./src/app/send-mail/send-mail.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/upload.service.ts","webpack:///./src/app/urlPermission/url.permission.ts","webpack:///./src/app/volunteer-grid/volunteer-grid.component.css","webpack:///./src/app/volunteer-grid/volunteer-grid.component.html","webpack:///./src/app/volunteer-grid/volunteer-grid.component.ts","webpack:///./src/app/volunteer/volunteer.component.css","webpack:///./src/app/volunteer/volunteer.component.html","webpack:///./src/app/volunteer/volunteer.component.ts","webpack:///./src/app/welcome/welcome.component.css","webpack:///./src/app/welcome/welcome.component.html","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/app/xhrInterceptor.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import{Eventdata} from \"./events/add-event.component\"\nexport class Email\n{\n  to:string;\n  cc:string;\n  bcc:string;\n  subject:string;\n  text:string;\n  eventId: number;\n\n  constructor(values:Object={})\n  {\n    Object.assign(this,values);\n  }\n}\n","import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\n\nimport { Router, ActivatedRoute, Params, Data } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiServiceMail {\n\n  private basicURL:string=\"/sendEmail\"\n  private basicURLVolunteer:string=\"/api\"\n  private urlList=new Map<string, string>();\n\n  constructor(private http:HttpClient,public router:Router) {\n    this.initialiseUrlList();\n  }\n\n  initialiseUrlList():void{\n    this.urlList.set('send', '/send');\n    this.urlList.set('getEmail','/volunteer/email');\n  }\n  postData(data){\n    console.log('postingggg', data);\n    this.http.post(this.basicURL+this.urlList.get(\"send\"),data).subscribe(response=>{\n      console.log('postResponse: ',response);\n      alert(\"Sucessfully Sent Email\");\n      alert(\"Response is\"+ response);\n      this.router.navigate(['/events']);\n    });\n  }\n  getData(){\n    let uri : string =this.basicURLVolunteer+this.urlList.get(\"getEmail\");\n    return this.http.get(uri);\n  }\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private basicURL:string=\"/api\"\n\n  private urlList=new Map<string, string>();\n\n  constructor(private http:HttpClient) {\n    this.initialiseUrlList();\n  }\n\n  initialiseUrlList():void{\n    this.urlList.set('partnerngo', '/partnerngo');\n    this.urlList.set('event','/event');\n    this.urlList.set('events','/events');\n    this.urlList.set('volunteer','/volunteer');\n    this.urlList.set('collegeregistration','/collegeregistration');\n    this.urlList.set('interestedAreasCategory','/interestedAreasCategory');\n    this.urlList.set('preresetpassword','/preresetpassword');\n    this.urlList.set('resetpassword','/resetpassword');\n    this.urlList.set('registered-events','/registered-events');\n    this.urlList.set('collegeregistration-list','/collegeregistration/list')\n    this.urlList.set('volunteerAccepted','/getAllInformation');\n    this.urlList.set('bulkSave','/bulk/save');\n  }\n\n   postData(data:any, type:string) {\n       return this.post(data, type).subscribe(response=>{\n         console.log('postResponse: ',response);\n\n       });\n     }\n\n     post(data:any, type:string) {\n      return this.http.post(this.basicURL+this.urlList.get(type),data);\n     }\n     \n  getData(type:string, id?:any, formatted?:boolean){\n    let uri : string =this.basicURL+this.urlList.get(type);\n    console.log(uri);\n    if(id){\n      uri = uri + '/' + id;\n      if(formatted){\n        uri = uri + '/' + 'formatted';\n      }\n    }\n    console.log(uri);\n    return(this.http.get(uri));\n  }\n\n  putData(data:any,id:any,type:string){\n    return this.http.put(this.basicURL+this.urlList.get(type)+\"/\"+id,data).subscribe(response=>{\n      console.log('updating:',response);\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { PartnerNGOComponent } from './partner-ngo/partner-ngo.component';\nimport { EventListComponent } from './events/event-list.component';\nimport { AddEventComponent } from './events/add-event.component';\nimport {VolunteerComponent}  from './volunteer/volunteer.component';\nimport { InventoryDataComponent } from './inventory-data/inventory-data.component';\nimport { CollegeRegistrationComponent } from './college-registration/college-registration.component';\nimport {SendMailComponent} from \"./send-mail/send-mail.component\";\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { InventoryListComponent } from './inventory-data/inventory-list.component';\nimport { PartnerNgoGridComponent } from './partner-ngo-grid/partner-ngo-grid.component';\nimport { CollegeRegistrationGridComponent } from './college-registration-grid/college-registration-grid.component';\nimport { LoginComponent}from './login/login.component';\nimport { ResetComponent}from './reset/reset.component';\nimport { RegisteredEventsComponent}from './registered-events/registered-events.component';\nimport {RegisterComponent}from \"./register/register.component\";\nimport {VolunteerGridComponent} from './volunteer-grid/volunteer-grid.component';\nimport{SelectablevolunteerComponent} from './selectablevolunteer/selectablevolunteer.component';\n\nimport { BulkUploadComponent } from './bulk-upload/bulk-upload.component';\n\nconst routes: Routes = [\n  {\n    path: 'collegeregistration', children:[\n    { path: '', component:CollegeRegistrationComponent },\n    { path: ':mode/:id', component: CollegeRegistrationComponent}\n    ]\n    },\n    {\n      path: 'grid/collegeregistration', component: CollegeRegistrationGridComponent\n    },\n    {\n      path: 'bulk/volunteer', component: BulkUploadComponent\n    },\n{\npath: 'login', component: LoginComponent\n},\n  {\n    path: 'inventorydata', children:[\n      {path: '', component:InventoryDataComponent},\n      { path: ':mode', component: InventoryDataComponent}\n    ]\n  },\n  {\n    path:'inventorylist',component:InventoryListComponent\n  },\n  {\n  path: 'grid/partnerngo', component: PartnerNgoGridComponent\n  },\n\n  {\n    path: 'partnerngo', children:[\n      {path: '', component:PartnerNGOComponent},\n      { path: ':mode/:id', component: PartnerNGOComponent}\n    ]\n  },\n  {path:'events',component:EventListComponent},\n  {path:'home',component:WelcomeComponent},\n  {path:'reset',component:ResetComponent},\n  {path:'registered-events',component:RegisteredEventsComponent},\n  {path:'addevent',component:AddEventComponent},\n  {\n    path:'email',component:SendMailComponent\n  },\n   {\n    path: 'grid/volunteer', component: VolunteerGridComponent\n    },\n  {\n  path: 'volunteer', children:[\n   {path: '', component: VolunteerComponent},\n  {path: ':mode/:id', component: VolunteerComponent}\n  ]\n  },\n\n{\n\npath: '**', redirectTo: 'home'\n},\n{\npath: 'register', component: RegisterComponent\n  },\n  {\n    path:'selectVolenteer',component:SelectablevolunteerComponent\n  }\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"#app-root-container{\\nwidth:100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxVQUFVO0FBQ1YiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNhcHAtcm9vdC1jb250YWluZXJ7XG53aWR0aDoxMDAlO1xufVxuIl19 */\"","module.exports = \"<nav class=\\\"navbar navbar-default navbar-fixed-top\\\" style=\\\"background-color: #ba2a29;margin-bottom:20px;\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\" style=\\\"height:70px\\\">\\n      <img src=\\\"/assets/youth-for-seva.png\\\" style=\\\"height:50px\\\">\\n    </a>\\n\\n    <div class=\\\"collapse navbar-collapse\\\">\\n      <ul class=\\\"nav navbar-nav navbar-right text-white\\\" style=\\\"margin-top:12px;\\\">\\n        <li><a [routerLink]=\\\"['/home']\\\">HOME</a></li>\\n        <li *ngIf=isUser()><a [routerLink]=\\\"['/registered-events']\\\">Accepted Events</a></li>\\n        <li class=\\\"dropdown\\\" *ngIf=isAdmin()>\\n          <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\">REGISTER\\n            <span class=\\\"caret\\\"></span></a>\\n          <ul class=\\\"dropdown-menu\\\">\\n            <li><a [routerLink]=\\\"['/grid/partnerngo']\\\">Partner NGO</a></li>\\n            <li><a [routerLink]=\\\"['/grid/volunteer']\\\">Volunteer</a></li>\\n            <li><a [routerLink]=\\\"['/grid/collegeregistration']\\\">College</a></li>\\n            <li><a [routerLink]=\\\"['/inventorylist']\\\">Inventory Data</a></li>\\n          </ul>\\n        </li>\\n        <li *ngIf=isAdmin()><a [routerLink]=\\\"['/events']\\\">EVENTS</a></li>\\n\\n        <li *ngIf=!app.authenticated><a [routerLink]=\\\"['/login']\\\">LOGIN</a></li>\\n        <li *ngIf=app.authenticated><a href=\\\"#\\\" (click)=\\\"logout()\\\">LOGOUT</a></li>\\n        <!--<li><a [routerLink]=\\\"\\\">CONTACT</a></li>-->\\n        <!--<li><a [routerLink]=\\\"\\\"><span class=\\\"glyphicon glyphicon-search\\\"></span></a></li>-->\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\\n<div id=\\\"app-root-container\\\" class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\\n<!--<footer></footer>-->\\n\"","import { Component } from '@angular/core';\nimport { AppService } from './app.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Y4S';\n  static API_URL = 'http://localhost:8080';\n\n\n  constructor(private app: AppService, private http: HttpClient, private router: Router) {\n        this.app.authenticate(undefined, undefined);\n      }\n\n      isAdmin() {\n        return  this.app.authenticated && this.app.role == 'ROLE_ADMIN';\n      }\n      isUser() {\n              return  this.app.authenticated && this.app.role == 'ROLE_USER';\n            }\n\n\n   logout() {\n    this.http.get('api/logout').subscribe((response)=>{\n      this.app.authenticated = false;\n      this.router.navigateByUrl('/login');}\n      );\n   }\n}\n"," import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule,NO_ERRORS_SCHEMA, Injectable } from '@angular/core';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PartnerNGOComponent } from './partner-ngo/partner-ngo.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AlertModule } from 'ngx-bootstrap';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { EventListComponent } from './events/event-list.component';\nimport { AddEventComponent } from './events/add-event.component';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\nimport {TypeaheadModule} from 'ngx-bootstrap/typeahead';\nimport { FormsModule } from '@angular/forms';\nimport { VolunteerComponent } from './volunteer/volunteer.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS, HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport {HttpModule} from '@angular/http';\nimport { InventoryDataComponent } from './inventory-data/inventory-data.component';\nimport { CollegeRegistrationComponent } from './college-registration/college-registration.component';\nimport { SendMailComponent } from './send-mail/send-mail.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\nimport { InventoryListComponent } from './inventory-data/inventory-list.component';\nimport { PartnerNgoGridComponent } from './partner-ngo-grid/partner-ngo-grid.component';\nimport { CollegeRegistrationGridComponent } from './college-registration-grid/college-registration-grid.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {UrlPermission } from './urlPermission/url.permission';\nimport {UserService} from './services/user.service';\nimport {AuthService} from './services/auth.service';\nimport {AppService} from './app.service';\nimport {VolunteerGridComponent} from './volunteer-grid/volunteer-grid.component';\n//import{EventEmiterService} from './event-emmiter-service1.service';\nimport { ButtonRendererComponent } from './events/renderer/button-renderer.component';\nimport { XhrInterceptor } from './xhrInterceptor';\nimport { ResetComponent } from './reset/reset.component';\nimport { RegisteredEventsComponent } from './registered-events/registered-events.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormModalComponent } from './form-modal/form-modal.component';\nimport { SelectablevolunteerComponent } from './selectablevolunteer/selectablevolunteer.component';\nimport { BulkUploadComponent } from './bulk-upload/bulk-upload.component';\n\n@NgModule({\ndeclarations: [\nAppComponent,\nPartnerNGOComponent,\nHeaderComponent,\nFooterComponent,\nEventListComponent,\nAddEventComponent,\nVolunteerComponent,\nInventoryDataComponent,\nCollegeRegistrationComponent,\nSendMailComponent,\nWelcomeComponent,\n    InventoryListComponent,\n    PartnerNgoGridComponent,\n    CollegeRegistrationGridComponent,\n  VolunteerGridComponent,\n  LoginComponent,\nRegisterComponent,\nButtonRendererComponent,\nResetComponent,\nRegisteredEventsComponent,\nFormModalComponent,\nSelectablevolunteerComponent,\nBulkUploadComponent\n\n  ],\n  imports: [\n    AgGridModule.withComponents([ButtonRendererComponent]),\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    AlertModule.forRoot(),\n    AgGridModule.withComponents([]),\n    BsDatepickerModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    TimepickerModule.forRoot(),\n    TypeaheadModule.forRoot(),\n    AngularMultiSelectModule,\n    HttpModule,\n    NgbModule.forRoot(),\n  ],\n\n  schemas:[NO_ERRORS_SCHEMA],\n  providers: [AuthService, UserService, UrlPermission, AppService, { provide: HTTP_INTERCEPTORS, useClass: XhrInterceptor, multi: true }],\n  entryComponents:[FormModalComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class AppService {\n\n  authenticated = false;\n  role =\"\";\n\n  constructor(private http: HttpClient) {\n  }\n\n  authenticate(credentials, callback) {\n\n        const headers = new HttpHeaders(credentials ? {\n            authorization : 'Basic ' + btoa(credentials.username + ':' + credentials.password)\n        } : {});\n\n        this.http.get('api/user', {headers: headers}).subscribe(response => {\n            if (response && response['name']) {\n                this.authenticated = true;\n                if(response['principal']) {this.role = response['principal']['role'];}\n            } else {\n                this.authenticated = false;\n            }\n            return callback && callback();\n        });\n\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2J1bGstdXBsb2FkL2J1bGstdXBsb2FkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n  <div>\\n    <a href={{fileUrl}} download>\\n      <button class=\\\"btn btn-sm btn-primary\\\">Download Template</button>\\n    </a>\\n    <div class=\\\"pull-right\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#content\\\">Upload Template</button>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"data.length\\\">\\n    <div class=\\\"page-header well text-center well-sm\\\">\\n      <h5><strong> Uploaded Volunteer Data </strong></h5>\\n    </div>\\n    \\n    <div  #bulkGrid  style=\\\"width: 100%; height: 100%;\\\">\\n      <ag-grid-angular style=\\\"height: 100%;\\\"\\n        class=\\\"ag-theme-balham\\\" \\n        [rowData]=\\\"data\\\" \\n        [columnDefs]=\\\"headers\\\"\\n      >\\n      </ag-grid-angular>\\n    </div>\\n    <div class=\\\"pull-right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-space\\\" (click)=\\\"close()\\\">Close</button>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"content\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"FileUpload\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header card-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" aria-hidden=\\\"true\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">File Upload</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <input type=\\\"file\\\" (change)=\\\"selectFile($event)\\\" placeholder=\\\"Upload file\\\" accept=\\\".xls, .xlsx\\\">\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn btn-sm btn-primary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n        <button class=\\\"btn btn-sm btn-primary\\\" [disabled]=\\\"!selectedFiles\\\" (click)=\\\"upload()\\\">Add File</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UploadService } from '../upload.service';\nimport { Router } from '@angular/router';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-bulk-upload',\n  templateUrl: './bulk-upload.component.html',\n  styleUrls: ['./bulk-upload.component.css'],\n})\nexport class BulkUploadComponent implements OnInit {\n\n  selectedFiles: FileList;\n  currentUploadedFile: File;\n  fileUrl;\n\n  private data:any=[];\n  private uploadResponse:any=[];\n  private headers=[\n    {headerName: 'Status', field: 'status'},\n    {headerName: 'First Name', field: 'firstName',filter:true, sortable: true },\n    {headerName: 'Last Name', field: 'lastName',filter:true},\n    {headerName: 'Phone Number', field: 'phoneNumber',filter:true},\n    {headerName: 'Alternate Phone Number', field: 'alternatePhoneNumber',filter:true},\n    {headerName: 'EmailId', field: 'email',filter:true},\n    {headerName: 'Locality', field: 'locality',filter:true},\n    {headerName: 'City', field: 'city',filter:true},\n    {headerName: 'State', field: 'state',filter:true},\n    {headerName: 'PinCode', field: 'pincode',filter:true},\n    {headerName: 'Interested Areas', field: 'formattedInterestedAreas'}\n  ];\n  private bulkGrid:any;\n\n  constructor(private uploadService: UploadService,\n              private router: Router) {\n              }\n\n  ngOnInit() {\n    this.fileUrl = \"/assets/Volunteer Template.xls\"\n  }\n\n  selectFile(event){\n    this.selectedFiles = event.target.files;\n    console.log('file uploaded: ');\n    console.log(event.target.files);\n  }\n\n  downloadTemplate(){\n    \n  }\n\n  upload(){\n    $(\"#content\").modal('toggle');\n    this.currentUploadedFile = this.selectedFiles.item(0);\n    this.uploadService.pushFileData(this.currentUploadedFile).subscribe(result=>{\n      console.log(\"Upload Response\" + result);\n      let response = JSON.parse(JSON.stringify(result));\n      if(response.status && response.status===200){\n        this.uploadResponse = response.body;\n        let volunteers =[];\n        (response.body).forEach(element => {\n          let volunteer={};\n          if(element.errors.length){\n            Object.assign(volunteer, {\"status\" : element.errors.toString()});\n          }else{\n            Object.assign(volunteer, {\"status\" : \"No Errors\"});\n          }\n          Object.assign(volunteer, element.volunteer);\n          let interestedAreas = [];\n          (element.volunteer.interestedAreas).forEach(interestedArea => {\n            interestedAreas.push(interestedArea[\"interestedArea\"]);\n          });\n          Object.assign(volunteer, {formattedInterestedAreas : interestedAreas});\n          volunteers.push(volunteer);\n        });\n        this.data = volunteers;\n        alert(\"Only data with no errors were saved\");\n      }\n      console.log(\"Upload Parsed Response\" + result);\n    });\n  }\n\n  close(){\n    alert(\"Please correct and reupload data with errors\");\n    this.router.navigateByUrl(\"/grid/volunteer\");\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbGxlZ2UtcmVnaXN0cmF0aW9uLWdyaWQvY29sbGVnZS1yZWdpc3RyYXRpb24tZ3JpZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"page-header well text-center well-sm\\\">\\n    <h3><strong> College Registration</strong></h3>\\n  </div>\\n  <div  #myGrid  style=\\\"width: 100%; height: 100%;\\\">\\n    <ag-grid-angular style=\\\"height: 100%;\\\"\\n      class=\\\"ag-theme-balham\\\" \\n      [rowData]=\\\"data\\\" \\n      [columnDefs]=\\\"headers\\\"\\n      (rowClicked)=\\\"onRowCilcked($event)\\\">\\n    </ag-grid-angular>\\n  </div>\\n  <div class=\\\"row\\\" style=\\\"margin-top:10px\\\">\\n      <div class=\\\"col-md-1\\\"></div>\\n      <div class=\\\"col-md-10\\\">\\n          <div style=\\\"text-align:right\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"router.navigate(['/collegeregistration'])\\\">\\n              Add College\\n          </button>\\n          </div>\\n      </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-college-registration-grid',\n  templateUrl: './college-registration-grid.component.html',\n  styleUrls: ['./college-registration-grid.component.css']\n})\nexport class CollegeRegistrationGridComponent implements OnInit {\n\n  private data:any=[];\n  private headers=[\n    {headerName: 'College Name', field: 'name',filter:true, sortable: true },\n    {headerName: 'Registration Id', field: 'registrationId',filter:true},\n    {headerName: 'Address Line 1', field: 'addressLine1',filter:true},\n    {headerName: 'Address Line 2', field: 'addressLine2',filter:true},\n    {headerName: 'City', field: 'city',filter:true},\n    {headerName: 'State', field: 'state',filter:true},\n    {headerName: 'Pincode', field: 'pincode',filter:true},\n \n    {headerName: 'Mou ID', field: 'mouID',filter:true},\n    {headerName: 'Mou Status', field: 'mouStatus'},\n    {headerName: 'Mou Name', field: 'mouName'},\n    {headerName: 'Number Of Events Agreed', field: 'noOfEvents'},\n    {headerName: 'Valid From', field: 'fromDate'},\n    {headerName: 'Valid To', field: 'toDate'},\n    {headerName: 'Comments', field: 'comments'}\n  ];\n  private myGrid: any;\n  private gridApi: any;\n\n  constructor(private apiService:ApiService,\n              private router:Router) { }\n\n  ngOnInit() {\n    let rows=[];\n    this.apiService.getData('collegeregistration').subscribe(response=>{\n      let result:any=JSON.parse(JSON.stringify(response));\n      Array.from(result).forEach(element => {\n        let collegeDetails = JSON.parse(JSON.stringify(element));\n        let mouDetails=collegeDetails.mouDetails;\n        console.log(mouDetails);\n\n        Array.from(mouDetails).forEach(detail => {\n          let mou = JSON.parse(JSON.stringify(detail));\n          if(mou!=null){\n            let collegeMou = {};\n            Object.assign(collegeMou, collegeDetails)\n            Object.assign(collegeMou, {mouID: mou.mouID});\n            Object.assign(collegeMou, {mouStatus: mou.mouStatus});\n            Object.assign(collegeMou, {mouName: mou.mouName});\n            Object.assign(collegeMou, {noOfEvents: mou.noOfEvents});\n            Object.assign(collegeMou, {fromDate: mou.fromDate});\n            Object.assign(collegeMou, {toDate: mou.toDate});\n            Object.assign(collegeMou, {comments: mou.comments});\n            rows.push(collegeMou);\n          }\n        });\n      });\n      console.log(response);\n      this.data=rows;\n      console.log(this.data);\n\n    });\n  }\n\n  onRowCilcked(event){\n    console.log(event.rowIndex);\n    this.router.navigateByUrl(\"/collegeregistration/edit/\"+((event.rowIndex)+1));\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbGxlZ2UtcmVnaXN0cmF0aW9uL2NvbGxlZ2UtcmVnaXN0cmF0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"page-header well well-sm\\\">\\n    <h3><strong> College Registration</strong></h3>\\n  </div>\\n\\n  <form [formGroup]=\\\"collegeForm\\\">\\n    <div class=\\\"panel panel-info\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <label>About College</label>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <div formGroupName=\\\"collegeDetails\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\n              <div class=\\\"form-group required\\\">\\n                <label class=\\\"control-label\\\">College Name</label>\\n                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control well well-sm\\\">\\n               <!-- <div *ngIf=\\\"collegeForm.controls['collegeDetails'].controls.name.errors&&(collegeForm.controls['collegeDetails'].controls.name.dirty||collegeForm.controls['collegeDetails'].controls.name.touched)\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"collegeForm.controls['collegeDetails'].controls.name.errors.required\\\" class=\\\"field-invalid\\\">Name is required</div>\\n                </div>-->\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\n              <div class=\\\"form-group \\\">\\n                <label class=\\\"control-label\\\">Registration Id</label>\\n                <input type=\\\"text\\\" formControlName=\\\"registrationId\\\" class=\\\"form-control well well-sm\\\">\\n                <!--<div *ngIf=\\\"collegeform.controls['collegeDetails'].controls.registrationId.errors&&(collegeform.controls['collegeDetails'].controls.registrationId.dirty||collegeform.controls['collegeDetails'].controls.registrationId.touched)\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"collegeform.controls['collegeDetails'].controls.registrationId.errors.required\\\" class=\\\"field-invalid\\\"> RegistrationId is required</div>\\n                </div>-->\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"panel panel-info\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <label>Address</label>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <div formGroupName=\\\"address\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\n              <div class=\\\"form-group required\\\">\\n                <label class=\\\"control-label\\\">Address Line 1</label>\\n                <input type=\\\"text\\\" formControlName=\\\"addressLine1\\\" class=\\\"form-control well well-sm\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Address Line 2</label>\\n                <input type=\\\"text\\\" formControlName=\\\"addressLine2\\\" class=\\\"form-control well well-sm\\\">\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\n              <div class=\\\"form-group required\\\">\\n                <label class=\\\"control-label\\\">City</label>\\n                <input type=\\\"text\\\" formControlName=\\\"city\\\" class=\\\"form-control well well-sm\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\n              <div class=\\\"form-group required\\\">\\n                <label class=\\\"control-label\\\">State</label>\\n                <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control well well-sm\\\">\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\n              <div class=\\\"form-group required\\\">\\n                <label class=\\\"control-label\\\">Pincode</label>\\n                <input type=\\\"text\\\" formControlName=\\\"pincode\\\" class=\\\"form-control well well-sm\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6 offset-md-3\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"panel panel-info\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <label>MOU Details</label>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <ul class=\\\"nav nav-tabs\\\" active=\\\"selectedTab\\\">\\n          <li class=\\\"nav active\\\" *ngIf=\\\"numberOfMOUs>0\\\"><a href=\\\"#tab0\\\" data-toggle=\\\"tab\\\" (click)=\\\"activateTab(1)\\\">MOU\\n              1</a></li>\\n          <li class=\\\"nav\\\" *ngFor=\\\"let num of getArray(numberOfMOUs-1); let i=index;\\\"><a href=\\\"#tab{{i+1}}\\\" data-toggle=\\\"tab\\\"\\n              (click)=\\\"activateTab(i+2)\\\">MOU {{i+2}}</a></li>\\n\\n          <div class=\\\"pull-right\\\">\\n            <button class=\\\"btn btn-primary btn-sm btn-space\\\" (click)=addMOU() [disabled]=\\\"isMaxLimitReached(10)\\\">Add MOU</button>\\n            <button class=\\\"btn btn-primary btn-sm \\\" (click)=removeMOU() >Remove MOU</button>\\n\\n          </div>\\n\\n        </ul>\\n\\n        <div class=\\\"tab-content\\\">\\n          <div formArrayName=\\\"mouDetails\\\">\\n            <div class=\\\"tab-pane\\\" *ngFor=\\\"let person of collegeForm.get('mouDetails').controls;let i=index\\\"\\n              formGroupName=\\\"{{i}}\\\" id=\\\"tab{{i}}\\\">\\n\\n              <div *ngIf=\\\"selectedTab==i\\\">\\n                <div class=\\\"row\\\">\\n                  \\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group required\\\">\\n                      <label class=\\\"control-label\\\">MOU STATUS</label>\\n                      <!-- <input type=\\\"text\\\" formControlName=\\\"mouStatus\\\" class=\\\"form-control well well-sm\\\"> -->\\n                      <select formControlName=\\\"mouStatus\\\" class=\\\"form-control\\\">\\n                        <option *ngFor=\\\"let action of moustatusinfo\\\" [value]=\\\"action\\\">{{action}}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group required\\\">\\n                      <label class=\\\"control-label\\\">MOU Name</label>\\n                      <input type=\\\"text\\\" style=\\\"text-transform:uppercase\\\" formControlName=\\\"mouName\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Number Of Events Agreed</label>\\n                      <input type=\\\"text\\\" formControlName=\\\"noOfEvents\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group required\\\">\\n                      <label class=\\\"control-label\\\">Valid From</label>\\n                      <input type=\\\"text\\\" formControlName=\\\"fromDate\\\" class=\\\"form-control well well-sm\\\" bsDatepicker [bsConfig]=\\\"{dateinputFormat:'DD/MM/YYYY'}\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group required\\\">\\n                      <label class=\\\"control-label\\\">Valid To</label>\\n                      <input type=\\\"text\\\" formControlName=\\\"toDate\\\" class=\\\"form-control well well-sm\\\" bsDatepicker [bsConfig]=\\\"{dateinputFormat:'DD/MM/YYYY'}\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Comments</label>\\n                      <textarea type=\\\"text\\\" formControlName=\\\"comments\\\" class=\\\"form-control well well-sm\\\"></textarea>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n              </div>\\n\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </form>\\n  <div class=\\\"text-center\\\">\\n    <!--<button class=\\\"btn btn-primary btn-sx\\\"  (click)=\\\"onSubmit()\\\">Register</button>-->\\n    <button (click)=\\\"onSubmit()\\\" *ngIf=\\\"!mode\\\" class=\\\"btn btn-primary btn-space\\\">Register</button>\\n    <button (click)=\\\"onSubmit()\\\" *ngIf=\\\"mode=='edit'\\\" class=\\\"btn btn-primary btn-space\\\">Update</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormsModule, FormGroup, FormControl, Validators, FormBuilder, FormArray } from '@angular/forms';\nimport { ApiService } from '../api.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-college-registration',\n  templateUrl: './college-registration.component.html',\n  styleUrls: ['./college-registration.component.css']\n})\nexport class CollegeRegistrationComponent {\n  collegeForm: FormGroup;\n\n\n  private numberOfMOUs: number = 0;\n  private selectedTab: number = -1;\n  private mode: String;\n  private id: number;\n  moustatusinfo:string[]=['Active','InActive','Suspended'];\n  constructor(private formBuilder: FormBuilder,\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.collegeForm = this.formBuilder.group({\n      collegeDetails: this.collegeDetails(),\n      address: this.address(),\n      mouDetails: this.formBuilder.array([this.mouDetails()])\n    });\n    this.numberOfMOUs = this.getMOUDetails().length;\n    this.activateTab(this.numberOfMOUs);\n\n    this.route.paramMap.subscribe(params => {\n      console.log(params);\n      this.mode = params.get('mode');\n      this.id = +params.get('id');\n      if (!isNaN(this.id)) {\n\n        this.apiService.getData('collegeregistration', this.id, true).subscribe(result => {\n          let data = JSON.parse(JSON.stringify(result));\n          console.log(\"GetResponse: \" + data);\n          if (data.mouDetails) {\n            data.mouDetails.forEach((mou, index) => {\n              if (index != 0) {\n                this.addMOU();\n              }\n            });\n          }\n          this.collegeForm.setValue(data);\n        });\n      } else {\n        alert('Error in ID');\n      }\n    });\n  }\n\n  collegeDetails(): FormGroup {\n    return this.formBuilder.group({\n      name: ['', [\n        Validators.required, Validators.maxLength(50)\n      ]],\n      registrationId: ['', [\n        Validators.maxLength(200)\n      ]],\n    });\n  }\n\n  address(): FormGroup {\n    return this.formBuilder.group({\n      addressLine1: ['', [\n        Validators.required, Validators.maxLength(2000)\n      ]],\n      addressLine2: ['', [\n        Validators.maxLength(2000)\n      ]],\n      state: ['', [\n        Validators.required, Validators.maxLength(50)\n      ]],\n      city: ['', [\n        Validators.required, Validators.maxLength(50)\n      ]],\n      pincode: ['', [\n        Validators.pattern(\"^[0-9]+$\"), Validators.minLength(6), Validators.maxLength(6)\n      ]]\n    });\n  }\n\n  mouDetails(): FormGroup {\n    return this.formBuilder.group({\n      mouID: ['', [\n        Validators.required, Validators.maxLength(200)\n      ]],\n      mouStatus: ['', [\n        Validators.required, Validators.maxLength(200)\n      ]],\n      mouName: ['', [\n        Validators.required, Validators.maxLength(10)\n      ]],\n      noOfEvents: ['', [\n        Validators.required, Validators.maxLength(2)\n      ]],\n      fromDate: [],\n      toDate: [],\n      comments: ['', [\n        Validators.maxLength(200)\n      ]]\n    });\n  }\n\n  getMOUDetails(): FormArray {\n    return this.collegeForm.get('mouDetails') as FormArray;\n  }\n\n  addMOU(): void {\n    if (this.numberOfMOUs < 10) {\n      (this.getMOUDetails()).push(this.mouDetails());\n      this.numberOfMOUs = this.getMOUDetails().length;\n\n    }\n  }\n  removeMOU(): void {\n    if (this.numberOfMOUs > 1) {\n      (this.getMOUDetails()).removeAt(this.numberOfMOUs - 1);\n      this.numberOfMOUs = this.getMOUDetails().length;\n      this.selectedTab = this.numberOfMOUs - 1;\n    }\n  }\n\n  getNumberOfMOUs(): Number {\n    return this.numberOfMOUs;\n  }\n\n  isMaxLimitReached(val): boolean {\n    return this.numberOfMOUs >= val;\n  }\n\n  getArray(val): number[] {\n    return Array(val);\n  }\n\n  activateTab(val): void {\n    this.selectedTab = val - 1;\n  }\n\n  checkForMandatoryValidations(collegeDetails) {\n    let checkflag:boolean=false;\n    if (collegeDetails.name && collegeDetails.addressLine1 && collegeDetails.city && collegeDetails.state\n      && collegeDetails.pincode) {\n\n      if (collegeDetails.mouDetails.length) {\n        collegeDetails.mouDetails.forEach(o => {\n          if (!o.mouStatus || !o.mouName || !o.fromDate || !o.toDate) {\n            checkflag=true;\n            return false;\n          }\n          \n        })\n        if(!checkflag)\n        {\n          return true;\n        }\n      }\n      else{\n      return true;\n      }\n    }\n    else\n      return false;\n\n  }\n\n  onSubmit() {\n    console.log('inside method onsubmit');\n    let json = Object.assign({ mouDetails: this.getMOUDetails().value }, this.collegeForm.get('collegeDetails').value, this.collegeForm.get('address').value);\n    if (this.mode == 'edit') {\n      json = Object.assign(json, { id: this.id });\n    }\n\n    console.log('submitting: ', json);\n    if (this.checkForMandatoryValidations(json)) {\n      let response = this.apiService.postData(json, 'collegeregistration');\n      if (response) {\n        if (this.mode == 'edit') {\n          alert('Succesfully updated College Details');\n        } else {\n          alert('Succesfully registered College Details');\n        }\n        this.router.navigateByUrl(\"grid/collegeregistration\");\n      }\n\n    }\n    else {\n      alert('Please fill out the mandatory fields');\n    }\n  }\n\n\n}\n\n\n\n\n\n\n\n\n","module.exports = \".row {\\n    margin-bottom:25px;\\n}\\n:host >>> .alert-md-local {\\n    background-color: #009688;\\n    border-color: #00695C;\\n    color: #fff;\\n    margin-bottom:0px;\\n    margin-top: 20px;\\n}\\n.itemsrow{\\n    margin-bottom:0px !important;\\n}\\n.form-group.required .control-label:after{\\n    content:\\\"*\\\";\\n    color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXZlbnRzL2FkZC1ldmVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSx5QkFBeUI7SUFDekIscUJBQXFCO0lBQ3JCLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsZ0JBQWdCO0FBQ3BCO0FBRUE7SUFDSSw0QkFBNEI7QUFDaEM7QUFFQTtJQUNJLFdBQVc7SUFDWCxVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9ldmVudHMvYWRkLWV2ZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm93IHtcbiAgICBtYXJnaW4tYm90dG9tOjI1cHg7XG59XG46aG9zdCA+Pj4gLmFsZXJ0LW1kLWxvY2FsIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA5Njg4O1xuICAgIGJvcmRlci1jb2xvcjogIzAwNjk1QztcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBtYXJnaW4tYm90dG9tOjBweDtcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG4uaXRlbXNyb3d7XG4gICAgbWFyZ2luLWJvdHRvbTowcHggIWltcG9ydGFudDtcbn1cblxuLmZvcm0tZ3JvdXAucmVxdWlyZWQgLmNvbnRyb2wtbGFiZWw6YWZ0ZXJ7XG4gICAgY29udGVudDpcIipcIjtcbiAgICBjb2xvcjogcmVkO1xufSJdfQ== */\"","module.exports = \"<alert type=\\\"md-local\\\" *ngIf=\\\"submitSuc\\\">{{message}}</alert>\\n\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"page-header well text-center well-sm\\\">\\n    <h3><strong> Event Registration</strong></h3>\\n  </div>\\n\\n  <form [formGroup]=\\\"eventForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-body\\\">\\n\\n        <div class=\\\"row form-row\\\">\\n          <div class=\\\"col-md-6 offset-md-3 form-group required\\\">\\n            <label class=\\\"control-label\\\">Event Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"eventName\\\" placeholder=\\\"Event Name\\\" class=\\\"form-control\\\" required>\\n          </div>\\n          <div class=\\\"col-md-4 form-group required\\\">\\n            <label class=\\\"control-label\\\">Action</label>\\n            <select formControlName=\\\"eventAction\\\" class=\\\"form-control\\\" required>\\n              <option *ngFor=\\\"let action of eventActions\\\" [value]=\\\"action\\\">{{action}}</option>\\n            </select>\\n          </div>\\n          <div class=\\\"col-md-2 form-group required\\\">\\n            <label class=\\\"control-label\\\">Recurring Event:</label>\\n            <select formControlName=\\\"recurringEvent\\\" class=\\\"form-control\\\" required>\\n              <option *ngFor=\\\"let value of recurringEventOptions\\\" [value]=\\\"value\\\">{{value}}</option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row form-row\\\">\\n          <div class=\\\"col-md-4 offset-md-3 form-group required\\\">\\n            <label class=\\\"control-label\\\">Partner Ngos</label>\\n            <angular2-multiselect [data]=\\\"ngos\\\" [settings]=\\\"settingsNgos\\\" (onSelect)=\\\"log($event)\\\"\\n              (onDeSelect)=\\\"log($event)\\\" (onSelectAll)=\\\"log($event)\\\" (onDeSelectAll)=\\\"log($event)\\\"\\n              formControlName=\\\"ngoName\\\" required>\\n            </angular2-multiselect>\\n          </div>            \\n          <div class=\\\"col-md-4 form-group required\\\">\\n            <label class=\\\"control-label\\\">Category</label>\\n            <select formControlName=\\\"eventCategory\\\" class=\\\"form-control\\\" (change)=\\\"onCategorySelected()\\\" required>\\n              <option *ngFor=\\\"let category of eventCategories\\\" [value]=\\\"category\\\">{{category}}</option>\\n            </select>\\n          </div>\\n          <div class=\\\"col-md-4 form-group required\\\">\\n            <label class=\\\"control-label\\\">College-MOU</label>\\n            <select formControlName=\\\"college\\\" class=\\\"form-control\\\" required>\\n              <option *ngFor=\\\"let mou of mouItems\\\" [value]=\\\"mou\\\">{{mou}}</option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row form-row itemsrow\\\">\\n          <div class=\\\"col-md-6 offset-md-3 form-group required\\\">\\n            <label class=\\\"control-label\\\" for=\\\"datepicker\\\">Select Date & Time Range</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"datepicker\\\" formControlName=\\\"eventDuration\\\" bsDaterangepicker required/>\\n          </div>\\n          <div class=\\\"col-md-3 form-group\\\">\\n            <timepicker [formControlName]=\\\"'fromTime'\\\">\\n            </timepicker>\\n          </div>\\n          <div class=\\\"col-md-3 form-group\\\">\\n            <timepicker [formControlName]=\\\"'toTime'\\\"></timepicker>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row form-row\\\">\\n          <div class=\\\"col-md-8 offset-md-3 form-group required\\\">\\n            <label class=\\\"control-label\\\">Items Required:</label>\\n            <angular2-multiselect [data]=\\\"itemList\\\" [settings]=\\\"settings\\\" (onSelect)=\\\"log($event)\\\"\\n              (onDeSelect)=\\\"log($event)\\\" (onSelectAll)=\\\"log($event)\\\" (onDeSelectAll)=\\\"log($event)\\\"\\n              formControlName=\\\"items\\\" required>\\n            </angular2-multiselect>\\n          </div>\\n          <div class=\\\"col-md-2  form-group required\\\">\\n            <label class=\\\"control-label\\\">Volunteers Required</label>\\n            <input type=\\\"text\\\" formControlName=\\\"volunteersReq\\\" placeholder=\\\"0\\\" class=\\\"form-control\\\" required>\\n          </div>\\n          <div class=\\\"col-md-2 form-group\\\">\\n            <label class=\\\"control-label\\\">Volunteers Registered</label>\\n            <input type=\\\"text\\\" formControlName=\\\"volunteersReg\\\" placeholder=\\\"0\\\" class=\\\"form-control\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"row form-row\\\">\\n          <div class=\\\"col-md-6 offset-md-3 form-group\\\">\\n            <label class=\\\"control-label\\\">Offline Registered Volunteers</label>\\n            <input type=\\\"text\\\" formControlName=\\\"volunteersOff\\\" placeholder=\\\"0\\\" class=\\\"form-control\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"row form-row\\\">\\n          <div class=\\\" col-md-12 offset-md-3 form-group required\\\">\\n            <label class=\\\"control-label\\\">Comments</label>\\n            <textarea type=\\\"text\\\" formControlName=\\\"comments\\\" class=\\\"form-control\\\" required></textarea>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n    \\n  </form>\\n  <div class=\\\"text-center\\\">\\n    <button class=\\\"btn btn-primary btn-sx\\\" (click)=\\\"onSubmit()\\\">Save</button>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n<!-- <form >\\n        <div class=\\\"form-row\\\">\\n            <div class=\\\"col-md-1\\\"></div>\\n          <div class=\\\"form-group col-md-5\\\">\\n            <label for=\\\"eventname\\\">Event Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"eventname\\\" placeholder=\\\"Name\\\">\\n          </div>\\n          <div class=\\\"form-group col-md-5\\\">\\n                <label for=\\\"eventaction\\\">Action</label>\\n                <select id=\\\"eventaction\\\" class=\\\"form-control\\\">\\n                  <option selected>Choose...</option>\\n                  <option>Not Started</option>\\n                  <option>In progress</option>\\n                  <option>completed</option>\\n                  <option>Abandoned</option>\\n                </select>\\n          </div>\\n          <div class=\\\"col-md-1\\\"></div>\\n        </div>\\n\\n        <div class=\\\"form-row\\\">\\n                <div class=\\\"col-md-1\\\"></div>\\n              <div class=\\\"form-group col-md-5\\\">\\n                <label for=\\\"ngoname\\\">Partner Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ngoname\\\" placeholder=\\\"NGO Name\\\" >\\n              </div>\\n              <div class=\\\"form-group col-md-5\\\">\\n                    <label for=\\\"eventcategory\\\">Event category</label>\\n                    <select id=\\\"eventcategory\\\" class=\\\"form-control\\\">\\n                      <option selected>Choose...</option>\\n                      <option>Not Started</option>\\n                      <option>In progress</option>\\n                      <option>completed</option>\\n                      <option>Abandoned</option>\\n                    </select>\\n              </div>\\n              <div class=\\\"col-md-1\\\"></div>\\n            </div>\\n\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"col-md-1\\\"></div>\\n            <div class=\\\"form-group col-md-5\\\">\\n                <label for=\\\"datepicker\\\">Select Date Range</label>\\n                <input id=\\\"datepicker\\\" class=\\\"form-control\\\"\\n                bsDaterangepicker [(ngModel)]=\\\"bsRangeValue\\\" >\\n            </div>\\n            <div class=\\\"form-group col-md-5\\\">\\n                <label for=\\\"eventaction\\\">Recurring Event</label>\\n                <select id=\\\"eventaction\\\" class=\\\"form-control\\\">\\n                  <option selected>No</option>\\n                  <option>Yes</option>\\n                </select>\\n            </div>\\n            <div class=\\\"col-md-1\\\"></div>\\n          </div>\\n\\n\\n        \\n\\n            \\n</form> -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { formatDate, DatePipe } from '@angular/common';\nimport { ApiService } from '../api.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { InventorydataService } from '../inventory-data/inventorydata.service';\n\n@Component({\n    selector:'add-event',\n    templateUrl: './add-event.component.html',\n    styleUrls: ['./add-event.component.css']\n  })\n\n  export class AddEventComponent implements OnInit{\n    ngos_data: any[];\n    ngos = [];\n    pipe:any;\n    eventForm :FormGroup;\n    bsValue = new Date();\n    bsRangeValue: Date[];\n    maxDate = new Date();\n    eventData = new Eventdata();\n    itemList = [];\n    config = {\n      search:true,\n      height: 'auto', \n      placeholder:'Select',\n      noResultsFound: 'No results found!',\n      searchPlaceholder:'Search',\n    }\n    selectedItems = [];\n    settings={};\n    settingsNgos={};\n    eventActions: string[] = ['Not Started','In progress','Completed','Abandoned'];\n    eventCategories: string[] = ['PartnerNGO','Education','Environment','Health','Other'];\n    recurringEventOptions: string[] = ['Yes','No'];\n    mouItems:string[]=[];\n    submitSuc:boolean;\n    message:string;\n    constructor(private formBuilder: FormBuilder,private apiService: ApiService,private route:ActivatedRoute,private inventoryService: InventorydataService,\n      private router: Router) {\n      this.eventForm=this.formBuilder.group({\n        eventName: ['', [\n          Validators.required, Validators.maxLength(50)\n        ]],\n        eventAction: ['Not Started',[\n          Validators.required\n        ]],\n        eventDuration: [null,[Validators.required]],\n        fromTime: [new Date(),[Validators.required]],\n        toTime: [new Date(),[Validators.required]],\n        ngoName:[[],[Validators.required]],\n        eventCategory:['',[Validators.required]],\n        college:['',[Validators.required]],\n        recurringEvent:['No',[Validators.required]],\n        items:[[],[Validators.required]],\n        volunteersReq: ['',[Validators.required]],\n        volunteersReg:'',\n        volunteersOff:'',\n        comments:['',[Validators.required]],\n      });\n      this.submitSuc=false;\n    }\n   \n  \n    ngOnInit(){ \n      this.apiService.getData('partnerngo').subscribe((data:any)=>{\n            this.ngos_data=data;\n            this.ngos=this.ngos_data.map(ngo=>{\n                return {\"id\":data.indexOf(ngo),\"itemName\":ngo.name};\n                \n            });\n      });\n\n      this.apiService.getData('collegeregistration-list').subscribe((data:any)=>{\n        this.mouItems=data.map(item=>{\n          return item[0]+'--'+item[1];\n        })\n      });\n      \n      \n     \n    //   this.itemList = [\n    //     { \"id\": 1, \"itemName\": \"Item1\" },\n    //     { \"id\": 2, \"itemName\": \"Item2\" },\n    //     { \"id\": 3, \"itemName\": \"Item3\" },\n    //     { \"id\": 4, \"itemName\": \"Item4\" },\n    //     { \"id\": 5, \"itemName\": \"Item5\" },\n    //     { \"id\": 6, \"itemName\": \"Item6\" }\n    // ];\n    this.selectedItems = [];\n    this.settings = {\n      singleSelection: false,\n        text: \"Select Items\",\n        selectAllText: 'Select All',\n        unSelectAllText: 'UnSelect All',\n        enableSearchFilter: true\n    };\n\n    this.settingsNgos = {\n      singleSelection: false,\n        text: \"Select PartnerNgos\",\n        selectAllText: 'Select All',\n        unSelectAllText: 'UnSelect All',\n        enableSearchFilter: true\n    };\n\n    if(this.route.snapshot.paramMap && this.route.snapshot.paramMap.get('id')){\n      this.apiService.getData('event',this.route.snapshot.paramMap.get('id')).subscribe((data:any)=>{\n        console.log(data.eventDuration);\n        this.pipe = new DatePipe('en-US');\n        this.eventForm.setValue({\n          eventName:data.eventName,\n          eventAction:data.eventAction,\n          eventDuration:data.eventDuration.map(date=>{\n            return this.pipe.transform(date,'shortDate');\n          }),\n          fromTime: data.eventfromTime,\n          toTime:data.eventtoTime,\n          ngoName:data.ngoName.map(ngo=>({\n            id:data.ngoName.indexOf(ngo),\n            itemName:ngo.name\n          })),\n          eventCategory:data.eventCategory,\n          recurringEvent:data.recurringEvent,\n          items:data.eventItems.map(item=>({\n            id:data.eventItems.indexOf(item),\n            itemName:item\n          })),\n          volunteersReq:data.volunteers,\n          comments:data.comments,\n          college:data.college,\n          volunteersReg:'',\n          volunteersOff:''\n        });\n        console.log(this.eventForm.value.eventDuration);\n      })\n    }\n\n  }\n  \n  log($event){\n    console.log(\"hi\");\n  }\n    \n  checkForMandatoryValidations(eventDataValues) {\n    if (eventDataValues.eventName && eventDataValues.eventAction && eventDataValues.fromTime && eventDataValues.toTime &&\n      eventDataValues.recurringEvent  && eventDataValues.eventCategory && eventDataValues.volunteersReq &&\n      eventDataValues.eventDuration && eventDataValues.items\n      )\n      return true;\n    else\n      return false;\n\n  }\n  onSubmit():void{\n    const eventDataValues = this.eventForm.getRawValue();\n    if (this.checkForMandatoryValidations(eventDataValues)) {\n    console.log(this.eventForm.value);\n    this.eventData.eventName= this.eventForm.value.eventName;\n    this.eventData.eventAction=this.eventForm.value.eventAction;\n    this.eventData.eventfromTime= this.eventForm.value.fromTime;\n    this.eventData.eventtoTime = this.eventForm.value.toTime;\n    this.eventData.ngoName = this.eventForm.value.ngoName.map(ngo=>ngo.ngoName);\n    this.eventData.volunteers = this.eventForm.value.volunteersReq;\n    this.eventData.recurringEvent=this.eventForm.value.recurringEvent;\n    // this.eventData.eventDuration=[];\n    // this.eventData.eventDuration.push(formatDate(this.eventForm.value.eventDuration[0],'fullDate','en-US'));\n    // this.eventData.eventDuration.push(formatDate(this.eventForm.value.eventDuration[1],'fullDate','en-US'));\n    this.eventData.eventCategory=this.eventForm.value.eventCategory;\n    this.eventData.eventDuration=this.eventForm.value.eventDuration;\n    this.eventData.eventItems=this.eventForm.value.items.map(item => item.itemName);\n    this.eventData.comments=this.eventForm.value.comments;\n    this.eventData.college=this.eventForm.value.college;\n    this.eventData.volunteersOffline=this.eventForm.value.volunteersOff;\n    console.log(this.eventData);\n    if(this.route.snapshot.paramMap && this.route.snapshot.paramMap.get('id')){\n    this.apiService.putData(this.eventData,this.route.snapshot.paramMap.get('id'),'event')}\n    else{\n      let response = this.apiService.post(this.eventData,'event').subscribe(response=>{\n        this.message=\"Event Submitted: http://yfsevents.com?id=\" + (response as any).id;\n        this.submitSuc=true;\n        alert('Succesfully saved Event Details');\n          this.router.navigateByUrl(\"/events\");\n      });\n      \n    }\n  }\n  else{\n    alert('Please fill out the mandatory fields');\n  }\n  }\n\n  onCategorySelected(event){\n    this.inventoryService.getItemsByCategory(this.eventForm.value.eventCategory).subscribe((data:any)=>{\n      this.itemList = data.map(item=>{\n        return {'id':data.indexOf(item),\"itemName\":item};\n      })\n    })\n  }\n\n  ngoChanged(event){\n    console.log(this.eventForm.value.ngoName);\n  }\n\n  \n\n}\n\n\nexport class Eventdata {\n  eventName:string;\n  eventAction:string;\n  eventfromTime:string;\n  eventtoTime:string;\n  ngoName:string;\n  eventCategory: string;\n  recurringEvent:string;\n  volunteers:string;\n  eventDuration:string[];\n  eventItems:string[];\n  comments:string;\n  college:string;\n  volunteersOffline:string;\n}","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"page-header well text-center well-sm\\\">\\n      <h3><strong> Events </strong></h3>\\n    </div>\\n</div>\\n<div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\n<div class=\\\"col-md-1\\\">\\n\\n<!-- </div>\\n\\n<div >\\n        <div id=\\\"myGrid\\\"  style=\\\"width: 100%; height: 100%;\\\">\\n<ag-grid-angular \\n    class=\\\"ag-theme-balham\\\"\\n    [rowData]=\\\"rowData\\\" \\n    [columnDefs]=\\\"columnDefs\\\"\\n    [frameworkComponents]=\\\"frameworkComponents\\\">\\n</ag-grid-angular>\\n        </div> -->\\n\\n</div>\\n\\n\\n<div class=\\\"col-md-10\\\">\\n<div id=\\\"myGrid\\\"  style=\\\"width: 100%;\\\">\\n    <ag-grid-angular \\n        class=\\\"ag-theme-balham\\\"\\n        [rowData]=\\\"rowData\\\" \\n        [columnDefs]=\\\"columnDefs\\\"\\n        [frameworkComponents]=\\\"frameworkComponents\\\">\\n    </ag-grid-angular>\\n</div>\\n\\n</div>\\n<div class=\\\"col-md-1\\\">\\n    \\n</div>\\n\\n</div>\\n\\n<div class=\\\"row\\\" style=\\\"margin-top:10px\\\">\\n    <div class=\\\"col-md-1\\\"></div>\\n    <div class=\\\"col-md-10\\\">\\n        <div style=\\\"text-align:right\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"router.navigate(['/addevent'])\\\">\\n            Add Event\\n        </button>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Eventdata } from './add-event.component';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { formatDate, DatePipe } from '@angular/common';\nimport { ButtonRendererComponent } from './renderer/button-renderer.component';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormModalComponent } from '../form-modal/form-modal.component';\n@Component({\n  selector:'event-list',\n  templateUrl: './event-list.component.html'\n})\n\n\nexport class EventListComponent implements OnInit{\n  pipe:any;\n  rowData :any;\n  private paginationPageSize;\n\tcolumnDefs = [\n        {headerName: 'EventId', field: 'id',filter:true },\n        {headerName: 'Action', field: 'eventAction',filter:true},\n        {headerName: 'Event Name', field: 'eventName',filter:true},\n        {headerName: 'Event Category', field: 'eventCategory',filter:true},\n        {headerName: 'Partner NGO', field: 'ngoName',filter:true},\n        {headerName: 'Event Start Date', field: 'event_start_date',filter:true},\n        {headerName: 'Event End Date', field: 'event_end_date',filter:true},\n        {\n          headerName: 'Email',\n          cellRenderer: 'buttonRenderer',\n          cellRendererParams: {\n            onClick: this.onBtnClick1.bind(this),\n            label: 'Send Email'\n          }\n        },\n        {\n          headerName: 'Edit',\n          cellRenderer: 'buttonRenderer',\n          cellRendererParams: {\n            onClick: this.onSearch.bind(this),\n            label: 'Edit'\n          }\n        },\n        {\n          headerName: 'Volunteers Accepted',\n          cellRenderer: 'buttonRenderer',\n          cellRendererParams: {\n            onClick: this.onBtnClick2.bind(this),\n            label: 'Accepted Count'\n          }\n        },\n\n    ];\n\n    eventData :any[];\n    frameworkComponents:any;\n    constructor(private apiService: ApiService,private router:Router,private modalService: NgbModal){\n      this.frameworkComponents = {\n        buttonRenderer: ButtonRendererComponent,\n      }\n      this.paginationPageSize=10;\n    }\n\n\tngOnInit():void{\n   this.pipe = new DatePipe('en-US');\n   this.apiService.getData('events').subscribe((data:any)=>{\n        this.eventData=data;\n        console.log(data);\n        this.rowData = this.eventData.map(event=>({\n          id:event.id,\n          eventAction:event.eventAction,\n          eventName:event.eventName,\n          eventCategory:event.eventCategory,\n          ngoName:event.ngoName,\n          event_start_date:this.pipe.transform(event.eventDuration[0],'shortDate'),\n          event_end_date:this.pipe.transform(event.eventDuration[1],'shortDate')\n        }));\n      },( err:HttpErrorResponse)=>{\n        console.log(err.message);\n     });\n    }\n    \n  onSearch(event:any){\n    this.router.navigate(['addevent',{id:event.rowData.id}]);\n  }\n  onBtnClick1(event:any){\n    console.log(\"grid/volunteer\",event.rowData.id);\n    this.router.navigate(['grid/volunteer',{id:event.rowData.id}]);\n  }\n  onBtnClick2(event:any){\n    this.openFormModal();\n  }\n\n  \n  openFormModal() {\n    const modalRef = this.modalService.open(FormModalComponent);\n    console.log(\"ddff\");\n    modalRef.result.then((result) => {\n      console.log(result);\n    }).catch((error) => {\n      console.log(error);\n    });\n  }\n  \n}\n\n\n\n","\n\nimport { Component } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererParams, IAfterGuiAttachedParams } from 'ag-grid-community';\n\n@Component({\n  selector: 'app-button-renderer',\n  template: `\n    <button type=\"button\" (click)=\"onClick($event)\">{{label}}</button>\n    `\n})\n\nexport class ButtonRendererComponent implements ICellRendererAngularComp {\n\n  params;\n  label: string;\n\n  agInit(params): void {\n    this.params = params;\n    this.label = this.params.label || null;\n  }\n\n  refresh(params?: any): boolean {\n    return true;\n  }\n\n  onClick($event) {\n    if (this.params.onClick instanceof Function) {\n      // put anything into params u want pass into parents component\n      const params = {\n        event: $event,\n        rowData: this.params.node.data\n        // ...something\n      }\n      this.params.onClick(params);\n\n    }\n  }\n}","module.exports = \".footer{\\n    background-color: #2d2d30;\\n    color: #d5d5d5 !important;\\n    letter-spacing: 4px;\\n    opacity: 0.9;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLHlCQUF5QjtJQUN6QixtQkFBbUI7SUFDbkIsWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb290ZXJ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJkMmQzMDtcbiAgICBjb2xvcjogI2Q1ZDVkNSAhaW1wb3J0YW50O1xuICAgIGxldHRlci1zcGFjaW5nOiA0cHg7XG4gICAgb3BhY2l0eTogMC45O1xufSJdfQ== */\"","module.exports = \"<div class=\\\"text-center footer\\\">\\n    <!--ToDo: Add go to Top Logic on Button Click\\n    >a class=\\\"up-arrow\\\" href=\\\"\\\" data-toggle=\\\"tooltip\\\" title=\\\"TO TOP\\\">\\n      <span class=\\\"glyphicon glyphicon-chevron-up\\\"></span>\\n    </a><br><br-->\\n    <!--TODO: Add below?-->\\n    <p>Made by <strong></strong></p>\\n    </div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tbW9kYWwvZm9ybS1tb2RhbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"modal-header\\\" id=\\\"abc\\\">\\n    <h4 class=\\\"modal-title\\\">Volunteers who have accepte the invitation</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\"\\n     (click)=\\\"activeModal.dismiss('Cross click')\\\">\\n    </button>\\n  </div>\\n  <div class=\\\"container-fluid\\\">\\n      <div class=\\\"page-header well text-center well-sm\\\">\\n        <h3><strong> Volunteer </strong></h3>\\n      </div>\\n      <div  #myGrid  style=\\\"width: 100%; height: 600px;\\\">\\n        <ag-grid-angular style=\\\"height: 100%;\\\"\\n          class=\\\"ag-theme-balham\\\"\\n          [rowData]=\\\"data\\\"\\n          [columnDefs]=\\\"headers\\\"\\n          (rowClicked)=\\\"onRowCilcked($event)\\\"\\n          (gridReady)=\\\"onGridReady($event)\\\"\\n          [rowSelection]=\\\"rowSelection\\\"\\n          [gridOptions]=\\\"gridOptions\\\"\\n          >\\n        </ag-grid-angular>\\n      </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button (click)=\\\"activeModal.dismiss('Close clicked')\\\">\\n      Close Clicked\\n    </button>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { GridOptions } from 'ag-grid-community';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-form-modal',\n  templateUrl: './form-modal.component.html',\n  styleUrls: ['./form-modal.component.css']\n})\nexport class FormModalComponent implements OnInit {\n\n  private data:any=[];\n public  selectedEmails:any=\"\";\n   private headers=[\n     {headerName: 'First Name', field: 'firstName',filter:true, sortable: true,headerCheckboxSelection: true,\n     headerCheckboxSelectionFilteredOnly: true,\n     checkboxSelection: true },\n     {headerName: 'Last Name', field: 'lastName',filter:true},\n     {headerName: 'Phone Prefix', field: 'phonePrefix',filter:true},\n     {headerName: 'Phone Number', field: 'phoneNumber',filter:true},\n     {headerName: 'Phone Prefix', field: 'alternatePhonePrefix',filter:true},\n     {headerName: 'Alternate Phone Number', field: 'alternatePhoneNumber',filter:true},\n     {headerName: 'EmailId', field: 'email',filter:true},\n     {headerName: 'EmailId2', field: 'alternateEmail',filter:true},\n     {headerName: 'Locality', field: 'locality',filter:true},\n     {headerName: 'City', field: 'city',filter:true},\n     {headerName: 'State', field: 'state',filter:true},\n     {headerName: 'PinCode', field: 'pincode',filter:true},\n     {headerName: 'Interested Areas', field: 'interestedAreas'}\n   ];\n   private myGrid: any;\n   private gridApi: any;\n   private gridColumnApi: any;\n   private rowSelection :any;\n   public gridOptions: GridOptions;\n  interestedList:any[]=new Array();\n   constructor(private apiService:ApiService,\n               private router:Router,public activeModal: NgbActiveModal) { }\n   ngOnInit() {\n    this.rowSelection = \"multiple\";\n    this.apiService.getData('volunteerAccepted','1').subscribe(response=>{\n          let result:any=JSON.parse(JSON.stringify(response));\n          Array.from(result).forEach(element => {\n            let interestedAreas1=JSON.parse(JSON.stringify(element)).interestedAreas;\n            while(this.interestedList.length)\n            {\n              this.interestedList.pop();\n            }\n            for(var val of interestedAreas1)\n                {\n                console.log(\"hey:\"+val[\"interestedArea\"]);\n                this.interestedList.push(val[\"interestedArea\"]);\n                }\n            Object.assign(element, {interestedAreas: this.interestedList.toString()\n            });\n          });\n          console.log(response);\n          console.log(this.data);\n          this.data=result;\n          \n          \n        });\n    }\n    onGridReady(params) {\n      // this.gridOptions.columnDefs=this.headers;\n      // console.log(\"You are here\");\n      // this.gridApi = params.api;\n      // this.gridColumnApi = params.columnApi;\n    }\n\n   onRowCilcked(event){\n     console.log(event.rowIndex);\n     this.router.navigateByUrl(\"/volunteer/edit/\"+((event.rowIndex)+1));\n      // console.log(this.printAllDisplayedRows());\n     //  this.onBtForEachNodeAfterFilterAndSort();\n     }\n\n\n\n \n \n  closeModal() {\n    this.activeModal.close('Modal Closed');\n  }\n\n}\n","module.exports = \".nav-tabs li a {\\n    color: #777;\\n  }\\n  \\n  .navbar {\\n    font-family: Montserrat, sans-serif;\\n    margin-bottom: 0;\\n    border: 0;\\n    font-size: 15px !important;\\n    letter-spacing: 4px;\\n    opacity: 0.9;\\n  }\\n  \\n  .navbar li a, .navbar .navbar-brand { \\n    color: #d5d5d5 !important;\\n  }\\n  \\n  .navbar-nav li a:hover {\\n    color: #fff !important;\\n  }\\n  \\n  .navbar-nav li.active a {\\n    color: #fff !important;\\n    background-color: #2b2c29 !important;\\n  }\\n  \\n  .navbar-default .navbar-toggle {\\n    border-color: transparent;\\n  }\\n  \\n  .open .dropdown-toggle {\\n    color: #fff;\\n  }\\n  \\n  .dropdown-menu li a {\\n    color: #000 !important;\\n  }\\n  \\n  .dropdown-menu li a:hover {\\n    background-color: red !important;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztFQUNiOztFQUVBO0lBQ0UsbUNBQW1DO0lBQ25DLGdCQUFnQjtJQUNoQixTQUFTO0lBQ1QsMEJBQTBCO0lBQzFCLG1CQUFtQjtJQUNuQixZQUFZO0VBQ2Q7O0VBQ0E7SUFDRSx5QkFBeUI7RUFDM0I7O0VBQ0E7SUFDRSxzQkFBc0I7RUFDeEI7O0VBQ0E7SUFDRSxzQkFBc0I7SUFDdEIsb0NBQW9DO0VBQ3RDOztFQUNBO0lBQ0UseUJBQXlCO0VBQzNCOztFQUNBO0lBQ0UsV0FBVztFQUNiOztFQUNBO0lBQ0Usc0JBQXNCO0VBQ3hCOztFQUNBO0lBQ0UsZ0NBQWdDO0VBQ2xDIiwiZmlsZSI6InNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdi10YWJzIGxpIGEge1xuICAgIGNvbG9yOiAjNzc3O1xuICB9XG4gIFxuICAubmF2YmFyIHtcbiAgICBmb250LWZhbWlseTogTW9udHNlcnJhdCwgc2Fucy1zZXJpZjtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIGJvcmRlcjogMDtcbiAgICBmb250LXNpemU6IDE1cHggIWltcG9ydGFudDtcbiAgICBsZXR0ZXItc3BhY2luZzogNHB4O1xuICAgIG9wYWNpdHk6IDAuOTtcbiAgfVxuICAubmF2YmFyIGxpIGEsIC5uYXZiYXIgLm5hdmJhci1icmFuZCB7IFxuICAgIGNvbG9yOiAjZDVkNWQ1ICFpbXBvcnRhbnQ7XG4gIH1cbiAgLm5hdmJhci1uYXYgbGkgYTpob3ZlciB7XG4gICAgY29sb3I6ICNmZmYgIWltcG9ydGFudDtcbiAgfVxuICAubmF2YmFyLW5hdiBsaS5hY3RpdmUgYSB7XG4gICAgY29sb3I6ICNmZmYgIWltcG9ydGFudDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmIyYzI5ICFpbXBvcnRhbnQ7XG4gIH1cbiAgLm5hdmJhci1kZWZhdWx0IC5uYXZiYXItdG9nZ2xlIHtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICB9XG4gIC5vcGVuIC5kcm9wZG93bi10b2dnbGUge1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG4gIC5kcm9wZG93bi1tZW51IGxpIGEge1xuICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG4gIH1cbiAgLmRyb3Bkb3duLW1lbnUgbGkgYTpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkICFpbXBvcnRhbnQ7XG4gIH1cbiAgIl19 */\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludmVudG9yeS1kYXRhL2ludmVudG9yeS1kYXRhLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"page-header well well-sm\\\">\\n    <h3><strong> Inventory Data</strong></h3>\\n  </div>\\n  <form [formGroup]=\\\"inventoryData\\\">\\n    <div class=\\\"panel panel-info\\\">\\n      <div class=\\\"panel-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group required\\\">\\n              <label class=\\\"control-label\\\">Item Name</label>\\n              <input type=\\\"text\\\" formControlName=\\\"itemName\\\" class=\\\"form-control well well-sm\\\" required>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group required\\\">\\n              <label class=\\\"control-label\\\">Event Category</label>\\n              <div>\\n                <select formControlName=\\\"eventCategory\\\" class=\\\"form-control well well-sm\\\" required>\\n                  <option *ngFor=\\\"let evCat of eventCategoryList\\\" [(ngValue)]=\\\"evCat.value\\\">{{evCat.value}}</option>\\n                </select>          \\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Comments</label>\\n              <textarea type=\\\"text\\\" formControlName=\\\"comments\\\" class=\\\"form-control well well-sm\\\"></textarea>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n  <div class=\\\"text-center\\\">\\n    <button class=\\\"btn btn-primary btn-sx\\\" (click)=\\\"onSubmit()\\\">Save</button>\\n  </div>\\n  <div class=\\\"spinner-border\\\" role=\\\"status\\\" *ngIf=\\\"loading\\\">\\n    <span class=\\\"sr-only\\\">Loading...</span>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, PLATFORM_ID, Injector, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { InventorydataService } from './inventorydata.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-inventory-data',\n  templateUrl: './inventory-data.component.html',\n  styleUrls: ['./inventory-data.component.css']\n})\nexport class InventoryDataComponent implements OnInit {\n  inventoryData: FormGroup;\n  eventCategoryList: any[];\n  selected: any;\n  loading: boolean = false;\n\n  constructor(private formBuilder: FormBuilder, private inventoryService: InventorydataService,\n    private route: ActivatedRoute, private router: Router) {\n\n\n  }\n\n  ngOnInit() {\n\n    this.inventoryData = this.formBuilder.group({\n      itemName: ['', [\n        Validators.required, Validators.maxLength(50)\n      ]],\n      eventCategory: [''],\n      comments: ['', [\n        Validators.required, Validators.maxLength(200)\n      ]],\n\n    });\n\n    this.inventoryService.getEventCategoryList().subscribe((data: any) => {\n      this.eventCategoryList = data;\n    }, (err: HttpErrorResponse) => {\n      console.log(err.message);\n    });\n\n    if (this.route.snapshot.paramMap && this.route.snapshot.paramMap.get('id')) {\n      this.inventoryService.getInventoryDataById(this.route.snapshot.paramMap.get('id')).subscribe((data: any) => {\n        this.inventoryData.setValue({\n        \n          itemName: data.itemName,\n          eventCategory: data.eventCategory,\n          comments: data.comments\n        })\n      }, (err: HttpErrorResponse) => {\n        console.log(err.message)\n      })\n    }\n  }\n\n  checkForMandatoryValidations(inventoryData) {\n    if (inventoryData.itemName && inventoryData.eventCategory)\n      return true;\n    else\n      return false;\n\n  }\n\n  onSubmit() {\n    const inventoryData = this.inventoryData.getRawValue();\n    if (this.checkForMandatoryValidations(inventoryData)) {\n      this.loading = true;\n\n      if (this.route.snapshot.paramMap && this.route.snapshot.paramMap.get('id')) {\n        this.inventoryService.updateInventoryDataById(inventoryData, this.route.snapshot.paramMap.get('id')).subscribe((data: any) => {\n          this.loading = false;\n          console.log('response', data);\n          alert('Succesfully updated Inventory Data');\n          this.router.navigateByUrl(\"/inventorylist\");\n        }, e => {\n          this.loading = false;\n          console.log(e);\n        });\n\n      }\n      else {\n        this.inventoryService.saveInventoryData(inventoryData).subscribe((data: any) => {\n          this.loading = false;\n          console.log('response', data);\n          alert('Succesfully saved Inventory Data');\n          this.router.navigateByUrl(\"/inventorylist\");\n        }, e => {\n          this.loading = false;\n          console.log(e);\n        });\n      }\n    }\n    else {\n      alert('Please fill out the mandatory fields');\n    }\n\n  }\n\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludmVudG9yeS1kYXRhL2ludmVudG9yeS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n<div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\n  <div class=\\\"col-md-1\\\">\\n  \\n  </div>\\n  \\n  <div>\\n          <div id=\\\"myGrid\\\"  style=\\\"width: 100%; height: 115px;\\\">\\n  <ag-grid-angular style=\\\"height: 100%;\\\"\\n      class=\\\"ag-theme-balham\\\"\\n      [rowData]=\\\"rowData\\\" \\n      [columnDefs]=\\\"columnDefs\\\"\\n      (rowClicked)=\\\"onSearch($event)\\\"\\n      >\\n  </ag-grid-angular>\\n  </div>\\n  </div>\\n  <div class=\\\"col-md-1\\\">\\n      \\n  </div>\\n  \\n  </div>\\n\\n  <div class=\\\"row\\\" style=\\\"margin-top:10px\\\">\\n      <div class=\\\"col-md-1\\\"></div>\\n      <div class=\\\"col-md-10\\\">\\n          <div style=\\\"text-align:right\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"router.navigate(['/inventorydata'])\\\">\\n              Add Inventory\\n          </button>\\n          </div>\\n      </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { InventorydataService } from './inventorydata.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-inventory-list',\n  templateUrl: './inventory-list.component.html',\n  styleUrls: ['./inventory-list.component.css']\n})\nexport class InventoryListComponent implements OnInit {\n  \n  columnDefs = [\n    {headerName: 'No', field: 'id',filter:true},\n    {headerName: 'Item Name', field: 'itemName',filter:true },\n    {headerName: 'Event Category', field: 'eventCategory',filter:true},\n    {headerName: 'Comments', field: 'comments',filter:true} \n];\n\nrowData:any[];\n\n  constructor(private inventoryService: InventorydataService,private router:Router) { }\n\n  ngOnInit() {\n    this.inventoryService.getInventoryData().subscribe((data:any) =>{\n      this.rowData= data;\n    },(err:HttpErrorResponse) =>{\n       console.log(err.message)\n    })\n  }\n\n  onSearch(event:any){\n    this.router.navigate(['inventorydata','edit',{id:event.data.id}]);\n   \n    \n\n  }\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventorydataService {\n\n  constructor(private http:HttpClient) { }\n\n  saveInventoryData(data:any){\n    return this.http.post(`${environment.serverHost}/inventorydata/list`,data);\n  }\n\n  getInventoryData(){\n    return this.http.get(`${environment.serverHost}/inventorydata/list`);\n  }\n\n  getEventCategoryList(){\n    return this.http.get(`${environment.serverHost}/inventorydata/eventcategory`);\n  }\n  \n  getInventoryDataById(id:any){\n    return this.http.get(`${environment.serverHost}/inventorydata/list/${id}`)\n  }\n  \n  updateInventoryDataById(data:any,id:any){\n    return this.http.put(`${environment.serverHost}/inventorydata/list/${id}`,data)\n  }\n\n  getItemsByCategory(data:any){\n    return this.http.get(\"/inventorydata/items/\"+data);\n  }\n  \n \n   \n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"card card-container\\\">\\n\\n<div class=\\\"row\\\"><div class=\\\"col-md-4\\\"></div><div class=\\\"col-md-4\\\">\\n    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.form.valid && login()\\\" name=\\\"form-signin\\\" novalidate>\\n      <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">{{errorMessage}}</div>\\n      <span class=\\\"reauth-email\\\" id=\\\"reauth-email\\\"></span>\\n      <div [ngClass]=\\\"{ 'has-error': f.submitted && !username.valid }\\\" class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input #username=\\\"ngModel\\\" [(ngModel)]=\\\"user.username\\\" class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\"\\n               required type=\\\"text\\\"/>\\n        <!-- <div *ngIf=\\\"f.submitted && !username.valid\\\" class=\\\"help-block\\\">an valid email is required</div>-->\\n      </div>\\n      <div [ngClass]=\\\"{ 'has-error': f.submitted && !password.valid }\\\" class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input #password=\\\"ngModel\\\" [(ngModel)]=\\\"user.password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\"\\n               required type=\\\"password\\\"/>\\n        <div *ngIf=\\\"f.submitted && !password.valid\\\" class=\\\"help-block\\\">Password is required</div>\\n      </div>\\n      <div class=\\\"row\\\"><a  a [routerLink]=\\\"['/reset']\\\" class=\\\"pull-right\\\">Reset Password</a></div>\\n\\n      <div class=\\\"row\\\"><div class=\\\"col-md-4\\\"></div>\\n    <div class=\\\"col-md-4\\\">  <button class=\\\"btn btn-lg btn-primary btn-block btn-signin\\\" type=\\\"submit\\\">Sign in</button></div>\\n        <div class=\\\"col-md-4\\\"></div> </div><!--<a [routerLink]=\\\"['/register']\\\" class=\\\"btn btn-link\\\">Create new Account!</a>-->\\n    </form></div> <div class=\\\"col-md-4\\\"></div></div><!-- /form -->\\n\\n  </div><!-- /card-container -->\\n</div><!-- /container -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../app.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent {\n\n  user = {username: '', password: ''};\n\n  constructor(private app: AppService, private http: HttpClient, private router: Router) {\n  }\n\n  login() {\n    this.app.authenticate(this.user, () => {\n        this.router.navigateByUrl('/events');\n    });\n    return false;\n  }\n\n}\n","export class User {\n  id:string;\nusername: string = \"\";\npassword: string = \"\";\nfullName: string = \"\";\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhcnRuZXItbmdvLWdyaWQvcGFydG5lci1uZ28tZ3JpZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"page-header well text-center well-sm\\\">\\n    <h3><strong> Partner NGO </strong></h3>\\n  </div>\\n  <div  #myGrid  style=\\\"width: 100%; height: 100%;\\\">\\n    <ag-grid-angular style=\\\"height: 100%;\\\"\\n      class=\\\"ag-theme-balham\\\" \\n      [rowData]=\\\"data\\\" \\n      [columnDefs]=\\\"headers\\\"\\n      (rowClicked)=\\\"onRowCilcked($event)\\\"\\n    >\\n      <!-- \\n      (rowDoubleClicked)=\\\"onRowDoubleCilcked(event)\\\"\\n      (cellDoubleClicked)=\\\"onCellDoubleClicked($event)\\\"-->\\n    </ag-grid-angular>\\n  </div>\\n  <div class=\\\"col-md-10\\\">\\n      <div style=\\\"text-align:right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"router.navigate(['/partnerngo'])\\\">\\n          Add partner NGO\\n      </button>\\n      </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\nimport {ngDevModeResetPerfCounters}from '@angular/core/src/render3/ng_dev_mode';\nimport { JsonPipe}from '@angular/common';\n\n@Component({\n  selector: 'app-partner-ngo-grid',\n  templateUrl: './partner-ngo-grid.component.html',\n  styleUrls: ['./partner-ngo-grid.component.css']\n})\nexport class PartnerNgoGridComponent implements OnInit {\n\n  private data:any=[];\n  private headers=[\n    {headerName: 'Partner NGO', field: 'name',filter:true, sortable: true},\n    {headerName: 'Description', field: 'description',filter:true},\n    {headerName: 'Branch', field: 'branch',filter:true},\n    {headerName: 'Registration Number', field: 'registrationNumber',filter:true},\n    {headerName: 'Address Line 1', field: 'addressLine1',filter:true},\n    {headerName: 'Address Line 2', field: 'addressLine2',filter:true},\n    {headerName: 'City', field: 'city',filter:true},\n    {headerName: 'State', field: 'state',filter:true},\n    {headerName: 'Pincode', field: 'pincode',filter:true},\n\n    {headerName: 'Authorized Person Name', field: 'authorizedPersonName'},\n    {headerName: 'Authorized Person Contact', field: 'authorizedPersonContact'},\n    {headerName: 'Alternate Contact Number', field: 'contact2'},\n    {headerName: 'Email ID', field: 'email1'},\n    {headerName: 'Alternate Email ID', field: 'email2'},\n\n    {headerName: 'Authorized Person Name (2)', field: 'authorizedPersonName1'},\n    {headerName: 'Authorized Person Contact (2)', field: 'authorizedPersonContact1'},\n    {headerName: 'Alternate Contact Number (2)', field: 'contact21'},\n    {headerName: 'Email ID (2)', field: 'email11'},\n    {headerName: 'Alternate Email ID (2)', field: 'email21'},\n    \n    {headerName: 'Authorized Person Name (3)', field: 'authorizedPersonName2'},\n    {headerName: 'Authorized Person Contact (3)', field: 'authorizedPersonContact2'},\n    {headerName: 'Alternate Contact Number (3)', field: 'contact22'},\n    {headerName: 'Email ID (3)', field: 'email12'},\n    {headerName: 'Alternate Email ID (3)', field: 'email22'},\n\n    {headerName: 'Authorized Person Name (4)', field: 'authorizedPersonName3'},\n    {headerName: 'Authorized Person Contact (4)', field: 'authorizedPersonContact3'},\n    {headerName: 'Alternate Contact Number (4)', field: 'contact23'},\n    {headerName: 'Email ID (4)', field: 'email13'},\n    {headerName: 'Alternate Email ID (4)', field: 'email23'},\n\n    {headerName: 'Authorized Person Name (5)', field: 'authorizedPersonName4'},\n    {headerName: 'Authorized Person Contact (5)', field: 'authorizedPersonContact4'},\n    {headerName: 'Alternate Contact Number (5)', field: 'contact24'},\n    {headerName: 'Email ID (5)', field: 'email14'},\n    {headerName: 'Alternate Email ID (5)', field: 'email24'},\n\n\n  ];\n// {headerName: 'State', field: 'state',filter:true},\n  private myGrid: any;\n  private gridApi: any;\n\n  constructor(private apiService:ApiService,\n              private router:Router) { }\n\n  ngOnInit() {\n    // this.data=[\n    //   {name:'n1', description: 'd1', city: 'c1', state: 's1', authorizedPerson: [\n    //     {name: 'a1'},{name:'a2'}\n    //   ]},\n    //   {name:'n2', description: 'd2', city: 'c2', state: 's2', authorizedPerson: [\n    //     {name: 'b1'},{name:'b2'},{name:'b3'},{name:'b4'},{name:'b5'}\n    //   ]}\n    // ];\n    this.apiService.getData('partnerngo').subscribe(response=>{\n      let result:any=JSON.parse(JSON.stringify(response));\n      Array.from(result).forEach(element => {\n        let authorizedPersons=JSON.parse(JSON.stringify(element)).authorizedPerson;\n        if(authorizedPersons[0]!=null){\n        Object.assign(element, {authorizedPersonName: authorizedPersons[0].name});\n        Object.assign(element, {authorizedPersonContact: authorizedPersons[0].contact1});\n        Object.assign(element, {contact2: authorizedPersons[0].contact2});\n        Object.assign(element, {email1: authorizedPersons[0].email1});\n        Object.assign(element, {email2: authorizedPersons[0].email2});\n        }\n        \n        if(authorizedPersons[1]!=null){\n          Object.assign(element, {authorizedPersonName1: authorizedPersons[1].name});\n          Object.assign(element, {authorizedPersonContact1: authorizedPersons[1].contact1});\n          Object.assign(element, {contact21: authorizedPersons[1].contact2});\n          Object.assign(element, {email11: authorizedPersons[1].email1});\n          Object.assign(element, {email21: authorizedPersons[1].email2});\n        }\n\n        if(authorizedPersons[2]!=null){\n          Object.assign(element, {authorizedPersonName2: authorizedPersons[2].name});\n          Object.assign(element, {authorizedPersonContact2: authorizedPersons[2].contact1});\n          Object.assign(element, {contact22: authorizedPersons[2].contact2});\n          Object.assign(element, {email12: authorizedPersons[2].email1});\n          Object.assign(element, {email22: authorizedPersons[2].email2});\n        }\n\n        if(authorizedPersons[3]!=null){\n        Object.assign(element, {authorizedPersonName3: authorizedPersons[3].name});\n        Object.assign(element, {authorizedPersonContact3: authorizedPersons[3].contact1});\n        Object.assign(element, {contact23: authorizedPersons[3].contact2});\n        Object.assign(element, {email13: authorizedPersons[3].email1});\n        Object.assign(element, {email23: authorizedPersons[3].email2});\n        }\n\n        if(authorizedPersons[4]!=null){\n        Object.assign(element, {authorizedPersonName4: authorizedPersons[4].name});\n        Object.assign(element, {authorizedPersonContact4: authorizedPersons[4].contact1});\n        Object.assign(element, {contact24: authorizedPersons[4].contact2});\n        Object.assign(element, {email14: authorizedPersons[4].email1});\n        Object.assign(element, {email24: authorizedPersons[4].email2});\n        }\n\n      });\n      console.log(response);\n      console.log(this.data);\n      this.data=result;\n    });\n  }\n\n  onRowCilcked(event){\n    console.log(event.rowIndex);\n    this.router.navigateByUrl(\"/partnerngo/edit/\"+((event.rowIndex)+1));\n  }\n\n  // onRowDoubleCilcked(event){}\n\n  //onCellDoubleClicked(event){}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhcnRuZXItbmdvL3BhcnRuZXItbmdvLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!doctype html>\\n<html lang=\\\"en\\\">\\n  <head>\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1 user-scalable=no\\\">\\n  </head>\\n\\n  <body>\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"page-header well well-sm\\\">\\n        <h3><strong> Partner NGO Registration</strong></h3>\\n      </div>\\n      \\n      <form [formGroup]=\\\"myForm\\\">\\n        <!-- ToDo: Decrease space between the table rows-->\\n        <div class=\\\"panel panel-info\\\">\\n          <div class=\\\"panel-heading\\\">\\n            <label>Basic Information</label>\\n          </div>\\n          <div class=\\\"panel-body\\\">\\n            <div formGroupName=\\\"basicInfo\\\">\\n              <!-- <table class=\\\"form-table\\\"> -->\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group required\\\">\\n                      <label class=\\\"control-label\\\">Name</label>\\n                      <input type=\\\"text\\\" formControlName = \\\"name\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Description</label>\\n                      <input type=\\\"text\\\" formControlName = \\\"description\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Branch</label>\\n                      <input type=\\\"text\\\" formControlName = \\\"branch\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Registration Number</label>\\n                      <input type=\\\"text\\\" formControlName = \\\"registrationNumber\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n              <!-- </table>               -->\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"panel panel-info\\\">\\n          <div class=\\\"panel-heading\\\">\\n            <label>Address</label>\\n          </div>\\n          <div class=\\\"panel-body\\\">\\n            <div formGroupName=\\\"address\\\">\\n              <!-- <table class=\\\"form-table\\\"> -->\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group required\\\">\\n                      <label class=\\\"control-label\\\">Address Line 1</label>\\n                      <input type=\\\"text\\\" formControlName = \\\"addressLine1\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Address Line 2</label>\\n                      <input type=\\\"text\\\" formControlName = \\\"addressLine2\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group required\\\">\\n                      <label class=\\\"control-label\\\">City</label>\\n                      <input type=\\\"text\\\" formControlName = \\\"city\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group required\\\">\\n                      <label class=\\\"control-label\\\">State</label>\\n                      <input type=\\\"text\\\" formControlName = \\\"state\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Pincode</label>\\n                      <input type=\\\"text\\\" formControlName = \\\"pincode\\\" class=\\\"form-control well well-sm\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6 offset-md-3\\\">\\n                  </div>\\n                </div>\\n              <!-- </table>               -->\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"panel panel-info\\\">\\n          <div class=\\\"panel-heading\\\">\\n            <label>Authorised Persons</label>\\n          </div>\\n          <div class=\\\"panel-body\\\">\\n            <ul class=\\\"nav nav-tabs\\\" active=\\\"selectedTab\\\">\\n              <li class=\\\"nav active\\\" *ngIf=\\\"numberOfAuthorizedPersons>0\\\"><a href=\\\"#tab0\\\" data-toggle=\\\"tab\\\" (click)=\\\"activateTab(1)\\\">Person 1</a></li>\\n              <li class=\\\"nav\\\" *ngFor=\\\"let num of getArray(numberOfAuthorizedPersons-1); let i=index;\\\"><a href=\\\"#tab{{i+1}}\\\" data-toggle=\\\"tab\\\" (click)=\\\"activateTab(i+2)\\\">Person {{i+2}}</a></li>\\n              <!--li class=\\\"nav active\\\" *ngIf=\\\"numberOfAuthorizedPersons>0\\\"><a href=\\\"#tab{{numberOfAuthorizedPersons-1}}\\\" data-toggle=\\\"tab\\\" (click)=\\\"activateTab(numberOfAuthorizedPersons)\\\">Person {{numberOfAuthorizedPersons}}</a></li-->\\n              <!--li class=\\\"nav active\\\" *ngIf=\\\"numberOfAuthorizedPersons>0\\\"><a href=\\\"#tab{{numberOfAuthorizedPersons-1}}\\\" data-toggle=\\\"tab\\\" (click)=\\\"selectedTab=i\\\">Person {{numberOfAuthorizedPersons}}</a></li-->\\n              <div class=\\\"pull-right\\\">\\n                <button class=\\\"btn btn-sm btn-primary btn-space right\\\" (click)=\\\"addAuthorisedPerson()\\\" [disabled]=\\\"isMaxLimitReached(5)\\\">Add Person</button>\\n                <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"removeAuthorisedPerson(selectedTab)\\\" confirm=\\\"Are you sure you want to delete?\\\" confirm-ok=\\\"Yes\\\" confirm-cancel=\\\"No\\\" [disabled]=\\\"isMinLimitReached()\\\">Remove Person</button>\\n              </div>\\n              <!--ToDo: Setup dynamic Tab Creation and Add Delete button-->\\n            </ul>\\n\\n            <div class=\\\"tab-content\\\">\\n              <div formArrayName=\\\"authorizedPersons\\\">\\n                <!--ToDo: NgFor not working: Check-->\\n                <div class=\\\"tab-pane\\\" *ngFor=\\\"let person of myForm.get('authorizedPersons').controls;let i=index\\\" formGroupName=\\\"{{i}}\\\" id=\\\"tab{{i}}\\\">\\n                  <!-- <table class=\\\"form-table\\\"> -->\\n                  <div *ngIf=\\\"selectedTab==i\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6 offset-md-3\\\">\\n                        <div class=\\\"form-group required\\\">\\n                          <label class=\\\"control-label\\\">Name</label>\\n                          <input type=\\\"text\\\" formControlName = \\\"name\\\" class=\\\"form-control well well-sm\\\">\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-md-6 offset-md-3\\\">\\n                      </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6 offset-md-3\\\">\\n                        <div class=\\\"form-group required\\\">\\n                          <label class=\\\"control-label\\\">Contact Number</label>\\n                          <input type=\\\"text\\\" formControlName = \\\"contact1\\\" class=\\\"form-control well well-sm\\\">\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-md-6 offset-md-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"control-label\\\">Alternate Contact Number</label>\\n                          <input type=\\\"text\\\" formControlName = \\\"contact2\\\" class=\\\"form-control well well-sm\\\">\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6 offset-md-3\\\">\\n                          <div class=\\\"form-group\\\">\\n                            <label class=\\\"control-label\\\">Email ID</label>\\n                            <input type=\\\"text\\\" formControlName = \\\"email1\\\" class=\\\"form-control well well-sm\\\">\\n                          </div>\\n                        </div>\\n\\n                      </div>\\n                    </div>\\n                  <!-- </table>               -->\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </form>\\n      <!--<span>{{myForm.value | json}}</span>-->\\n      <div class=\\\"pull-right\\\">\\n        <button (click)=\\\"onSubmit()\\\" *ngIf=\\\"!mode\\\" class=\\\"btn btn-primary btn-space\\\">Register</button>\\n        <button (click)=\\\"onEdit()\\\" *ngIf=\\\"mode=='view'\\\" class=\\\"btn btn-primary btn-space\\\">Edit</button>\\n        <button (click)=\\\"onSubmit()\\\" *ngIf=\\\"mode=='edit'\\\" class=\\\"btn btn-primary btn-space\\\">Update</button>\\n        <button (click)=\\\"onClose()\\\" *ngIf=\\\"mode=='view' || mode=='edit'\\\" class=\\\"btn btn-primary btn-space\\\">Close\\n        </button>\\n      </div>\\n    </div>\\n\\n  </body>\\n</html>\\n\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormsModule, FormGroup, FormControl, Validators, FormBuilder, FormArray }  from '@angular/forms';\nimport { ApiService } from '../api.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport {NgOnChangesFeature}from '@angular/core/src/render3';\n// import { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: 'app-partner-ngo',\n  templateUrl: './partner-ngo.component.html',\n  styleUrls: ['./partner-ngo.component.css']\n})\nexport class PartnerNGOComponent implements OnInit, AfterViewInit {\n\n  myForm: FormGroup;\n\n  private numberOfAuthorizedPersons: number=0;\n  private selectedTab: number=-1;\n  private mode: String;\n  private id: number;\n\n  constructor(private formBuilder: FormBuilder,\n             private apiService: ApiService,\n             private route: ActivatedRoute,\n             private router: Router){ }\n\n  ngOnInit() {\n    console.log('Loading PartnerNgo Screen');\n    this.myForm = this.formBuilder.group({\n      basicInfo: this.partnerNgoGroup(),\n      address: this.address(),\n      authorizedPersons: this.formBuilder.array([this.authorisedPerson()])\n    });\n\n    this.route.paramMap.subscribe(params=>{\n      console.log(params);\n      if(params.get('mode')){\n        this.mode=params.get('mode');\n        this.id=+params.get('id');\n      }\n      if(this.id){\n        if(!isNaN(this.id)){\n          // let data={basicInfo: {name:\"name\", description:\"desc\", branch:\"branch\", registrationNumber:\"regNum\"},\n          //           address: {addressLine1: \"add1\", addressLine2: \"add2\", city: \"city\", state: \"state\", pincode:\"pin\"},\n          //           authorizedPersons: [{name: \"a1\", contact1: \"c1\", contact2: \"c2\", email1: \"e1\", email2: \"e2\"},\n          //           {name: \"a1\", contact1: \"c1\", contact2: \"c2\", email1: \"e1\", email2: \"e2\"}\n          // ]};\n          this.apiService.getData('partnerngo',this.id, true).subscribe(result =>{\n            let data=JSON.parse(JSON.stringify(result));\n            console.log(\"GetResponse: \"+data);\n            if(data.authorizedPersons){\n              data.authorizedPersons.forEach((authorizedPerson, index) =>{\n                if(index!=0){\n                  this.addAuthorisedPerson();\n                }\n              });\n            }\n            this.myForm.setValue(data);\n          });\n        }else{\n          alert('Error in ID');\n        }\n      }\n    });\n\n    this.numberOfAuthorizedPersons=this.getAuthorizedPersons().length;\n    this.activateTab(1);\n\n  }\n\n  ngAfterViewInit(){\n    if(this.mode=='view'){\n      Array.from(document.getElementsByClassName('form-control')).forEach(element => {\n        (<HTMLInputElement>element).disabled = true;\n        //TODO: Disable add/remove buttons\n      });\n    }else{\n      Array.from(document.getElementsByClassName('form-control')).forEach(element => {\n        (<HTMLInputElement>element).disabled = false;\n        //TODO: Enable add/remove buttons\n      });\n    }\n  }\n\n  partnerNgoGroup(): FormGroup{\n    return this.formBuilder.group({\n      name: ['',[\n        Validators.required, Validators.maxLength(200)\n      ]],\n      description: ['',[\n        Validators.maxLength(200)\n      ]],\n      branch: ['',[\n        Validators.maxLength(200)\n      ]],\n      registrationNumber: ['', [\n        Validators.maxLength(200)\n      ]]\n      //todo: registrationNumber Validation.\n    });\n  }\n\n  address(): FormGroup{\n    return this.formBuilder.group({\n      addressLine1: ['', [\n        Validators.required, Validators.maxLength(2000)\n      ]],\n      addressLine2: ['', [\n        Validators.maxLength(2000)\n      ]],\n      state: ['', [\n        Validators.required, Validators.maxLength(50)\n      ]],\n      city: ['', [\n        Validators.required, Validators.maxLength(50)\n      ]],\n      pincode: ['', [\n        Validators.pattern(\"^[0-9]+$\"), Validators.minLength(6), Validators.maxLength(6)\n      ]]\n    });\n  }\n\n  authorisedPerson(): FormGroup{\n    return this.formBuilder.group({\n      name: ['',[\n        Validators.required, Validators.maxLength(200)\n      ]],\n      contact1: ['', [\n        Validators.required, Validators.pattern(\"^[0-9]+$\"), Validators.minLength(10), Validators.maxLength(10)\n      ]],\n      contact2: ['', [\n        Validators.pattern(\"^[0-9]+$\"), Validators.minLength(10), Validators.maxLength(10)\n      ]],\n      email1: ['', [\n        Validators.email, Validators.maxLength(50)\n      ]]\n\n    });\n  }\n\n  getAuthorizedPersons(): FormArray{\n    return this.myForm.get('authorizedPersons') as FormArray;\n  }\n\n  addAuthorisedPerson():void{\n    if(this.numberOfAuthorizedPersons<5){\n      (this.getAuthorizedPersons()).push(this.authorisedPerson());\n      this.numberOfAuthorizedPersons=this.getAuthorizedPersons().length;\n      //this.activateTab(this.numberOfAuthorizedPersons);\n    }\n  }\n\n  removeAuthorisedPerson(index): void{\n    if(this.numberOfAuthorizedPersons>1){\n      // var authorizedPerson = this.getAuthorizedPersons();\n      // var name = authorizedPerson[index].get('name');\n      // confirm(\"Do you want to delete \"\n      if(confirm(\"Do you want to delete \")){\n        (this.getAuthorizedPersons()).removeAt(index);\n        this.numberOfAuthorizedPersons=this.getAuthorizedPersons().length;\n        if(this.selectedTab==this.numberOfAuthorizedPersons)\n          this.selectedTab=this.numberOfAuthorizedPersons-1;\n      }\n    }else{\n\n    }\n  }\n\n  getNumberOfAuthorizedPersons(): Number{\n    return this.numberOfAuthorizedPersons;\n  }\n\n  isMaxLimitReached(val):boolean{\n    return this.numberOfAuthorizedPersons>=val;\n  }\n\n  isMinLimitReached():boolean{\n    return this.numberOfAuthorizedPersons===1;\n  }\n\n  getArray(val): number[]{\n    return Array(val);\n  }\n\n  activateTab(val): void{\n      this.selectedTab=val-1;\n  }\n\n  onUpdate(){\n    //TODO\n  }\n\n  onEdit(){\n    //TODO: instead change mode and make fields Editable.\n    this.router.navigateByUrl(\"/partnerngo/edit/\"+this.id);\n  }\n\n  onClose(){\n    this.router.navigateByUrl(\"/grid/partnerngo\");\n  }\n\n  checkForMandatoryValidations(partnerNgoDetails) {\n   let checkflag:boolean=false;\n    if (partnerNgoDetails.name && partnerNgoDetails.addressLine1 && partnerNgoDetails.city && partnerNgoDetails.state)\n     \n       {\n         if(partnerNgoDetails.authorizedPerson.length)\n         {\n            partnerNgoDetails.authorizedPerson.forEach(o =>{\n              if(!o.name || !o.contact1)\n              {\n                checkflag = true;\n                return false;\n              }\n              \n            })\n            if(!checkflag)\n            {\n              return true;\n            }\n         }\n         else{\n        return true;\n         }\n       }\n   \n    else\n      return false;\n\n  }\n  onSubmit(){\n    let json= Object.assign({authorizedPerson:this.getAuthorizedPersons().value}, this.myForm.get('basicInfo').value, this.myForm.get('address').value);\n    if(this.mode=='edit'){\n      json=Object.assign(json, {id:this.id});\n    }\n    console.log('submitting: ',json);\n    if(this.checkForMandatoryValidations(json)){\n    let response = this.apiService.postData(json,'partnerngo');\n    if(response){\n      if(this.mode=='edit'){\n        alert('Succesfully updated Partner NGO');\n      }else{\n        alert('Succesfully registered Partner NGO');\n      }\n      this.router.navigateByUrl(\"/grid/partnerngo\");\n    }\n  }\n  else{\n    alert('Please fill out the mandatory fields');\n  }\n  }\n}\n","module.exports = \"/*\\n * Specific styles of signin component\\n */\\n/*\\n * General styles\\n */\\nbody, html {\\n  height: 100%;\\n  background-repeat: no-repeat;\\n  background-image: linear-gradient(rgb(104, 145, 162), rgb(12, 97, 33));\\n}\\n.card-container.card {\\n  max-width: 350px;\\n  padding: 40px 40px;\\n}\\n.btn {\\n  font-weight: 700;\\n  height: 36px;\\n  -moz-user-select: none;\\n  -webkit-user-select: none;\\n  -ms-user-select: none;\\n      user-select: none;\\n  cursor: default;\\n}\\n/*\\n * Card component\\n */\\n.card {\\n  background-color: #F7F7F7;\\n  /* just in case there no content*/\\n  padding: 20px 25px 30px;\\n  margin: 0 auto 25px;\\n  margin-top: 50px;\\n  /* shadows and rounded borders */\\n  border-radius: 2px;\\n  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\\n}\\n.profile-img-card {\\n  width: 96px;\\n  height: 96px;\\n  margin: 0 auto 10px;\\n  display: block;\\n  border-radius: 50%;\\n}\\n/*\\n * Form styles\\n */\\n.profile-name-card {\\n  font-size: 16px;\\n  font-weight: bold;\\n  text-align: center;\\n  margin: 10px 0 0;\\n  min-height: 1em;\\n}\\n.reauth-email {\\n  display: block;\\n  color: #404040;\\n  line-height: 2;\\n  margin-bottom: 10px;\\n  font-size: 14px;\\n  text-align: center;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  box-sizing: border-box;\\n}\\n.form-signin #inputEmail,\\n.form-signin #inputPassword {\\n  direction: ltr;\\n  height: 44px;\\n  font-size: 16px;\\n}\\n.form-signin input[type=email],\\n.form-signin input[type=password],\\n.form-signin input[type=text],\\n.form-signin button {\\n  width: 100%;\\n  display: block;\\n  margin-bottom: 10px;\\n  z-index: 1;\\n  position: relative;\\n  box-sizing: border-box;\\n}\\n.form-signin .form-control:focus {\\n  border-color: rgb(104, 145, 162);\\n  outline: 0;\\n  box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgb(104, 145, 162);\\n}\\n.btn.btn-signin,.btn-cancel {\\n  /*background-color: #4d90fe; */\\n  background-color: rgb(104, 145, 162);\\n  /* background-color: linear-gradient(rgb(104, 145, 162), rgb(12, 97, 33));*/\\n  padding: 0px;\\n  font-weight: 700;\\n  font-size: 14px;\\n  height: 36px;\\n  border-radius: 3px;\\n  border: none;\\n  transition: all 0.218s;\\n}\\n.btn.btn-cancel {\\n  background-color: rgb(255, 34, 24);\\n}\\n.btn.btn-signin:hover,\\n.btn.btn-signin:active,\\n.btn.btn-signin:focus {\\n  background-color: rgb(12, 97, 33);\\n}\\n.forgot-password {\\n  color: rgb(104, 145, 162);\\n}\\n.forgot-password:hover,\\n.forgot-password:active,\\n.forgot-password:focus{\\n  color: rgb(12, 97, 33);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFRTtBQUNGOztFQUVFO0FBQ0Y7RUFDRSxZQUFZO0VBQ1osNEJBQTRCO0VBQzVCLHNFQUFzRTtBQUN4RTtBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBQUNwQjtBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixzQkFBc0I7RUFDdEIseUJBQXlCO0VBQ3pCLHFCQUFpQjtNQUFqQixpQkFBaUI7RUFDakIsZUFBZTtBQUNqQjtBQUVBOztFQUVFO0FBQ0Y7RUFDRSx5QkFBeUI7RUFDekIsaUNBQWlDO0VBQ2pDLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsZ0JBQWdCO0VBQ2hCLGdDQUFnQztFQUdoQyxrQkFBa0I7RUFHbEIsMENBQTBDO0FBQzVDO0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixjQUFjO0VBR2Qsa0JBQWtCO0FBQ3BCO0FBRUE7O0VBRUU7QUFDRjtFQUNFLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixlQUFlO0FBQ2pCO0FBRUE7RUFDRSxjQUFjO0VBQ2QsY0FBYztFQUNkLGNBQWM7RUFDZCxtQkFBbUI7RUFDbkIsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUduQixzQkFBc0I7QUFDeEI7QUFFQTs7RUFFRSxjQUFjO0VBQ2QsWUFBWTtFQUNaLGVBQWU7QUFDakI7QUFFQTs7OztFQUlFLFdBQVc7RUFDWCxjQUFjO0VBQ2QsbUJBQW1CO0VBQ25CLFVBQVU7RUFDVixrQkFBa0I7RUFHbEIsc0JBQXNCO0FBQ3hCO0FBRUE7RUFDRSxnQ0FBZ0M7RUFDaEMsVUFBVTtFQUVWLHVFQUF1RTtBQUN6RTtBQUVBO0VBQ0UsOEJBQThCO0VBQzlCLG9DQUFvQztFQUNwQywyRUFBMkU7RUFDM0UsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsWUFBWTtFQUdaLGtCQUFrQjtFQUNsQixZQUFZO0VBSVosc0JBQXNCO0FBQ3hCO0FBRUE7RUFDRSxrQ0FBa0M7QUFDcEM7QUFDQTs7O0VBR0UsaUNBQWlDO0FBQ25DO0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7QUFFQTs7O0VBR0Usc0JBQXNCO0FBQ3hCIiwiZmlsZSI6InNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBTcGVjaWZpYyBzdHlsZXMgb2Ygc2lnbmluIGNvbXBvbmVudFxuICovXG4vKlxuICogR2VuZXJhbCBzdHlsZXNcbiAqL1xuYm9keSwgaHRtbCB7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHJnYigxMDQsIDE0NSwgMTYyKSwgcmdiKDEyLCA5NywgMzMpKTtcbn1cblxuLmNhcmQtY29udGFpbmVyLmNhcmQge1xuICBtYXgtd2lkdGg6IDM1MHB4O1xuICBwYWRkaW5nOiA0MHB4IDQwcHg7XG59XG5cbi5idG4ge1xuICBmb250LXdlaWdodDogNzAwO1xuICBoZWlnaHQ6IDM2cHg7XG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIHVzZXItc2VsZWN0OiBub25lO1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8qXG4gKiBDYXJkIGNvbXBvbmVudFxuICovXG4uY2FyZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGN0Y3Rjc7XG4gIC8qIGp1c3QgaW4gY2FzZSB0aGVyZSBubyBjb250ZW50Ki9cbiAgcGFkZGluZzogMjBweCAyNXB4IDMwcHg7XG4gIG1hcmdpbjogMCBhdXRvIDI1cHg7XG4gIG1hcmdpbi10b3A6IDUwcHg7XG4gIC8qIHNoYWRvd3MgYW5kIHJvdW5kZWQgYm9yZGVycyAqL1xuICAtbW96LWJvcmRlci1yYWRpdXM6IDJweDtcbiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAycHg7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgLW1vei1ib3gtc2hhZG93OiAwcHggMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogMHB4IDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICBib3gtc2hhZG93OiAwcHggMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG59XG5cbi5wcm9maWxlLWltZy1jYXJkIHtcbiAgd2lkdGg6IDk2cHg7XG4gIGhlaWdodDogOTZweDtcbiAgbWFyZ2luOiAwIGF1dG8gMTBweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIC1tb3otYm9yZGVyLXJhZGl1czogNTAlO1xuICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuXG4vKlxuICogRm9ybSBzdHlsZXNcbiAqL1xuLnByb2ZpbGUtbmFtZS1jYXJkIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW46IDEwcHggMCAwO1xuICBtaW4taGVpZ2h0OiAxZW07XG59XG5cbi5yZWF1dGgtZW1haWwge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29sb3I6ICM0MDQwNDA7XG4gIGxpbmUtaGVpZ2h0OiAyO1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4uZm9ybS1zaWduaW4gI2lucHV0RW1haWwsXG4uZm9ybS1zaWduaW4gI2lucHV0UGFzc3dvcmQge1xuICBkaXJlY3Rpb246IGx0cjtcbiAgaGVpZ2h0OiA0NHB4O1xuICBmb250LXNpemU6IDE2cHg7XG59XG5cbi5mb3JtLXNpZ25pbiBpbnB1dFt0eXBlPWVtYWlsXSxcbi5mb3JtLXNpZ25pbiBpbnB1dFt0eXBlPXBhc3N3b3JkXSxcbi5mb3JtLXNpZ25pbiBpbnB1dFt0eXBlPXRleHRdLFxuLmZvcm0tc2lnbmluIGJ1dHRvbiB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgei1pbmRleDogMTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLmZvcm0tc2lnbmluIC5mb3JtLWNvbnRyb2w6Zm9jdXMge1xuICBib3JkZXItY29sb3I6IHJnYigxMDQsIDE0NSwgMTYyKTtcbiAgb3V0bGluZTogMDtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiYSgwLDAsMCwuMDc1KSwwIDAgOHB4IHJnYigxMDQsIDE0NSwgMTYyKTtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwwLDAsLjA3NSksMCAwIDhweCByZ2IoMTA0LCAxNDUsIDE2Mik7XG59XG5cbi5idG4uYnRuLXNpZ25pbiwuYnRuLWNhbmNlbCB7XG4gIC8qYmFja2dyb3VuZC1jb2xvcjogIzRkOTBmZTsgKi9cbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEwNCwgMTQ1LCAxNjIpO1xuICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lYXItZ3JhZGllbnQocmdiKDEwNCwgMTQ1LCAxNjIpLCByZ2IoMTIsIDk3LCAzMykpOyovXG4gIHBhZGRpbmc6IDBweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBoZWlnaHQ6IDM2cHg7XG4gIC1tb3otYm9yZGVyLXJhZGl1czogM3B4O1xuICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDNweDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBib3JkZXI6IG5vbmU7XG4gIC1vLXRyYW5zaXRpb246IGFsbCAwLjIxOHM7XG4gIC1tb3otdHJhbnNpdGlvbjogYWxsIDAuMjE4cztcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4yMThzO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4yMThzO1xufVxuXG4uYnRuLmJ0bi1jYW5jZWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAzNCwgMjQpO1xufVxuLmJ0bi5idG4tc2lnbmluOmhvdmVyLFxuLmJ0bi5idG4tc2lnbmluOmFjdGl2ZSxcbi5idG4uYnRuLXNpZ25pbjpmb2N1cyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxMiwgOTcsIDMzKTtcbn1cblxuLmZvcmdvdC1wYXNzd29yZCB7XG4gIGNvbG9yOiByZ2IoMTA0LCAxNDUsIDE2Mik7XG59XG5cbi5mb3Jnb3QtcGFzc3dvcmQ6aG92ZXIsXG4uZm9yZ290LXBhc3N3b3JkOmFjdGl2ZSxcbi5mb3Jnb3QtcGFzc3dvcmQ6Zm9jdXN7XG4gIGNvbG9yOiByZ2IoMTIsIDk3LCAzMyk7XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"card card-container\\\">\\n    <img class=\\\"profile-img-card\\\" id=\\\"profile-img\\\" src=\\\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\\\"/>\\n    <p class=\\\"profile-name-card\\\" id=\\\"profile-name\\\"></p>\\n\\n    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.form.valid && register()\\\" name=\\\"form\\\" novalidate>\\n      <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">{{errorMessage}}</div>\\n      <span class=\\\"reauth-email\\\" id=\\\"reauth-email\\\"></span>\\n      <div [ngClass]=\\\"{ 'has-error': f.submitted && !fullName.valid }\\\" class=\\\"form-group\\\">\\n        <label for=\\\"fullName\\\">Full Name</label>\\n        <input #fullName=\\\"ngModel\\\" [(ngModel)]=\\\"user.fullName\\\" class=\\\"form-control\\\" id=\\\"fullName\\\" name=\\\"fullName\\\"\\n               required type=\\\"text\\\"/>\\n        <div *ngIf=\\\"f.submitted && !fullName.valid\\\" class=\\\"help-block\\\">The full Name is required</div>\\n      </div>\\n      <div [ngClass]=\\\"{ 'has-error': f.submitted && !username.valid }\\\" class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Email Address</label>\\n        <input #username=\\\"ngModel\\\" [(ngModel)]=\\\"user.username\\\" class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\"\\n               pattern=\\\"[^ @]*@[^ @]*\\\" required type=\\\"text\\\"/>\\n        <div *ngIf=\\\"f.submitted && !username.valid\\\" class=\\\"help-block\\\">\\n\\n          <div *ngIf=\\\"username.errors.required\\\">\\n            Email is required.\\n          </div>\\n          <div *ngIf=\\\"username.errors.pattern\\\">\\n            A valid email address is required\\n          </div>\\n\\n        </div>\\n      </div>\\n      <div [ngClass]=\\\"{ 'has-error': f.submitted && !password.valid }\\\" class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input #password=\\\"ngModel\\\" [(ngModel)]=\\\"user.password\\\" class=\\\"form-control\\\" id=\\\"password\\\" minlength=\\\"4\\\"\\n               name=\\\"password\\\" required type=\\\"password\\\"/>\\n        <div *ngIf=\\\"f.submitted && !password.valid\\\" class=\\\"help-block\\\">\\n\\n          <div *ngIf=\\\"password.errors.required\\\">\\n            password is required.\\n          </div>\\n          <div *ngIf=\\\"password.errors.minlength\\\">\\n            password must be at least 4 characters long.\\n          </div>\\n\\n        </div>\\n      </div>\\n      <div class=\\\"checkbox\\\" id=\\\"remember\\\">\\n\\n      </div>\\n      <button class=\\\"btn btn-lg btn-primary btn-block btn-signin\\\" type=\\\"submit\\\">Create Account</button>\\n      <button [routerLink]=\\\"['/login']\\\" class=\\\"btn btn-lg btn-danger btn-block btn-cancel\\\" type=\\\"button\\\">Cancel</button>\\n\\n    </form><!-- /form -->\\n\\n  </div><!-- /card-container -->\\n</div><!-- /container -->\\n\\n\"","import{Component, OnInit, ViewEncapsulation}from '@angular/core';\nimport {User}from \"../model/model.user\";\nimport {UserService}from \"../services/user.service\";\nimport {Router}from \"@angular/router\";\n\n@Component({\nselector: 'app-register',\ntemplateUrl: './register.component.html',\nstyleUrls: ['./register.component.css'],\nencapsulation: ViewEncapsulation.None\n})\nexport class RegisterComponent implements OnInit {\nuser: User = new User();\nerrorMessage: string;\n\nconstructor(public userService: UserService, public router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  register() {\n    this.userService.createAccount(this.user).subscribe(data => {\n        this.router.navigate(['/login']);\n      }, err => {\n        console.log(err);\n        this.errorMessage = \"username already exist\";\n      }\n)\n}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyZWQtZXZlbnRzL3JlZ2lzdGVyZWQtZXZlbnRzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\n\\n\\n  <div class=\\\"col-md-10\\\">\\n    <div id=\\\"myGrid\\\"  style=\\\"height: 100%;\\\">\\n      <ag-grid-angular style=\\\"height: 100%;\\\"\\n                       class=\\\"ag-theme-balham\\\"\\n                       [rowData]=\\\"rowData\\\"\\n                       [columnDefs]=\\\"columnDefs\\\">\\n      </ag-grid-angular>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { formatDate, DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-registered-events',\n  templateUrl: './registered-events.component.html',\n  styleUrls: ['./registered-events.component.css']\n})\nexport class RegisteredEventsComponent implements OnInit {\n\n    rowData :any;\n      pipe:any;\n      eventData :any[];\n\n  \tcolumnDefs = [\n          {headerName: 'EventId', field: 'id',filter:true },\n          {headerName: 'Action', field: 'eventAction',filter:true},\n          {headerName: 'Event Name', field: 'eventName',filter:true},\n          {headerName: 'Event Category', field: 'eventCategory',filter:true},\n          {headerName: 'Partner NGO', field: 'ngoName',filter:true},\n          {headerName: 'Event Start Date', field: 'event_start_date',filter:true},\n          {headerName: 'Event End Date', field: 'event_end_date',filter:true}\n          ];\n\n  constructor(private apiService: ApiService,private router:Router) {\n\n\n          }\n\n  \tngOnInit():void{\n     this.pipe = new DatePipe('en-US');\n     this.apiService.getData('registered-events').subscribe((data:any)=>{\n          this.eventData=data;\n          console.log(data);\n          this.rowData = this.eventData.map(event=>({\n            id:event.id,\n            eventAction:event.eventAction,\n            eventName:event.eventName,\n            eventCategory:event.eventCategory,\n            ngoName:event.ngoName,\n            event_start_date:this.pipe.transform(event.eventDuration[0],'shortDate'),\n            event_end_date:this.pipe.transform(event.eventDuration[1],'shortDate')\n          }));\n        },( err:HttpErrorResponse)=>{\n          console.log(err.message);\n       });\n      }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2V0L3Jlc2V0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"card card-container\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\"></div>\\n      <div class=\\\"col-md-4\\\">\\n        <form #f=\\\"ngForm\\\"  name=\\\"form-signin\\\" novalidate>\\n          <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">{{errorMessage}}</div>\\n          <div *ngIf=\\\"successMessage\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">{{successMessage}}</div>\\n\\n          <div [ngClass]=\\\"{ 'has-error': showError }\\\" class=\\\"form-group\\\">\\n            <div *ngIf=\\\"!showReset\\\">\\n            <label for=\\\"username\\\">Email</label>\\n            <input #username=\\\"ngModel\\\" [(ngModel)]=\\\"user.username\\\" class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\"\\n                   required type=\\\"text\\\"/>\\n            </div>\\n            <div *ngIf=\\\"showReset\\\">\\n            <label for=\\\"resetToken\\\">Token</label>\\n            <input #token=\\\"ngModel\\\" [(ngModel)]=\\\"user.resetToken\\\" class=\\\"form-control\\\" id=\\\"resetToken\\\" name=\\\"resetToken\\\"\\n                   required type=\\\"text\\\"/>\\n\\n            <label for=\\\"password\\\">Password</label>\\n            <input #password=\\\"ngModel\\\" [(ngModel)]=\\\"user.password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\"\\n                   required type=\\\"password\\\"/>\\n            </div>\\n            <br/>\\n            <div *ngIf=\\\"!showReset\\\">\\n            <button class=\\\"btn btn-sm btn-primary btn-block btn-signin\\\" (click)=\\\"checkEmail($event)\\\">Check & Generate Reset Token</button>\\n            </div>\\n              <div *ngIf=\\\"showReset\\\">\\n            <button class=\\\"btn btn-sm btn-primary btn-block btn-signin\\\" (click)=\\\"reset($event)\\\">Reset Password</button>\\n            <!-- <div *ngIf=\\\"f.submitted && !username.valid\\\" class=\\\"help-block\\\">an valid email is required</div>-->\\n</div>\\n          </div>\\n\\n        </form>\\n\\n\\n      </div>\\n    </div><!-- /form -->\\n\\n  </div><!-- /card-container -->\\n</div><!-- /container -->\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reset',\n  templateUrl: './reset.component.html',\n  styleUrls: ['./reset.component.css']\n})\nexport class ResetComponent implements OnInit {\nshowReset = false;\nerrorMessage = \"\";\nsuccessMessage = \"\";\n\n user = {username: '', password: '', resetToken:''};\n\n  constructor(private apiService: ApiService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  checkEmail(event) {\n\n      this.apiService.getData('preresetpassword', this.user.username, false).subscribe(\n      response=>{\n\n       let result:any=JSON.parse(JSON.stringify(response));\n       if(!response['userExists']) {\n\n         this.errorMessage = \"Email id doesn't exists\";\n       } else if(response['userExists'] && !response['mailsent']) {\n         this.errorMessage= \"Unable to send email\";\n       } else if(response['userExists'] && response['mailsent']) {\n          this.errorMessage= \"\";\n          this.successMessage= \"Please check email, enter token and new password\";\n          this.showReset = true;\n       }\n\n       });\n  return false;\n    };\n\n      reset(event) {\n       this.successMessage='';\n\n      if(this.user.password.length < 8) {\n       this.errorMessage= \"Password length should be more than 8\";\n       return false;\n      }\n\n          this.apiService.post( this.user, 'resetpassword').subscribe(response=>{\n\n             let result:any=JSON.parse(JSON.stringify(response));\n             if(response['reset']) {\n\n                      this.router.navigateByUrl('/login');\n                    } else  {\n                      this.errorMessage= \"Unable to reset password\";\n                    }\n             });\n          return false;\n        }\n\n}\n","module.exports = \"\\n.text-on-pannel {\\n    background: #fff none repeat scroll 0 0;\\n    height: auto;\\n    margin-left: 20px;\\n    padding: 3px 5px;\\n    position: absolute;\\n    margin-top: -20px;\\n    border: 1px solid #337ab7;\\n    border-radius: 8px;\\n  }\\n  \\n  .panel {\\n  \\n    margin-top: 27px a!important;\\n  }\\n  \\n  .panel-body {\\n    padding-top: 30px !important;\\n  }\\n  \\n  .field-invalid\\n  {\\n  color:pink;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VsZWN0YWJsZXZvbHVudGVlci9zZWxlY3RhYmxldm9sdW50ZWVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksdUNBQXVDO0lBQ3ZDLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIseUJBQXlCO0lBQ3pCLGtCQUFrQjtFQUNwQjs7RUFFQTs7SUFFRSw0QkFBNEI7RUFDOUI7O0VBRUE7SUFDRSw0QkFBNEI7RUFDOUI7O0VBRUE7O0VBRUEsVUFBVTtFQUNWIiwiZmlsZSI6InNyYy9hcHAvc2VsZWN0YWJsZXZvbHVudGVlci9zZWxlY3RhYmxldm9sdW50ZWVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi50ZXh0LW9uLXBhbm5lbCB7XG4gICAgYmFja2dyb3VuZDogI2ZmZiBub25lIHJlcGVhdCBzY3JvbGwgMCAwO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICBwYWRkaW5nOiAzcHggNXB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBtYXJnaW4tdG9wOiAtMjBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjMzM3YWI3O1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgfVxuICBcbiAgLnBhbmVsIHtcbiAgXG4gICAgbWFyZ2luLXRvcDogMjdweCBhIWltcG9ydGFudDtcbiAgfVxuICBcbiAgLnBhbmVsLWJvZHkge1xuICAgIHBhZGRpbmctdG9wOiAzMHB4ICFpbXBvcnRhbnQ7XG4gIH1cbiAgXG4gIC5maWVsZC1pbnZhbGlkXG4gIHtcbiAgY29sb3I6cGluaztcbiAgfVxuICAiXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"page-header well well-sm text-center\\\">\\n    <h3><strong> Volunteer Registration</strong></h3>\\n  </div>\\n  <div class=\\\"panel panel-info\\\" >\\n   <!-- <fieldset>\\n\\n    <legend>Personal Details</legend>-->\\n    <!--<h3 class=\\\"text-on-pannel text-primary\\\"><strong class=\\\"text-uppercase\\\"> Personal Information</strong></h3>-->\\n  <div class=\\\"panel-heading\\\">\\n    <label>Personal Information</label>\\n  </div>\\n  <div class=\\\"panel-body\\\" >\\n    <form #form=\\\"ngForm\\\" [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"personalInfo()\\\">\\n    <div  formGroupName=\\\"personalInfo\\\">\\n\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group required\\\">\\n              <label class=\\\"control-label\\\">First Name</label>\\n              <input type=\\\"text\\\" formControlName = \\\"firstName\\\" class=\\\"form-control well well-sm\\\"[ngClass]=\\\"{'is-invalid':myForm.controls['personalInfo'].controls.firstName.errors&&(myForm.controls['personalInfo'].controls.firstName.dirty||myForm.controls['personalInfo'].controls.firstName.touched)}\\\">\\n              <div *ngIf=\\\"myForm.controls['personalInfo'].controls.firstName.errors&&(myForm.controls['personalInfo'].controls.firstName.dirty||myForm.controls['personalInfo'].controls.firstName.touched)\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"myForm.controls['personalInfo'].controls.firstName.errors.required\\\" class=\\\"field-invalid\\\">First Name is required</div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group required\\\">\\n              <label class=\\\"control-label\\\">Last Name</label>\\n              <input type=\\\"text\\\" formControlName = \\\"lastName\\\" class=\\\"form-control well well-sm\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1 offset-md-3\\\">\\n            <div class=\\\"form-group required\\\">\\n              <label class=\\\"control-label\\\">Prefix</label>\\n              <input type=\\\"text\\\" formControlName = \\\"phonePrefix\\\" class=\\\"form-control well well-sm\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group required\\\">\\n              <label class=\\\"control-label\\\">Phone Number</label>\\n              <input type=\\\"text\\\" formControlName = \\\"phoneNumber\\\" class=\\\"form-control well well-sm\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1 offset-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Prefix</label>\\n              <input type=\\\"text\\\" formControlName = \\\"alternatePhonePrefix\\\" class=\\\"form-control well well-sm\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Alternate Phone</label>\\n              <input type=\\\"text\\\" formControlName = \\\"alternatePhoneNumber\\\" class=\\\"form-control well well-sm\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group required\\\">\\n              <label class=\\\"control-label\\\">Email</label>\\n              <input type=\\\"text\\\" formControlName = \\\"email\\\" class=\\\"form-control well well-sm\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Alternate Email</label>\\n              <input type=\\\"text\\\" formControlName = \\\"alternateEmail\\\" class=\\\"form-control well well-sm\\\">\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n    </div>\\n    </form>\\n  </div>\\n    <!--</fieldset>-->\\n  </div>\\n\\n  <div class=\\\"panel panel-info\\\">\\n    <!--<fieldset>\\n\\n      <legend>Address</legend>-->\\n\\n    <!--<h3 class=\\\"text-on-pannel text-primary\\\"><strong class=\\\"text-uppercase\\\"> Address</strong></h3>-->\\n    <div class=\\\"panel-heading\\\">\\n      <label>Address</label>\\n    </div>\\n      <div class=\\\"panel-body\\\">\\n        <form [formGroup]=\\\"myForm\\\" >\\n        <div formGroupName=\\\"address\\\">\\n\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\n                <div class=\\\"form-group required\\\">\\n                  <label class=\\\"control-label\\\">Locality</label>\\n                  <input type=\\\"text\\\" formControlName = \\\"locality\\\" class=\\\"form-control well well-sm\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\n                <div class=\\\"form-group required\\\">\\n                  <label class=\\\"control-label\\\">City</label>\\n                  <input type=\\\"text\\\" formControlName = \\\"city\\\" class=\\\"form-control well well-sm\\\">\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\n                <div class=\\\"form-group required\\\">\\n                  <label class=\\\"control-label\\\">State</label>\\n                  <input type=\\\"text\\\" formControlName = \\\"state\\\" class=\\\"form-control well well-sm\\\">\\n                </div>\\n              </div>\\n\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\n                <div class=\\\"form-group required\\\">\\n                  <label class=\\\"control-label\\\">Pin Code</label>\\n                  <input type=\\\"text\\\" formControlName = \\\"pincode\\\" class=\\\"form-control well well-sm\\\">\\n                </div>\\n              </div>\\n            </div>\\n\\n\\n        </div>\\n        </form>\\n      </div>\\n   <!-- </fieldset>-->\\n  </div>\\n  <div class=\\\"panel panel-info\\\">\\n    <!--<fieldset>\\n\\n      <legend>Additional Information</legend>-->\\n   <!-- <h3 class=\\\"text-on-pannel text-primary\\\"><strong class=\\\"text-uppercase\\\"> Additional Information </strong></h3>-->\\n      <div class=\\\"panel-heading\\\">\\n        <label>Additional Information</label>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <form #form=\\\"ngForm\\\" [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"additionalInfo()\\\">\\n        <div formGroupName=\\\"additionalInfo\\\">\\n\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\">Interest Areas</label>\\n\\n\\n\\n                  <angular2-multiselect [data]=\\\"interestedAreasCategory\\\" [(ngModel)]=\\\"selectedList\\\" formControlName=\\\"interestedAreas\\\" settings=\\\"dropdownSettings\\\"></angular2-multiselect>\\n\\n                </div>\\n              </div>\\n\\n            </div>\\n\\n\\n\\n\\n        </div>\\n\\n        </form>\\n\\n      </div>\\n    <!--</fieldset>-->\\n  </div>\\n  <div class=\\\"text-center\\\">\\n <!-- <button  class=\\\"btn btn-default\\\" (click)=\\\"onSubmit()\\\">Register</button>-->\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"onSubmit()\\\"  *ngIf=\\\"mode!='view' && mode!='edit'\\\">Register</button>\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"onSubmit()\\\" *ngIf=\\\"mode=='edit'\\\" >Update</button>\\n\\n    <button class=\\\"btn btn-default\\\"(click)=\\\"onEdit()\\\" *ngIf=\\\"mode=='view'\\\">Edit</button>\\n    <button class=\\\"btn btn-default\\\"(click)=\\\"onClose()\\\" *ngIf=\\\"mode=='view' || mode=='edit'\\\" >Close</button>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {GridOptions} from 'ag-grid-community';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-selectablevolunteer',\n  templateUrl: './selectablevolunteer.component.html',\n  styleUrls: ['./selectablevolunteer.component.css']\n})\nexport class SelectablevolunteerComponent implements OnInit {\n  private data:any=[];\n  public  selectedEmails:any=\"\";\n    private headers=[\n      {headerName: 'First Name', field: 'firstName',filter:true, sortable: true,headerCheckboxSelection: true,\n      headerCheckboxSelectionFilteredOnly: true,\n      checkboxSelection: true },\n      {headerName: 'Last Name', field: 'lastName',filter:true},\n      {headerName: 'Phone Prefix', field: 'phonePrefix',filter:true},\n      {headerName: 'Phone Number', field: 'phoneNumber',filter:true},\n      {headerName: 'Phone Prefix', field: 'alternatePhonePrefix',filter:true},\n      {headerName: 'Alternate Phone Number', field: 'alternatePhoneNumber',filter:true},\n      {headerName: 'EmailId', field: 'email',filter:true},\n      {headerName: 'EmailId2', field: 'alternateEmail',filter:true},\n      {headerName: 'Locality', field: 'locality',filter:true},\n      {headerName: 'City', field: 'city',filter:true},\n      {headerName: 'State', field: 'state',filter:true},\n      {headerName: 'PinCode', field: 'pincode',filter:true},\n      {headerName: 'Interested Areas', field: 'interestedAreas'}\n    ];\n    private myGrid: any;\n    private gridApi: any;\n    private gridColumnApi: any;\n    private rowSelection :any;\n    public gridOptions: GridOptions;\n   interestedList:any[]=new Array();\n    constructor(private apiService:ApiService,\n                private router:Router) { }\n    ngOnInit() {\n     this.rowSelection = \"multiple\";\n     this.apiService.getData('volunteer').subscribe(response=>{\n           let result:any=JSON.parse(JSON.stringify(response));\n           Array.from(result).forEach(element => {\n             let interestedAreas1=JSON.parse(JSON.stringify(element)).interestedAreas;\n             while(this.interestedList.length)\n             {\n               this.interestedList.pop();\n             }\n             for(var val of interestedAreas1)\n                 {\n                 console.log(\"hey:\"+val[\"interestedArea\"]);\n                 this.interestedList.push(val[\"interestedArea\"]);\n                 }\n             Object.assign(element, {interestedAreas: this.interestedList.toString()\n             });\n           });\n           console.log(response);\n           console.log(this.data);\n           this.data=result;\n           \n           \n         });\n     }\n     onGridReady(params) {\n       this.gridOptions.columnDefs=this.headers;\n       console.log(\"You are here\");\n       this.gridApi = params.api;\n       this.gridColumnApi = params.columnApi;\n     }\n \n    onRowCilcked(event){\n      console.log(event.rowIndex);\n     // this.router.navigateByUrl(\"/volunteer/edit/\"+((event.rowIndex)+1));\n        //console.log(this.printAllDisplayedRows());\n        this.onBtForEachNodeAfterFilterAndSort();\n      }\n \n      onBtForEachNodeAfterFilterAndSort() {\n       console.log(\"### api.forEachNodeAfterFilterAndSort() ###\");\n       //this.gridApi.forEachNodeAfterFilterAndSort(this.printNode);\n       this.gridOptions.api.getSelectedNodes().forEach(node=>{console.log(node.data.email)});\n     }\n     \n      printNode(node, index) {\n       if (node.group) {\n         console.log(index + \" -> group: \" + node.key);\n       } else {\n         console.log(index + \" -> data: \" + node.data.city + \", \" + node.data.email);\n       }\n     }\n\n}\n","module.exports = \"#mainDiv\\n{\\n  height: 100%;\\n  width:70%;\\n  margin:auto;\\n  background-color: azure;\\n  margin-top: 2%;\\n  border-radius: 10px;\\n}\\n\\n#heading\\n{\\n  height: 50px;\\n  width: 70%;\\n  /*padding-left: 35%;*/\\n  /*margin: auto;*/\\n  font-size: 25px;\\n  margin-top: 25px;   \\n  margin-left: 15%;\\n   background-color: burlywood;\\n   border-radius: 10px;\\n}\\n\\n#buttonTab\\n{\\n  padding-left:10%;\\n  margin-top: 10px;\\n}\\n\\n#buttonCancel\\n{\\nmargin-left: 30%;\\n}\\n\\n#buttonSubmit\\n{\\n  margin-left: 4%;\\n}\\n\\n#backButton\\n{\\n  width:30%;\\n  float:left;\\n}\\n\\n#headingText\\n{\\n  width:70%;\\n  padding-left: 29%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VuZC1tYWlsL3NlbmQtbWFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVFLFlBQVk7RUFDWixTQUFTO0VBQ1QsV0FBVztFQUNYLHVCQUF1QjtFQUN2QixjQUFjO0VBQ2QsbUJBQW1CO0FBQ3JCOztBQUVBOztFQUVFLFlBQVk7RUFDWixVQUFVO0VBQ1YscUJBQXFCO0VBQ3JCLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtHQUNmLDJCQUEyQjtHQUMzQixtQkFBbUI7QUFDdEI7O0FBQ0E7O0VBRUUsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtBQUNsQjs7QUFDQTs7QUFFQSxnQkFBZ0I7QUFDaEI7O0FBQ0E7O0VBRUUsZUFBZTtBQUNqQjs7QUFDQTs7RUFFRSxTQUFTO0VBQ1QsVUFBVTtBQUNaOztBQUNBOztFQUVFLFNBQVM7RUFDVCxpQkFBaUI7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9zZW5kLW1haWwvc2VuZC1tYWlsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjbWFpbkRpdlxue1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOjcwJTtcbiAgbWFyZ2luOmF1dG87XG4gIGJhY2tncm91bmQtY29sb3I6IGF6dXJlO1xuICBtYXJnaW4tdG9wOiAyJTtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbn1cblxuI2hlYWRpbmdcbntcbiAgaGVpZ2h0OiA1MHB4O1xuICB3aWR0aDogNzAlO1xuICAvKnBhZGRpbmctbGVmdDogMzUlOyovXG4gIC8qbWFyZ2luOiBhdXRvOyovXG4gIGZvbnQtc2l6ZTogMjVweDtcbiAgbWFyZ2luLXRvcDogMjVweDsgICBcbiAgbWFyZ2luLWxlZnQ6IDE1JTtcbiAgIGJhY2tncm91bmQtY29sb3I6IGJ1cmx5d29vZDtcbiAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG4jYnV0dG9uVGFiXG57XG4gIHBhZGRpbmctbGVmdDoxMCU7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59XG4jYnV0dG9uQ2FuY2VsXG57XG5tYXJnaW4tbGVmdDogMzAlO1xufVxuI2J1dHRvblN1Ym1pdFxue1xuICBtYXJnaW4tbGVmdDogNCU7XG59XG4jYmFja0J1dHRvblxue1xuICB3aWR0aDozMCU7XG4gIGZsb2F0OmxlZnQ7XG59XG4jaGVhZGluZ1RleHRcbntcbiAgd2lkdGg6NzAlO1xuICBwYWRkaW5nLWxlZnQ6IDI5JTtcbn1cbiJdfQ== */\"","module.exports = \"<!--<div class=\\\"row custom-row\\\" id=\\\"mainDiv\\\">-->\\n  <!--<div class= \\\"col-sm-5 custom-container jumbotron\\\">-->\\n    <!--<form class=\\\"form-horizontal\\\"  #sendmailForm=\\\"ngForm\\\"-->\\n          <!--(ngSubmit)=\\\"onFormSubmit(sendmailForm)\\\" >-->\\n      <!--<fieldset>-->\\n        <!--<legend>SignUp</legend>-->\\n\\n        <!--&lt;!&ndash;- To Block -&ndash;&gt;-->\\n        <!--<div class=\\\"form-group\\\">-->\\n          <!--<label for=\\\"toEmail\\\">to</label>-->\\n          <!--&lt;!&ndash;<input type=\\\"text\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;id=\\\"toEmail\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;[(ngModel)]=\\\"email.to\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;name=\\\"to\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;placeholder=\\\"to\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;#emailTo = \\\"ngModel\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" required>&ndash;&gt;-->\\n        <!--</div>-->\\n        <!---->\\n\\n        <!--<div class=\\\"form-group\\\">-->\\n          <!--<label for=\\\"ccEmail\\\">cc</label>-->\\n          <!--&lt;!&ndash;<input type=\\\"text\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;id=\\\"ccEmail\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;[(ngModel)]=\\\"email.cc\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;name=\\\"cc\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;#emailCc = \\\"ngModel\\\"&ndash;&gt;-->\\n\\n                 <!--&lt;!&ndash;pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;placeholder=\\\"cc\\\">&ndash;&gt;-->\\n        <!--</div>-->\\n        <!--<div class=\\\"form-group\\\">-->\\n          <!--<label for=\\\"bccEmail\\\">bcc</label>-->\\n          <!--&lt;!&ndash;<input type=\\\"text\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;id=\\\"bccEmail\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;[(ngModel)]=\\\"email.bcc\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;name=\\\"bcc\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;#emailBcc = \\\"ngModel\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;placeholder=\\\"bcc\\\" >&ndash;&gt;-->\\n        <!--</div>-->\\n        <!--<div class=\\\"form-group\\\">-->\\n          <!--<label for=\\\"subjectEmail\\\">Subject</label>-->\\n          <!--&lt;!&ndash;<input type=\\\"text\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;id=\\\"subjectEmail\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;[(ngModel)]=\\\"email.subject\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;name=\\\"subject\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;placeholder=\\\"subject\\\" required>&ndash;&gt;-->\\n        <!--</div>-->\\n        <!--<div class=\\\"form-group\\\">-->\\n          <!--<label for=\\\"textEmail\\\">Text</label>-->\\n          <!--&lt;!&ndash;<input type=\\\"text\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;id=\\\"textEmail\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;[(ngModel)]=\\\"email.text\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;name=\\\"text\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;placeholder=\\\"text\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;#pwd = \\\"ngModel\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;minlength=\\\"8\\\"&ndash;&gt;-->\\n                 <!--&lt;!&ndash;required>&ndash;&gt;-->\\n        <!--</div>-->\\n\\n\\n        <!--&lt;!&ndash;- Buttons Block -&ndash;&gt;-->\\n\\n      <!--</fieldset>-->\\n    <!--</form>-->\\n    <!--{{email | json}}-->\\n  <!--</div>-->\\n  <div id=\\\"heading\\\">\\n    <div id=\\\"headingText\\\">\\n    Enter Email Details\\n    </div>\\n  </div>\\n  <div id=\\\"mainDiv\\\">\\n    <form class=\\\"form-horizontal\\\"  #sendmailForm=\\\"ngForm\\\"\\n          (ngSubmit)=\\\"onFormSubmit(sendmailForm)\\\" >\\n    <table class=\\\"table-condensed form-table\\\">\\n      <tr class=\\\"row\\\">\\n        <td class=\\\"col-md-6 offset-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">To</label>\\n            <input type=\\\"text\\\"\\n                   id=\\\"toEmail\\\"\\n                   [(ngModel)]=\\\"email.to\\\"\\n                   name=\\\"to\\\"\\n                   placeholder=\\\"to\\\"\\n                   #emailTo = \\\"ngModel\\\"\\n                   pattern=\\\"([a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3},?)*$\\\"\\n                   class=\\\"form-control well well-sm\\\" required>\\n          </div>\\n        </td>\\n        <td class=\\\"col-md-4 offset-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <div *ngIf=\\\"emailTo.invalid && (emailTo.dirty || emailTo.touched)\\\"\\n                 class=\\\"alert alert-danger\\\">\\n              <div *ngIf = \\\"emailTo.errors?.required\\\">\\n                Email field can't be blank\\n              </div>\\n              <div *ngIf = \\\"emailTo.errors?.dirty\\\">\\n                Enter in correct Format\\n              </div>\\n              <div *ngIf = \\\"emailTo.errors?.pattern && emailTo.touched\\\">\\n                The email id doesn't seem right\\n              </div>\\n            </div>\\n          </div>\\n        </td>\\n      </tr>\\n\\n\\n      <tr class=\\\"row\\\">\\n        <td class=\\\"col-md-6 offset-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Cc</label>\\n            <input type=\\\"text\\\"\\n                   id=\\\"ccEmail\\\"\\n                   [(ngModel)]=\\\"email.cc\\\"\\n                   name=\\\"cc\\\"\\n                   #emailCc = \\\"ngModel\\\"\\n                   pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"\\n                   placeholder=\\\"cc\\\"\\n                   class=\\\"form-control well well-sm\\\">\\n          </div>\\n        </td>\\n        <td class=\\\"col-md-4 offset-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <div *ngIf=\\\"emailCc.invalid && (emailCc.dirty || emailCc.touched)\\\"\\n                 class=\\\"alert alert-danger\\\">\\n              <div *ngIf = \\\"emailCc.errors?.required\\\">\\n                Email field can't be blank\\n              </div>\\n              <div *ngIf = \\\"emailCc.errors?.dirty\\\">\\n                Enter in correct Format\\n              </div>\\n              <div *ngIf = \\\"emailCc.errors?.pattern && emailCc.touched\\\">\\n                The email id doesn't seem right\\n              </div>\\n            </div>\\n          </div>\\n        </td>\\n      </tr>\\n      <tr class=\\\"row\\\">\\n        <td class=\\\"col-md-6 offset-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Bcc</label>\\n            <input type=\\\"text\\\"\\n                   id=\\\"bccEmail\\\"\\n                   [(ngModel)]=\\\"email.bcc\\\"\\n                   name=\\\"bcc\\\"\\n                   #emailBcc = \\\"ngModel\\\"\\n                   pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3},?$\\\"\\n                   placeholder=\\\"bcc\\\"\\n                   class=\\\"form-control well well-sm\\\">\\n          </div>\\n        </td>\\n        <td class=\\\"col-md-4 offset-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <div *ngIf=\\\"emailBcc.invalid && (emailBcc.dirty || emailBcc.touched)\\\"\\n                 class=\\\"alert alert-danger\\\">\\n              <div *ngIf = \\\"emailBcc.errors?.required\\\">\\n                Email field can't be blank\\n              </div>\\n              <div *ngIf = \\\"emailBcc.errors?.dirty\\\">\\n                Enter in correct Format\\n              </div>\\n              <div *ngIf = \\\"emailBcc.errors?.pattern && emailBcc.touched\\\">\\n                The email id doesn't seem right\\n              </div>\\n            </div>\\n          </div>\\n        </td>\\n      </tr>\\n      <tr class=\\\"row\\\">\\n        <td class=\\\"col-md-2 offset-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n\\n            <label class=\\\"control-label\\\" for=\\\"subjectEmail\\\">Subject</label>\\n            <textarea type=\\\"text\\\"\\n                   id=\\\"subjectEmail\\\"\\n                   [(ngModel)]=\\\"email.subject\\\"\\n                   name=\\\"subject\\\"\\n                   placeholder=\\\"subject\\\"\\n                   class=\\\"form-control well well-sm\\\"\\n                   required>\\n                   </textarea>\\n          </div>\\n        </td>\\n      </tr>\\n      <tr class=\\\"row\\\">\\n        <td class=\\\"col-md-2 offset-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n\\n            <label class=\\\"control-label\\\" for=\\\"subjectEmail\\\">Text</label>\\n            <textarea type=\\\"text\\\"\\n                   id=\\\"textEmail\\\"\\n                   [(ngModel)]=\\\"email.text\\\"\\n                   name=\\\"text\\\"\\n                   placeholder=\\\"text\\\"\\n                   #pwd = \\\"ngModel\\\"\\n                   minlength=\\\"8\\\"\\n                   class=\\\"form-control well well-sm\\\"\\n                   required>\\n                   </textarea>\\n          </div>\\n        </td>\\n      </tr>\\n    </table>\\n    <div class=\\\"form-group\\\" id=\\\"buttonTab\\\">\\n      <button type=\\\"reset\\\" class=\\\"btn btn-default\\\" id=\\\"buttonCancel\\\" >Cancel</button>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\n              [disabled]=\\\"!sendmailForm.form.valid\\\" id=\\\"buttonSubmit\\\">Submit</button>\\n    </div>\\n</form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params, Data } from '@angular/router';\nimport {Email} from \"../Email\";\nimport {FormBuilder} from \"@angular/forms\";\nimport {ApiService} from \"../api.service\";\nimport {ApiServiceMail} from \"../api.service.mail\";\nimport { HttpErrorResponse } from '@angular/common/http';\nimport{Eventdata} from \"../events/add-event.component\";\nimport { formatDate, DatePipe } from '@angular/common';\n@Component({\n  selector: 'app-send-mail',\n  templateUrl: './send-mail.component.html',\n  styleUrls: ['./send-mail.component.css']\n})\nexport class SendMailComponent implements OnInit {\n  public email:Email;\n  public eventData:Eventdata;\n  public resp:string;\n  pipe:any;\n  constructor(private apiService:ApiService,\n              private apiServiceMail: ApiServiceMail,private route: ActivatedRoute,public router:Router) { }\n  ngOnInit() {\n    this.eventData=new Eventdata(); this.eventData=new Eventdata();\n    this.email=new Email({to:this.route.snapshot.paramMap.get('emails'),cc:\"\",bcc:\"\",\n    text:\"\",eventId:this.route.snapshot.paramMap.get('id'),subject:\"\"});\n    this.apiService.getData('event',this.route.snapshot.paramMap.get('id'), false).subscribe((data:any)=>{\n      this.eventData.eventfromTime=data.eventfromTime;\n      this.eventData.eventtoTime=data.eventtoTime;\n      this.eventData.ngoName=data.ngoName;\n      this.eventData.eventName=data.eventName;\n      this.email.subject=this.createDefaultSubject(this.eventData.eventName,\n        this.eventData.ngoName,this.eventData.eventfromTime,this.eventData.eventtoTime);\n      console.log(this.eventData.eventfromTime);\n      console.log(this.eventData.eventtoTime);\n      console.log(this.eventData.ngoName);\n      console.log(this.eventData.eventName);\n      //this.getEmailId();\n      console.log(this.resp);\n      console.log(this.email.to);\n    },( err:HttpErrorResponse)=>{\n      console.log(err.message);\n   });\n  }\n\n  public onFormSubmit({value}:{value:Email}) {\n    console.log(value);\n    console.log(this.route.snapshot.paramMap.get(\"name\"));\n    //this.eventData.eventCategory='abc';\n    this.apiServiceMail.postData(this.email);\n   // console.log(\"hello mate, routing offf\");\n    //this.router.navigate(['selectVolenteer']);\n  }\n  public createDefaultSubject(eventName,ngoName,eventTo,eventFor)\n  {\n    return \"We invite You for event : \" + eventName + \"by NGO : \"+ngoName+\" from :\"+eventFor+\"to : \"+eventTo; \n  }\n\n  public  getEmailId()\n  {\n    //String resp;\n    this.apiServiceMail.getData().subscribe(response=>{\n      console.log('postResponse: ',response);\n     //return response.toString();\n     this.resp=response.toString();\n     \n     console.log(\"reponse is:\"+\" ....\"+(response as any).result);\n     this.email.to=this.resp;\n    });\n  }\n}\n","import{Injectable}from'@angular/core';\nimport {Http, Headers, RequestOptions,Response}from '@angular/http';\nimport {User} from \"../model/model.user\";\n\nimport {map}from 'rxjs/operators';\n\nimport {AppComponent}from \"../app.component\";\n@Injectable()\nexport class AuthService {\nconstructor(public http: Http) { }\n\n  public logIn(user: User){\n\n    let headers = new Headers();\n    headers.append('Accept', 'application/json')\n    // creating base64 encoded String from user name and password\n    var base64Credential: string = btoa( user.username+ ':' + user.password);\n    headers.append(\"Authorization\", \"Basic \" + base64Credential);\n\n    let options = new RequestOptions();\n    options.headers=headers;\n\n    return this.http.get(AppComponent.API_URL+\"/user/login\" , options)\n      .pipe(map((response: Response) => {\n      // login successful if there's a jwt token in the response\n      let user = response.json().principal;// the returned user object is a principal object\n      if (user) {\n        // store user details  in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user));\n      }\n    }));\n  }\n\n  logOut() {\n    // remove user from local storage to log user out\n    return this.http.post(AppComponent.API_URL+\"logout\",{})\n      .pipe(map((response: Response) => {\n        localStorage.removeItem('currentUser');\n      }));\n\n  }\n}\n","import{Injectable}from'@angular/core';\nimport {User}from \"../model/model.user\";\nimport {Http}from \"@angular/http\";\nimport {AppComponent}from \"../app.component\";\nimport {map}from 'rxjs/operators';\n\n\n@Injectable()\nexport class UserService {\nconstructor(public http: Http) { }\n\n  createAccount(user:User){\n    return this.http.post(AppComponent.API_URL+'/user/register',user)\n      .pipe(map(resp=>resp.json()));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest } from '@angular/common/http';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  constructor(private http: HttpClient,\n              private apiService : ApiService\n              ) { }\n\n  pushFileData(file: File){\n    let formData: FormData = new FormData();\n    formData.append('file', file);\n    let request = new HttpRequest('POST', '/api/bulk/upload', formData);\n    console.log(request);\n    return this.http.request(request);\n  }\n\n  saveBulkData(data){\n    let request = new HttpRequest('POST', '/api/bulk/save', data);\n    return this.http.request(request);\n    // return this.http.post('/api/bulk/save', data);\n  }\n}\n","import{Injectable}from'@angular/core';\nimport {Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot}from '@angular/router';\n\n@Injectable()\nexport class UrlPermission implements CanActivate {\n\nconstructor(private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (localStorage.getItem('currentUser')) {\n      // logged in so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n    return false;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZvbHVudGVlci1ncmlkL3ZvbHVudGVlci1ncmlkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"page-header well text-center well-sm\\\">\\n    <h3><strong> Volunteer </strong></h3>\\n  </div>\\n  <div  #myGrid  style=\\\"width: 100%; height: 600px;\\\">\\n    <ag-grid-angular style=\\\"height: 100%;\\\"\\n      class=\\\"ag-theme-balham\\\"\\n      [rowData]=\\\"data\\\"\\n      [columnDefs]=\\\"headers\\\"\\n      (rowClicked)=\\\"onRowCilcked($event)\\\"\\n      (gridReady)=\\\"onGridReady($event)\\\"\\n      [rowSelection]=\\\"rowSelection\\\"\\n      [gridOptions]=\\\"gridOptions\\\"\\n      >\\n    </ag-grid-angular>\\n  </div>\\n\\n  <div class=\\\"col-md-10\\\">\\n      <div style=\\\"text-align:right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"router.navigate(['/volunteer'])\\\">\\n          Add Volunteer\\n      </button>\\n      <button type=\\\"button\\\" (click)=\\\"onBtForEachNodeAfterFilterAndSort()\\\">\\n        send mail\\n        </button>\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-space\\\" (click)=\\\"router.navigate(['/bulk/volunteer'])\\\">\\n      Bulk Upload\\n    </button>\\n\\n  </div>\\n</div>\\n\"","\nimport { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {ngDevModeResetPerfCounters}from '@angular/core/src/render3/ng_dev_mode';\nimport { JsonPipe}from '@angular/common';\nimport { GridApi, Column } from 'ag-grid-community';\nimport {GridOptions} from 'ag-grid-community';\n\n\n\n@Component({\n  selector: 'app-volunteer-grid',\n  templateUrl: './volunteer-grid.component.html',\n  styleUrls: ['./volunteer-grid.component.css']\n})\n\n\nexport class VolunteerGridComponent implements OnInit {\n \n private data:any=[];\n private eventId:any;\n public  selectedEmails:any=\"\";\n   private headers=[\n     {headerName: 'First Name', field: 'firstName',filter:true, sortable: true,headerCheckboxSelection: true,\n     headerCheckboxSelectionFilteredOnly: true,\n     checkboxSelection: true },\n\n     {headerName: 'Last Name', field: 'lastName',filter:true},\n     {headerName: 'Phone Prefix', field: 'phonePrefix',filter:true},\n     {headerName: 'Phone Number', field: 'phoneNumber',filter:true},\n     {headerName: 'Phone Prefix', field: 'alternatePhonePrefix',filter:true},\n     {headerName: 'Alternate Phone Number', field: 'alternatePhoneNumber',filter:true},\n     {headerName: 'EmailId', field: 'email',filter:true},\n     {headerName: 'EmailId2', field: 'alternateEmail',filter:true},\n     {headerName: 'Locality', field: 'locality',filter:true},\n     {headerName: 'City', field: 'city',filter:true},\n     {headerName: 'State', field: 'state',filter:true},\n     {headerName: 'PinCode', field: 'pincode',filter:true},\n     {headerName: 'Interested Areas', field: 'interestedAreas',filter:true},\n     {headerName: 'PreferredTimings', field: 'volunteerPreferredTimings',filter:true}\n   ];\n   private myGrid: any;\n   private gridApi: any;\n   private gridOptions: any;\n   private gridColumnApi: any;\n   private rowSelection :any;\n   private columnDefs: Object[];\n   private emailsSelected: any;\n  interestedList:any[]=new Array();\n   constructor(private apiService:ApiService,\n               private router:Router,private route: ActivatedRoute,) { }\n               ngOnInit() {    \n                 this.emailsSelected=\"\";  \n    this.eventId=this.route.snapshot.paramMap.get('id')\n    this.rowSelection = \"multiple\";\n    this.apiService.getData('volunteer').subscribe(response=>{\n          let result:any=JSON.parse(JSON.stringify(response));\n          Array.from(result).forEach(element => {\n            let interestedAreas1=JSON.parse(JSON.stringify(element)).interestedAreas;\n            while(this.interestedList.length)\n            {\n              this.interestedList.pop();\n            }\n            for(var val of interestedAreas1)\n                {\n                console.log(\"hey:\"+val[\"interestedArea\"]);\n                this.interestedList.push(val[\"interestedArea\"]);\n                }\n            Object.assign(element, {interestedAreas: this.interestedList.toString()\n            });\n          });\n          console.log(response);\n          console.log(this.data);\n          this.data=result;\n          \n          \n        });\n    }\n   onGridReady(params) {\n      \n      //this.gridOptions=params.GridOptions;\n      console.log(\"You are here\");\n      this.gridApi = params.api;\n      this.gridColumnApi = params.columnApi;\n      this.gridColumnApi.columnDefs=params.columnDefs;\n      this.gridOptions = <GridOptions>{\n        context: {parentComponent: this},\n      };\n      //new agGrid.Grid( this.gridOptions)\n    }\n\n   onRowCilcked(event){\n     console.log(event.rowIndex);\n    // this.router.navigateByUrl(\"/volunteer/edit/\"+((event.rowIndex)+1));\n       //console.log(this.printAllDisplayedRows());\n       console.log(\"### api.forEachNodeAfterFilterAndSort() ###\");\n       //this.gridApi.forEachNodeAfterFilterAndSort(this.printNode);\n     //  this.gridApi.getSelectedNodes().forEach(node=>{console.log(node.data.email)});\n      this.onBtForEachNodeAfterFilterAndSort();\n     }\n\n     onBtForEachNodeAfterFilterAndSort() {\n      console.log(\"### api.forEachNodeAfterFilterAndSort() ###\");\n      //this.gridApi.forEachNodeAfterFilterAndSort(this.printNode);\n\n      this.gridApi.getSelectedNodes().forEach(node=>{this.appendEmails(node.data.email)});\n      this.router.navigate(['email',{id:this.eventId,emails:this.emailsSelected}]);\n    }\n    \n     printNode(node, index) {\n      if (node.group) {\n        console.log(index + \" -> group: \" + node.key);\n      } else {\n        console.log(index + \" -> data: \" + node.data.city + \", \" + node.data.email);\n      }\n    }\n    \n    appendEmails(email)\n    {\n    if(this.emailsSelected==\"\")\n    this.emailsSelected=email;\n    else\n    this.emailsSelected=this.emailsSelected+\",\"+email;\n    }\n\n}\n","module.exports = \"\\n.text-on-pannel {\\n  background: #fff none repeat scroll 0 0;\\n  height: auto;\\n  margin-left: 20px;\\n  padding: 3px 5px;\\n  position: absolute;\\n  margin-top: -20px;\\n  border: 1px solid #337ab7;\\n  border-radius: 8px;\\n}\\n\\n.panel {\\n\\n  margin-top: 27px a!important;\\n}\\n\\n.panel-body {\\n  padding-top: 30px !important;\\n}\\n\\n.field-invalid\\n{\\ncolor:pink;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdm9sdW50ZWVyL3ZvbHVudGVlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLHVDQUF1QztFQUN2QyxZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLHlCQUF5QjtFQUN6QixrQkFBa0I7QUFDcEI7O0FBRUE7O0VBRUUsNEJBQTRCO0FBQzlCOztBQUVBO0VBQ0UsNEJBQTRCO0FBQzlCOztBQUVBOztBQUVBLFVBQVU7QUFDViIsImZpbGUiOiJzcmMvYXBwL3ZvbHVudGVlci92b2x1bnRlZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLnRleHQtb24tcGFubmVsIHtcbiAgYmFja2dyb3VuZDogI2ZmZiBub25lIHJlcGVhdCBzY3JvbGwgMCAwO1xuICBoZWlnaHQ6IGF1dG87XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBwYWRkaW5nOiAzcHggNXB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIG1hcmdpbi10b3A6IC0yMHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMzM3YWI3O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG59XG5cbi5wYW5lbCB7XG5cbiAgbWFyZ2luLXRvcDogMjdweCBhIWltcG9ydGFudDtcbn1cblxuLnBhbmVsLWJvZHkge1xuICBwYWRkaW5nLXRvcDogMzBweCAhaW1wb3J0YW50O1xufVxuXG4uZmllbGQtaW52YWxpZFxue1xuY29sb3I6cGluaztcbn1cbiJdfQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"page-header well well-sm text-center\\\">\\n    <h3><strong> Volunteer Registration</strong></h3>\\n  </div>\\n  <div class=\\\"panel panel-info\\\" >\\n   <!-- <fieldset>\\n\\n    <legend>Personal Details</legend>-->\\n    <!--<h3 class=\\\"text-on-pannel text-primary\\\"><strong class=\\\"text-uppercase\\\"> Personal Information</strong></h3>-->\\n  <div class=\\\"panel-heading\\\">\\n    <label>Personal Information</label>\\n  </div>\\n  <div class=\\\"panel-body\\\" >\\n    <form  [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"personalInfo()\\\">\\n    <div  formGroupName=\\\"personalInfo\\\">\\n\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group required\\\">\\n              <label class=\\\"control-label\\\">First Name</label>\\n              <input type=\\\"text\\\" formControlName = \\\"firstName\\\" class=\\\"form-control well well-sm\\\"[ngClass]=\\\"{'is-invalid':myForm.controls['personalInfo'].controls.firstName.errors&&(myForm.controls['personalInfo'].controls.firstName.dirty||myForm.controls['personalInfo'].controls.firstName.touched)}\\\">\\n              <div *ngIf=\\\"myForm.controls['personalInfo'].controls.firstName.errors&&(myForm.controls['personalInfo'].controls.firstName.dirty||myForm.controls['personalInfo'].controls.firstName.touched)\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"myForm.controls['personalInfo'].controls.firstName.errors.required\\\" class=\\\"field-invalid\\\">First Name is required</div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group required\\\">\\n              <label class=\\\"control-label\\\">Last Name</label>\\n              <input type=\\\"text\\\" formControlName = \\\"lastName\\\" class=\\\"form-control well well-sm\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n\\n\\n\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group required\\\">\\n              <label class=\\\"control-label\\\">Contact Number</label>\\n              <input type=\\\"text\\\" formControlName = \\\"phoneNumber\\\" class=\\\"form-control well well-sm\\\">\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Alternate Contact Number</label>\\n              <input type=\\\"text\\\" formControlName = \\\"alternatePhoneNumber\\\" class=\\\"form-control well well-sm\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"form-group required\\\">\\n              <label class=\\\"control-label\\\">Email</label>\\n              <input type=\\\"text\\\" formControlName = \\\"email\\\" class=\\\"form-control well well-sm\\\">\\n            </div>\\n          </div>\\n\\n\\n\\n\\n\\n\\n\\n        </div>\\n\\n\\n    </div>\\n    </form>\\n  </div>\\n    <!--</fieldset>-->\\n  </div>\\n\\n  <div class=\\\"panel panel-info\\\">\\n    <!--<fieldset>\\n\\n      <legend>Address</legend>-->\\n\\n    <!--<h3 class=\\\"text-on-pannel text-primary\\\"><strong class=\\\"text-uppercase\\\"> Address</strong></h3>-->\\n    <div class=\\\"panel-heading\\\">\\n      <label>Address</label>\\n    </div>\\n      <div class=\\\"panel-body\\\">\\n        <form [formGroup]=\\\"myForm\\\" >\\n        <div formGroupName=\\\"address\\\">\\n\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\n                <div class=\\\"form-group required\\\">\\n                  <label class=\\\"control-label\\\">Locality</label>\\n                  <input type=\\\"text\\\" formControlName = \\\"locality\\\" class=\\\"form-control well well-sm\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\n                <div class=\\\"form-group required\\\">\\n                  <label class=\\\"control-label\\\">City</label>\\n                  <input type=\\\"text\\\" formControlName = \\\"city\\\" class=\\\"form-control well well-sm\\\">\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\n                <div class=\\\"form-group required\\\">\\n                  <label class=\\\"control-label\\\">State</label>\\n                  <input type=\\\"text\\\" formControlName = \\\"state\\\" class=\\\"form-control well well-sm\\\">\\n                </div>\\n              </div>\\n\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\n                <div class=\\\"form-group required\\\">\\n                  <label class=\\\"control-label\\\">Pin Code</label>\\n                  <input type=\\\"text\\\" formControlName = \\\"pincode\\\" class=\\\"form-control well well-sm\\\">\\n                </div>\\n              </div>\\n            </div>\\n\\n\\n        </div>\\n        </form>\\n      </div>\\n   <!-- </fieldset>-->\\n  </div>\\n  <div class=\\\"panel panel-info\\\">\\n    <!--<fieldset>\\n\\n      <legend>Additional Information</legend>-->\\n   <!-- <h3 class=\\\"text-on-pannel text-primary\\\"><strong class=\\\"text-uppercase\\\"> Additional Information </strong></h3>-->\\n      <div class=\\\"panel-heading\\\">\\n        <label>Additional Information</label>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"additionalInfo()\\\">\\n        <div formGroupName=\\\"additionalInfo\\\">\\n\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 offset-md-3\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\">Interest Areas</label>\\n\\n\\n\\n                  <angular2-multiselect [data]=\\\"interestedAreasCategory\\\" [settings]=\\\"dropdownSettings\\\" (onSelect)=\\\"log($event)\\\" [(ngModel)]=\\\"selectedList\\\"\\n                                        (onDeSelect)=\\\"log($event)\\\" (onSelectAll)=\\\"log($event)\\\" (onDeSelectAll)=\\\"log($event)\\\"\\n                                        formControlName=\\\"interestedAreas\\\">\\n                  </angular2-multiselect>\\n\\n                  <!--<angular2-multiselect [data]=\\\"interestedAreasCategory\\\" [(ngModel)]=\\\"selectedList\\\" formControlName=\\\"interestedAreas\\\" settings=\\\"dropdownSettings\\\"></angular2-multiselect>\\n-->\\n                </div>\\n              </div>\\n            </div>\\n          <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6 offset-md-3\\\">\\n                  <div class=\\\"form-group \\\">\\n                    <label class=\\\"control-label\\\">Preferred Timings</label>\\n                    <!-- <input type=\\\"text\\\" formControlName=\\\"mouStatus\\\" class=\\\"form-control well well-sm\\\"> -->\\n                    <select formControlName=\\\"volunteerPreferredTimes\\\" class=\\\"form-control\\\">\\n                      <option *ngFor=\\\"let action of preferredTimings\\\" [value]=\\\"action\\\">{{action}}</option>\\n                    </select>\\n                  </div>\\n                </div\\n                >\\n              </div>\\n\\n            </div>\\n\\n\\n\\n\\n\\n\\n        </form>\\n\\n      </div>\\n    <!--</fieldset>-->\\n  </div>\\n  <div class=\\\"text-center\\\">\\n <!-- <button  class=\\\"btn btn-default\\\" (click)=\\\"onSubmit()\\\">Register</button>-->\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"onSubmit()\\\"  *ngIf=\\\"mode!='view' && mode!='edit'\\\">Register</button>\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"onSubmit()\\\" *ngIf=\\\"mode=='edit'\\\" >Update</button>\\n\\n    <button class=\\\"btn btn-default\\\"(click)=\\\"onEdit()\\\" *ngIf=\\\"mode=='view'\\\">Edit</button>\\n    <button class=\\\"btn btn-default\\\"(click)=\\\"onClose()\\\" *ngIf=\\\"mode=='view' || mode=='edit'\\\" >Close</button>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit, Injectable, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiService } from '../api.service'\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport {InventorydataService} from '../inventory-data/inventorydata.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { NgOnChangesFeature } from '@angular/core/src/render3';\n@Component({\n  selector: 'app-volunteer',\n  templateUrl: './volunteer.component.html',\n  styleUrls: ['./volunteer.component.css']\n})\nexport class VolunteerComponent implements OnInit, AfterViewInit {\n\n  myForm: FormGroup;\n  interestedAreasCategorydata: any[];\n\n interestedAreasCategory=[];\n\n  selectedList: any[];\n  interestedList: any[] = new Array();\n  private mode: String;\n  private id: number;\n  dropdownSettings = {};\n  preferredTimings:string[]=['Weekdays','Weekends','Both Weekdays and Weekends'];\n\n  constructor(private formBuilder: FormBuilder, private inventoryService: InventorydataService,\n    private apiService: ApiService, private route: ActivatedRoute, private router: Router) { }\n\n\n  ngOnInit() {\n\n    this.myForm = this.formBuilder.group({\n      personalInfo: this.personalInfo(),\n      address: this.address(),\n      additionalInfo: this.additionalInfo()\n\n    });\n\n\n    this.inventoryService.getEventCategoryList().subscribe((data: any) => {\n          this.interestedAreasCategorydata=data;\n                      this.interestedAreasCategory=this.interestedAreasCategorydata.map(interestedAreasCategory=>{\n                        console.log(\"888\",interestedAreasCategory.value);\n\n                          return {\"id\":interestedAreasCategory.key,\"itemName\":interestedAreasCategory.value};\n\n                      });\n        }, (err: HttpErrorResponse) => {\n          console.log(err.message);\n        });\n\n  //  this.interestedAreasCategory = [\n   //   { \"id\": 1, \"itemName\": \"Education\" },\n    //  { \"id\": 2, \"itemName\": \"Health\" },\n     // { \"id\": 3, \"itemName\": \"Environment\" }\n\n    //];\n\n\n\n\n\n\n\n    this.dropdownSettings = {\n      singleSelection: false,\n      text: \"Select Interested Areas\",\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      enableSearchFilter: true,\n      classes: \"myclass custom-class\"\n    };\n    this.route.paramMap.subscribe(params => {\n      console.log(params);\n      if (params.get('mode')) {\n        this.mode = params.get('mode');\n        this.id = +params.get('id');\n      }\n      if (this.id) {\n        if (!isNaN(this.id)) {\n\n           this.apiService.getData('volunteer', this.id, true).subscribe(result => {\n            let data = JSON.parse(JSON.stringify(result));\n            console.log(\"GetResponse: \" + data);\n            data.additionalInfo.interestedAreas=data.additionalInfo.interestedAreas.map(interestedArea1=>({\n                        id:interestedArea1.interestedAreaId,\n                        itemName:interestedArea1.interestedArea\n                      }));\n\n\n\n\n\n            this.myForm.setValue(data);\n          });\n        } else {\n          alert('Error in ID');\n        }\n      }\n    });\n\n  }\n\n\n  ngAfterViewInit() {\n    if (this.mode == 'view') {\n      Array.from(document.getElementsByClassName('form-control')).forEach(element => {\n        (<HTMLInputElement>element).disabled = true;\n      });\n    } else {\n      Array.from(document.getElementsByClassName('form-control')).forEach(element => {\n        (<HTMLInputElement>element).disabled = false;\n      });\n\n    }\n\n\n  }\n  log($event)\n  {\n  }\n\n  personalInfo(): FormGroup {\n\n    const aboutVolunteer = this.formBuilder.group({\n      firstName: ['', [\n        Validators.required, Validators.maxLength(50)\n      ]],\n      lastName: ['', [\n        Validators.required, Validators.maxLength(50)\n      ]],\n\n      phoneNumber: ['', [\n        Validators.required, Validators.pattern(\"^[0-9]+$\"), Validators.minLength(10), Validators.maxLength(10)\n      ]],\n      alternatePhoneNumber: ['', [\n        Validators.pattern(\"^[0-9]+$\"), Validators.minLength(10), Validators.maxLength(10)\n      ]],\n      email: ['', [\n        Validators.email, Validators.maxLength(50)\n      ]]\n\n    });\n    return aboutVolunteer;\n  }\n\n  address(): FormGroup {\n\n    const address = this.formBuilder.group({\n      locality: ['', [\n        Validators.required, Validators.maxLength(2000)\n      ]],\n      state: ['', [\n        Validators.required, Validators.maxLength(50)\n      ]],\n      city: ['', [\n        Validators.required, Validators.maxLength(50)\n      ]],\n      pincode: ['', [\n        Validators.pattern(\"^[0-9]+$\"), Validators.minLength(6), Validators.maxLength(6)\n      ]]\n    });\n    return address;\n  }\n  additionalInfo(): FormGroup {\n    let me = this;\n    const additionalInfo = this.formBuilder.group({\n      interestedAreas: ['', [\n\n      ]],\n      volunteerPreferredTimes:['',[\n\n      ]]\n\n    });\n    return additionalInfo;\n  }\n\n\n\n\n  onEdit() {\n    this.router.navigateByUrl(\"/volunteer/edit/\" + this.id);\n\n  }\n\n  onClose() {\n    console.log(\"came to close\");\n    this.router.navigateByUrl(\"/grid/volunteer\");\n  }\n\n\n\n  onSubmit() {\n    console.log(\"Insubmit\");\n    this.interestedList=this.myForm.get('additionalInfo').get('interestedAreas').value.map(interestedArea=>{return {\"interestedArea\":interestedArea.itemName,\"interestedAreaId\":interestedArea.id};});\n\n\n\n     if (this.myForm.valid) {\n      console.log(\"valid\");\n      let json = Object.assign(this.myForm.get('personalInfo').value, this.myForm.get('address').value, { interestedAreas: this.interestedList },{volunteerPreferredTimes:this.myForm.get('additionalInfo').get('volunteerPreferredTimes').value});\n      if (this.mode == 'edit') {\n        json = Object.assign(json, { id: this.id });\n      }\n\n      console.log('submitting: ', json);\n\n      let response = this.apiService.postData(json, 'volunteer');\n      console.log(\"response is\" + response);\n      while (this.interestedList.length) {\n        this.interestedList.pop();\n      }\n      if (response) {\n        if (this.mode == 'edit') {\n          alert('Succesfully updated Volunteer');\n        } else {\n          alert('Succesfully registered Volunteer');\n        }\n        this.router.navigateByUrl(\"/grid/volunteer\");\n      }\n\n\n\n    }\n    else { console.log(\"invalid\");alert('please fill all the mandatory details'); } console.log(\"address is\" + this.myForm.valid);\n  }\n\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dlbGNvbWUvd2VsY29tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-1\\\"></div>\\n<div class=\\\"col-md-10\\\">\\n  <p style=\\\"text-align: justify;\\\">Youth for Seva (YFS), founded in April 2007, is a nation-wide volunteering movement that inspires youth to volunteer, and provides them with meaningful opportunities to serve the community.</p>\\n  <p style=\\\"text-align: justify;\\\">The goal of YFS is to support schools, destitute shelters, government hospitals and other organizations in the social sector through volunteers who can help them mitigate some of their shortcomings and challenges. Volunteering is made easy and customized to the individual’s interests, time availability and skill sets.</p>\\n  <p style=\\\"text-align: justify;\\\">YFS aims to create positive change agents in the society, through the culture of volunteering.</p>\\n  <p style=\\\"text-align: justify;\\\"><strong>Vision</strong>:</p>\\n  <p style=\\\"text-align: justify;\\\">Self-reliant communities powered by selfless individuals.</p>\\n  <p style=\\\"text-align: justify;\\\"><strong>Mission:</strong></p>\\n  <div>\\n    <ul>\\n      <li>To facilitate a movement of volunteering.</li>\\n      <li>To empower and enable individuals to become positive change agents.</li>\\n      <li>To enable institutions to effectively engage community to deliver services.</li>\\n      <li>To promote sustainable lifestyles.</li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"col-md-1\\\"></div>\\n\\n\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { HttpRequest, HttpInterceptor, HttpHandler } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class XhrInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const xhr = req.clone({\n      headers: req.headers.set('X-Requested-With', 'XMLHttpRequest')\n    });\n    return next.handle(xhr);\n  }\n}\n","export const environment = {\n  production: true,\n  serverHost:'.'\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverHost:'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}